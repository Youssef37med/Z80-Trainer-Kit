

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 27 17:19:17 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	functab,global,class=ENTRY,delta=2
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Version 2.40
    57                           ; Generated 17/11/2021 GMT
    58                           ; 
    59                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F877A Definitions
    89                           ; 
    90                           ; SFR Addresses
    91     0000                     	;# 
    92     0001                     	;# 
    93     0002                     	;# 
    94     0003                     	;# 
    95     0004                     	;# 
    96     0005                     	;# 
    97     0006                     	;# 
    98     0007                     	;# 
    99     0008                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0017                     	;# 
   117     0018                     	;# 
   118     0019                     	;# 
   119     001A                     	;# 
   120     001B                     	;# 
   121     001B                     	;# 
   122     001C                     	;# 
   123     001D                     	;# 
   124     001E                     	;# 
   125     001F                     	;# 
   126     0081                     	;# 
   127     0085                     	;# 
   128     0086                     	;# 
   129     0087                     	;# 
   130     0088                     	;# 
   131     0089                     	;# 
   132     008C                     	;# 
   133     008D                     	;# 
   134     008E                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0093                     	;# 
   138     0094                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009C                     	;# 
   142     009D                     	;# 
   143     009E                     	;# 
   144     009F                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009C                     	;# 
   202     009D                     	;# 
   203     009E                     	;# 
   204     009F                     	;# 
   205     010C                     	;# 
   206     010D                     	;# 
   207     010E                     	;# 
   208     010F                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     0091                     	;# 
   256     0092                     	;# 
   257     0093                     	;# 
   258     0094                     	;# 
   259     0098                     	;# 
   260     0099                     	;# 
   261     009C                     	;# 
   262     009D                     	;# 
   263     009E                     	;# 
   264     009F                     	;# 
   265     010C                     	;# 
   266     010D                     	;# 
   267     010E                     	;# 
   268     010F                     	;# 
   269     018C                     	;# 
   270     018D                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     000E                     	;# 
   286     000E                     	;# 
   287     000F                     	;# 
   288     0010                     	;# 
   289     0011                     	;# 
   290     0012                     	;# 
   291     0013                     	;# 
   292     0014                     	;# 
   293     0015                     	;# 
   294     0015                     	;# 
   295     0016                     	;# 
   296     0017                     	;# 
   297     0018                     	;# 
   298     0019                     	;# 
   299     001A                     	;# 
   300     001B                     	;# 
   301     001B                     	;# 
   302     001C                     	;# 
   303     001D                     	;# 
   304     001E                     	;# 
   305     001F                     	;# 
   306     0081                     	;# 
   307     0085                     	;# 
   308     0086                     	;# 
   309     0087                     	;# 
   310     0088                     	;# 
   311     0089                     	;# 
   312     008C                     	;# 
   313     008D                     	;# 
   314     008E                     	;# 
   315     0091                     	;# 
   316     0092                     	;# 
   317     0093                     	;# 
   318     0094                     	;# 
   319     0098                     	;# 
   320     0099                     	;# 
   321     009C                     	;# 
   322     009D                     	;# 
   323     009E                     	;# 
   324     009F                     	;# 
   325     010C                     	;# 
   326     010D                     	;# 
   327     010E                     	;# 
   328     010F                     	;# 
   329     018C                     	;# 
   330     018D                     	;# 
   331     0000                     	;# 
   332     0001                     	;# 
   333     0002                     	;# 
   334     0003                     	;# 
   335     0004                     	;# 
   336     0005                     	;# 
   337     0006                     	;# 
   338     0007                     	;# 
   339     0008                     	;# 
   340     0009                     	;# 
   341     000A                     	;# 
   342     000B                     	;# 
   343     000C                     	;# 
   344     000D                     	;# 
   345     000E                     	;# 
   346     000E                     	;# 
   347     000F                     	;# 
   348     0010                     	;# 
   349     0011                     	;# 
   350     0012                     	;# 
   351     0013                     	;# 
   352     0014                     	;# 
   353     0015                     	;# 
   354     0015                     	;# 
   355     0016                     	;# 
   356     0017                     	;# 
   357     0018                     	;# 
   358     0019                     	;# 
   359     001A                     	;# 
   360     001B                     	;# 
   361     001B                     	;# 
   362     001C                     	;# 
   363     001D                     	;# 
   364     001E                     	;# 
   365     001F                     	;# 
   366     0081                     	;# 
   367     0085                     	;# 
   368     0086                     	;# 
   369     0087                     	;# 
   370     0088                     	;# 
   371     0089                     	;# 
   372     008C                     	;# 
   373     008D                     	;# 
   374     008E                     	;# 
   375     0091                     	;# 
   376     0092                     	;# 
   377     0093                     	;# 
   378     0094                     	;# 
   379     0098                     	;# 
   380     0099                     	;# 
   381     009C                     	;# 
   382     009D                     	;# 
   383     009E                     	;# 
   384     009F                     	;# 
   385     010C                     	;# 
   386     010D                     	;# 
   387     010E                     	;# 
   388     010F                     	;# 
   389     018C                     	;# 
   390     018D                     	;# 
   391     0000                     	;# 
   392     0001                     	;# 
   393     0002                     	;# 
   394     0003                     	;# 
   395     0004                     	;# 
   396     0005                     	;# 
   397     0006                     	;# 
   398     0007                     	;# 
   399     0008                     	;# 
   400     0009                     	;# 
   401     000A                     	;# 
   402     000B                     	;# 
   403     000C                     	;# 
   404     000D                     	;# 
   405     000E                     	;# 
   406     000E                     	;# 
   407     000F                     	;# 
   408     0010                     	;# 
   409     0011                     	;# 
   410     0012                     	;# 
   411     0013                     	;# 
   412     0014                     	;# 
   413     0015                     	;# 
   414     0015                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001B                     	;# 
   422     001C                     	;# 
   423     001D                     	;# 
   424     001E                     	;# 
   425     001F                     	;# 
   426     0081                     	;# 
   427     0085                     	;# 
   428     0086                     	;# 
   429     0087                     	;# 
   430     0088                     	;# 
   431     0089                     	;# 
   432     008C                     	;# 
   433     008D                     	;# 
   434     008E                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0094                     	;# 
   439     0098                     	;# 
   440     0099                     	;# 
   441     009C                     	;# 
   442     009D                     	;# 
   443     009E                     	;# 
   444     009F                     	;# 
   445     010C                     	;# 
   446     010D                     	;# 
   447     010E                     	;# 
   448     010F                     	;# 
   449     018C                     	;# 
   450     018D                     	;# 
   451     0000                     	;# 
   452     0001                     	;# 
   453     0002                     	;# 
   454     0003                     	;# 
   455     0004                     	;# 
   456     0005                     	;# 
   457     0006                     	;# 
   458     0007                     	;# 
   459     0008                     	;# 
   460     0009                     	;# 
   461     000A                     	;# 
   462     000B                     	;# 
   463     000C                     	;# 
   464     000D                     	;# 
   465     000E                     	;# 
   466     000E                     	;# 
   467     000F                     	;# 
   468     0010                     	;# 
   469     0011                     	;# 
   470     0012                     	;# 
   471     0013                     	;# 
   472     0014                     	;# 
   473     0015                     	;# 
   474     0015                     	;# 
   475     0016                     	;# 
   476     0017                     	;# 
   477     0018                     	;# 
   478     0019                     	;# 
   479     001A                     	;# 
   480     001B                     	;# 
   481     001B                     	;# 
   482     001C                     	;# 
   483     001D                     	;# 
   484     001E                     	;# 
   485     001F                     	;# 
   486     0081                     	;# 
   487     0085                     	;# 
   488     0086                     	;# 
   489     0087                     	;# 
   490     0088                     	;# 
   491     0089                     	;# 
   492     008C                     	;# 
   493     008D                     	;# 
   494     008E                     	;# 
   495     0091                     	;# 
   496     0092                     	;# 
   497     0093                     	;# 
   498     0094                     	;# 
   499     0098                     	;# 
   500     0099                     	;# 
   501     009C                     	;# 
   502     009D                     	;# 
   503     009E                     	;# 
   504     009F                     	;# 
   505     010C                     	;# 
   506     010D                     	;# 
   507     010E                     	;# 
   508     010F                     	;# 
   509     018C                     	;# 
   510     018D                     	;# 
   511     0000                     	;# 
   512     0001                     	;# 
   513     0002                     	;# 
   514     0003                     	;# 
   515     0004                     	;# 
   516     0005                     	;# 
   517     0006                     	;# 
   518     0007                     	;# 
   519     0008                     	;# 
   520     0009                     	;# 
   521     000A                     	;# 
   522     000B                     	;# 
   523     000C                     	;# 
   524     000D                     	;# 
   525     000E                     	;# 
   526     000E                     	;# 
   527     000F                     	;# 
   528     0010                     	;# 
   529     0011                     	;# 
   530     0012                     	;# 
   531     0013                     	;# 
   532     0014                     	;# 
   533     0015                     	;# 
   534     0015                     	;# 
   535     0016                     	;# 
   536     0017                     	;# 
   537     0018                     	;# 
   538     0019                     	;# 
   539     001A                     	;# 
   540     001B                     	;# 
   541     001B                     	;# 
   542     001C                     	;# 
   543     001D                     	;# 
   544     001E                     	;# 
   545     001F                     	;# 
   546     0081                     	;# 
   547     0085                     	;# 
   548     0086                     	;# 
   549     0087                     	;# 
   550     0088                     	;# 
   551     0089                     	;# 
   552     008C                     	;# 
   553     008D                     	;# 
   554     008E                     	;# 
   555     0091                     	;# 
   556     0092                     	;# 
   557     0093                     	;# 
   558     0094                     	;# 
   559     0098                     	;# 
   560     0099                     	;# 
   561     009C                     	;# 
   562     009D                     	;# 
   563     009E                     	;# 
   564     009F                     	;# 
   565     010C                     	;# 
   566     010D                     	;# 
   567     010E                     	;# 
   568     010F                     	;# 
   569     018C                     	;# 
   570     018D                     	;# 
   571     0000                     	;# 
   572     0001                     	;# 
   573     0002                     	;# 
   574     0003                     	;# 
   575     0004                     	;# 
   576     0005                     	;# 
   577     0006                     	;# 
   578     0007                     	;# 
   579     0008                     	;# 
   580     0009                     	;# 
   581     000A                     	;# 
   582     000B                     	;# 
   583     000C                     	;# 
   584     000D                     	;# 
   585     000E                     	;# 
   586     000E                     	;# 
   587     000F                     	;# 
   588     0010                     	;# 
   589     0011                     	;# 
   590     0012                     	;# 
   591     0013                     	;# 
   592     0014                     	;# 
   593     0015                     	;# 
   594     0015                     	;# 
   595     0016                     	;# 
   596     0017                     	;# 
   597     0018                     	;# 
   598     0019                     	;# 
   599     001A                     	;# 
   600     001B                     	;# 
   601     001B                     	;# 
   602     001C                     	;# 
   603     001D                     	;# 
   604     001E                     	;# 
   605     001F                     	;# 
   606     0081                     	;# 
   607     0085                     	;# 
   608     0086                     	;# 
   609     0087                     	;# 
   610     0088                     	;# 
   611     0089                     	;# 
   612     008C                     	;# 
   613     008D                     	;# 
   614     008E                     	;# 
   615     0091                     	;# 
   616     0092                     	;# 
   617     0093                     	;# 
   618     0094                     	;# 
   619     0098                     	;# 
   620     0099                     	;# 
   621     009C                     	;# 
   622     009D                     	;# 
   623     009E                     	;# 
   624     009F                     	;# 
   625     010C                     	;# 
   626     010D                     	;# 
   627     010E                     	;# 
   628     010F                     	;# 
   629     018C                     	;# 
   630     018D                     	;# 
   631     0000                     	;# 
   632     0001                     	;# 
   633     0002                     	;# 
   634     0003                     	;# 
   635     0004                     	;# 
   636     0005                     	;# 
   637     0006                     	;# 
   638     0007                     	;# 
   639     0008                     	;# 
   640     0009                     	;# 
   641     000A                     	;# 
   642     000B                     	;# 
   643     000C                     	;# 
   644     000D                     	;# 
   645     000E                     	;# 
   646     000E                     	;# 
   647     000F                     	;# 
   648     0010                     	;# 
   649     0011                     	;# 
   650     0012                     	;# 
   651     0013                     	;# 
   652     0014                     	;# 
   653     0015                     	;# 
   654     0015                     	;# 
   655     0016                     	;# 
   656     0017                     	;# 
   657     0018                     	;# 
   658     0019                     	;# 
   659     001A                     	;# 
   660     001B                     	;# 
   661     001B                     	;# 
   662     001C                     	;# 
   663     001D                     	;# 
   664     001E                     	;# 
   665     001F                     	;# 
   666     0081                     	;# 
   667     0085                     	;# 
   668     0086                     	;# 
   669     0087                     	;# 
   670     0088                     	;# 
   671     0089                     	;# 
   672     008C                     	;# 
   673     008D                     	;# 
   674     008E                     	;# 
   675     0091                     	;# 
   676     0092                     	;# 
   677     0093                     	;# 
   678     0094                     	;# 
   679     0098                     	;# 
   680     0099                     	;# 
   681     009C                     	;# 
   682     009D                     	;# 
   683     009E                     	;# 
   684     009F                     	;# 
   685     010C                     	;# 
   686     010D                     	;# 
   687     010E                     	;# 
   688     010F                     	;# 
   689     018C                     	;# 
   690     018D                     	;# 
   691     0000                     	;# 
   692     0001                     	;# 
   693     0002                     	;# 
   694     0003                     	;# 
   695     0004                     	;# 
   696     0005                     	;# 
   697     0006                     	;# 
   698     0007                     	;# 
   699     0008                     	;# 
   700     0009                     	;# 
   701     000A                     	;# 
   702     000B                     	;# 
   703     000C                     	;# 
   704     000D                     	;# 
   705     000E                     	;# 
   706     000E                     	;# 
   707     000F                     	;# 
   708     0010                     	;# 
   709     0011                     	;# 
   710     0012                     	;# 
   711     0013                     	;# 
   712     0014                     	;# 
   713     0015                     	;# 
   714     0015                     	;# 
   715     0016                     	;# 
   716     0017                     	;# 
   717     0018                     	;# 
   718     0019                     	;# 
   719     001A                     	;# 
   720     001B                     	;# 
   721     001B                     	;# 
   722     001C                     	;# 
   723     001D                     	;# 
   724     001E                     	;# 
   725     001F                     	;# 
   726     0081                     	;# 
   727     0085                     	;# 
   728     0086                     	;# 
   729     0087                     	;# 
   730     0088                     	;# 
   731     0089                     	;# 
   732     008C                     	;# 
   733     008D                     	;# 
   734     008E                     	;# 
   735     0091                     	;# 
   736     0092                     	;# 
   737     0093                     	;# 
   738     0094                     	;# 
   739     0098                     	;# 
   740     0099                     	;# 
   741     009C                     	;# 
   742     009D                     	;# 
   743     009E                     	;# 
   744     009F                     	;# 
   745     010C                     	;# 
   746     010D                     	;# 
   747     010E                     	;# 
   748     010F                     	;# 
   749     018C                     	;# 
   750     018D                     	;# 
   751     0000                     	;# 
   752     0001                     	;# 
   753     0002                     	;# 
   754     0003                     	;# 
   755     0004                     	;# 
   756     0005                     	;# 
   757     0006                     	;# 
   758     0007                     	;# 
   759     0008                     	;# 
   760     0009                     	;# 
   761     000A                     	;# 
   762     000B                     	;# 
   763     000C                     	;# 
   764     000D                     	;# 
   765     000E                     	;# 
   766     000E                     	;# 
   767     000F                     	;# 
   768     0010                     	;# 
   769     0011                     	;# 
   770     0012                     	;# 
   771     0013                     	;# 
   772     0014                     	;# 
   773     0015                     	;# 
   774     0015                     	;# 
   775     0016                     	;# 
   776     0017                     	;# 
   777     0018                     	;# 
   778     0019                     	;# 
   779     001A                     	;# 
   780     001B                     	;# 
   781     001B                     	;# 
   782     001C                     	;# 
   783     001D                     	;# 
   784     001E                     	;# 
   785     001F                     	;# 
   786     0081                     	;# 
   787     0085                     	;# 
   788     0086                     	;# 
   789     0087                     	;# 
   790     0088                     	;# 
   791     0089                     	;# 
   792     008C                     	;# 
   793     008D                     	;# 
   794     008E                     	;# 
   795     0091                     	;# 
   796     0092                     	;# 
   797     0093                     	;# 
   798     0094                     	;# 
   799     0098                     	;# 
   800     0099                     	;# 
   801     009C                     	;# 
   802     009D                     	;# 
   803     009E                     	;# 
   804     009F                     	;# 
   805     010C                     	;# 
   806     010D                     	;# 
   807     010E                     	;# 
   808     010F                     	;# 
   809     018C                     	;# 
   810     018D                     	;# 
   811     0000                     	;# 
   812     0001                     	;# 
   813     0002                     	;# 
   814     0003                     	;# 
   815     0004                     	;# 
   816     0005                     	;# 
   817     0006                     	;# 
   818     0007                     	;# 
   819     0008                     	;# 
   820     0009                     	;# 
   821     000A                     	;# 
   822     000B                     	;# 
   823     000C                     	;# 
   824     000D                     	;# 
   825     000E                     	;# 
   826     000E                     	;# 
   827     000F                     	;# 
   828     0010                     	;# 
   829     0011                     	;# 
   830     0012                     	;# 
   831     0013                     	;# 
   832     0014                     	;# 
   833     0015                     	;# 
   834     0015                     	;# 
   835     0016                     	;# 
   836     0017                     	;# 
   837     0018                     	;# 
   838     0019                     	;# 
   839     001A                     	;# 
   840     001B                     	;# 
   841     001B                     	;# 
   842     001C                     	;# 
   843     001D                     	;# 
   844     001E                     	;# 
   845     001F                     	;# 
   846     0081                     	;# 
   847     0085                     	;# 
   848     0086                     	;# 
   849     0087                     	;# 
   850     0088                     	;# 
   851     0089                     	;# 
   852     008C                     	;# 
   853     008D                     	;# 
   854     008E                     	;# 
   855     0091                     	;# 
   856     0092                     	;# 
   857     0093                     	;# 
   858     0094                     	;# 
   859     0098                     	;# 
   860     0099                     	;# 
   861     009C                     	;# 
   862     009D                     	;# 
   863     009E                     	;# 
   864     009F                     	;# 
   865     010C                     	;# 
   866     010D                     	;# 
   867     010E                     	;# 
   868     010F                     	;# 
   869     018C                     	;# 
   870     018D                     	;# 
   871     0000                     	;# 
   872     0001                     	;# 
   873     0002                     	;# 
   874     0003                     	;# 
   875     0004                     	;# 
   876     0005                     	;# 
   877     0006                     	;# 
   878     0007                     	;# 
   879     0008                     	;# 
   880     0009                     	;# 
   881     000A                     	;# 
   882     000B                     	;# 
   883     000C                     	;# 
   884     000D                     	;# 
   885     000E                     	;# 
   886     000E                     	;# 
   887     000F                     	;# 
   888     0010                     	;# 
   889     0011                     	;# 
   890     0012                     	;# 
   891     0013                     	;# 
   892     0014                     	;# 
   893     0015                     	;# 
   894     0015                     	;# 
   895     0016                     	;# 
   896     0017                     	;# 
   897     0018                     	;# 
   898     0019                     	;# 
   899     001A                     	;# 
   900     001B                     	;# 
   901     001B                     	;# 
   902     001C                     	;# 
   903     001D                     	;# 
   904     001E                     	;# 
   905     001F                     	;# 
   906     0081                     	;# 
   907     0085                     	;# 
   908     0086                     	;# 
   909     0087                     	;# 
   910     0088                     	;# 
   911     0089                     	;# 
   912     008C                     	;# 
   913     008D                     	;# 
   914     008E                     	;# 
   915     0091                     	;# 
   916     0092                     	;# 
   917     0093                     	;# 
   918     0094                     	;# 
   919     0098                     	;# 
   920     0099                     	;# 
   921     009C                     	;# 
   922     009D                     	;# 
   923     009E                     	;# 
   924     009F                     	;# 
   925     010C                     	;# 
   926     010D                     	;# 
   927     010E                     	;# 
   928     010F                     	;# 
   929     018C                     	;# 
   930     018D                     	;# 
   931     0000                     	;# 
   932     0001                     	;# 
   933     0002                     	;# 
   934     0003                     	;# 
   935     0004                     	;# 
   936     0005                     	;# 
   937     0006                     	;# 
   938     0007                     	;# 
   939     0008                     	;# 
   940     0009                     	;# 
   941     000A                     	;# 
   942     000B                     	;# 
   943     000C                     	;# 
   944     000D                     	;# 
   945     000E                     	;# 
   946     000E                     	;# 
   947     000F                     	;# 
   948     0010                     	;# 
   949     0011                     	;# 
   950     0012                     	;# 
   951     0013                     	;# 
   952     0014                     	;# 
   953     0015                     	;# 
   954     0015                     	;# 
   955     0016                     	;# 
   956     0017                     	;# 
   957     0018                     	;# 
   958     0019                     	;# 
   959     001A                     	;# 
   960     001B                     	;# 
   961     001B                     	;# 
   962     001C                     	;# 
   963     001D                     	;# 
   964     001E                     	;# 
   965     001F                     	;# 
   966     0081                     	;# 
   967     0085                     	;# 
   968     0086                     	;# 
   969     0087                     	;# 
   970     0088                     	;# 
   971     0089                     	;# 
   972     008C                     	;# 
   973     008D                     	;# 
   974     008E                     	;# 
   975     0091                     	;# 
   976     0092                     	;# 
   977     0093                     	;# 
   978     0094                     	;# 
   979     0098                     	;# 
   980     0099                     	;# 
   981     009C                     	;# 
   982     009D                     	;# 
   983     009E                     	;# 
   984     009F                     	;# 
   985     010C                     	;# 
   986     010D                     	;# 
   987     010E                     	;# 
   988     010F                     	;# 
   989     018C                     	;# 
   990     018D                     	;# 
   991     0000                     	;# 
   992     0001                     	;# 
   993     0002                     	;# 
   994     0003                     	;# 
   995     0004                     	;# 
   996     0005                     	;# 
   997     0006                     	;# 
   998     0007                     	;# 
   999     0008                     	;# 
  1000     0009                     	;# 
  1001     000A                     	;# 
  1002     000B                     	;# 
  1003     000C                     	;# 
  1004     000D                     	;# 
  1005     000E                     	;# 
  1006     000E                     	;# 
  1007     000F                     	;# 
  1008     0010                     	;# 
  1009     0011                     	;# 
  1010     0012                     	;# 
  1011     0013                     	;# 
  1012     0014                     	;# 
  1013     0015                     	;# 
  1014     0015                     	;# 
  1015     0016                     	;# 
  1016     0017                     	;# 
  1017     0018                     	;# 
  1018     0019                     	;# 
  1019     001A                     	;# 
  1020     001B                     	;# 
  1021     001B                     	;# 
  1022     001C                     	;# 
  1023     001D                     	;# 
  1024     001E                     	;# 
  1025     001F                     	;# 
  1026     0081                     	;# 
  1027     0085                     	;# 
  1028     0086                     	;# 
  1029     0087                     	;# 
  1030     0088                     	;# 
  1031     0089                     	;# 
  1032     008C                     	;# 
  1033     008D                     	;# 
  1034     008E                     	;# 
  1035     0091                     	;# 
  1036     0092                     	;# 
  1037     0093                     	;# 
  1038     0094                     	;# 
  1039     0098                     	;# 
  1040     0099                     	;# 
  1041     009C                     	;# 
  1042     009D                     	;# 
  1043     009E                     	;# 
  1044     009F                     	;# 
  1045     010C                     	;# 
  1046     010D                     	;# 
  1047     010E                     	;# 
  1048     010F                     	;# 
  1049     018C                     	;# 
  1050     018D                     	;# 
  1051     0000                     	;# 
  1052     0001                     	;# 
  1053     0002                     	;# 
  1054     0003                     	;# 
  1055     0004                     	;# 
  1056     0005                     	;# 
  1057     0006                     	;# 
  1058     0007                     	;# 
  1059     0008                     	;# 
  1060     0009                     	;# 
  1061     000A                     	;# 
  1062     000B                     	;# 
  1063     000C                     	;# 
  1064     000D                     	;# 
  1065     000E                     	;# 
  1066     000E                     	;# 
  1067     000F                     	;# 
  1068     0010                     	;# 
  1069     0011                     	;# 
  1070     0012                     	;# 
  1071     0013                     	;# 
  1072     0014                     	;# 
  1073     0015                     	;# 
  1074     0015                     	;# 
  1075     0016                     	;# 
  1076     0017                     	;# 
  1077     0018                     	;# 
  1078     0019                     	;# 
  1079     001A                     	;# 
  1080     001B                     	;# 
  1081     001B                     	;# 
  1082     001C                     	;# 
  1083     001D                     	;# 
  1084     001E                     	;# 
  1085     001F                     	;# 
  1086     0081                     	;# 
  1087     0085                     	;# 
  1088     0086                     	;# 
  1089     0087                     	;# 
  1090     0088                     	;# 
  1091     0089                     	;# 
  1092     008C                     	;# 
  1093     008D                     	;# 
  1094     008E                     	;# 
  1095     0091                     	;# 
  1096     0092                     	;# 
  1097     0093                     	;# 
  1098     0094                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009C                     	;# 
  1102     009D                     	;# 
  1103     009E                     	;# 
  1104     009F                     	;# 
  1105     010C                     	;# 
  1106     010D                     	;# 
  1107     010E                     	;# 
  1108     010F                     	;# 
  1109     018C                     	;# 
  1110     018D                     	;# 
  1111     0000                     	;# 
  1112     0001                     	;# 
  1113     0002                     	;# 
  1114     0003                     	;# 
  1115     0004                     	;# 
  1116     0005                     	;# 
  1117     0006                     	;# 
  1118     0007                     	;# 
  1119     0008                     	;# 
  1120     0009                     	;# 
  1121     000A                     	;# 
  1122     000B                     	;# 
  1123     000C                     	;# 
  1124     000D                     	;# 
  1125     000E                     	;# 
  1126     000E                     	;# 
  1127     000F                     	;# 
  1128     0010                     	;# 
  1129     0011                     	;# 
  1130     0012                     	;# 
  1131     0013                     	;# 
  1132     0014                     	;# 
  1133     0015                     	;# 
  1134     0015                     	;# 
  1135     0016                     	;# 
  1136     0017                     	;# 
  1137     0018                     	;# 
  1138     0019                     	;# 
  1139     001A                     	;# 
  1140     001B                     	;# 
  1141     001B                     	;# 
  1142     001C                     	;# 
  1143     001D                     	;# 
  1144     001E                     	;# 
  1145     001F                     	;# 
  1146     0081                     	;# 
  1147     0085                     	;# 
  1148     0086                     	;# 
  1149     0087                     	;# 
  1150     0088                     	;# 
  1151     0089                     	;# 
  1152     008C                     	;# 
  1153     008D                     	;# 
  1154     008E                     	;# 
  1155     0091                     	;# 
  1156     0092                     	;# 
  1157     0093                     	;# 
  1158     0094                     	;# 
  1159     0098                     	;# 
  1160     0099                     	;# 
  1161     009C                     	;# 
  1162     009D                     	;# 
  1163     009E                     	;# 
  1164     009F                     	;# 
  1165     010C                     	;# 
  1166     010D                     	;# 
  1167     010E                     	;# 
  1168     010F                     	;# 
  1169     018C                     	;# 
  1170     018D                     	;# 
  1171                           
  1172 ;; Function _lcd_4bit_send_char_data is unused but had its address taken
  1173     0000                     
  1174 ;; Function _lcd_4bit_send_string is unused but had its address taken
  1175     0000                     
  1176 ;; Function _lcd_4bit_save_custom_char is unused but had its address taken
  1177     0000                     
  1178 ;; Function _lcd_4bit_set_cursor is unused but had its address taken
  1179     0000                     
  1180 ;; Function _lcd_4bit_clear is unused but had its address taken
  1181     0000                     
  1182 ;; Function _lcd_4bit_home is unused but had its address taken
  1183     0000                     
  1184 ;; Function _lcd_4bit_cursor is unused but had its address taken
  1185     0000                     
  1186 ;; Function _lcd_4bit_no_cursor is unused but had its address taken
  1187     0000                     
  1188 ;; Function _lcd_4bit_blink is unused but had its address taken
  1189     0000                     
  1190 ;; Function _lcd_4bit_no_blink is unused but had its address taken
  1191     0000                     
  1192 ;; Function _lcd_4bit_display is unused but had its address taken
  1193     0000                     
  1194 ;; Function _lcd_4bit_no_display is unused but had its address taken
  1195     0000                     
  1196 ;; Function _lcd_4bit_autoscroll is unused but had its address taken
  1197     0000                     
  1198 ;; Function _lcd_4bit_noAutoscroll is unused but had its address taken
  1199     0000                     
  1200 ;; Function _lcd_4bit_scrollDisplayLeft is unused but had its address taken
  1201     0000                     
  1202 ;; Function _lcd_4bit_scrollDisplayRight is unused but had its address taken
  1203     0000                     
  1204 ;; Function _lcd_4bit_leftToRight is unused but had its address taken
  1205     0000                     
  1206 ;; Function _lcd_4bit_rightToLeft is unused but had its address taken
  1207     0000                     
  1208 ;; Function _keypad_get_value is unused but had its address taken
  1209     0000                     
  1210 ;; Function _HAL_I2C_Init is unused but had its address taken
  1211     0000                     
  1212 ;; Function _HAL_I2C_setClock is unused but had its address taken
  1213     0000                     
  1214 ;; Function _HAL_I2C_DeInit is unused but had its address taken
  1215     0000                     
  1216 ;; Function _HAL_I2C_Master_Send_Start is unused but had its address taken
  1217     0000                     
  1218 ;; Function _HAL_I2C_Master_Send_Repeated_Start is unused but had its address taken
  1219     0000                     
  1220 ;; Function _HAL_I2C_Master_Send_Stop is unused but had its address taken
  1221     0000                     
  1222 ;; Function _HAL_I2C_Write is unused but had its address taken
  1223     0000                     
  1224 ;; Function _HAL_I2C_Print is unused but had its address taken
  1225     0000                     
  1226 ;; Function _HAL_I2C_Println is unused but had its address taken
  1227     0000                     
  1228 ;; Function _HAL_I2C_Read is unused but had its address taken
  1229     0000                     
  1230 ;; Function _HAL_I2C_available is unused but had its address taken
  1231     0000                     
  1232 ;; Function _HAL_I2C_Set_Handler_Req is unused but had its address taken
  1233     0000                     
  1234 ;; Function _HAL_I2C_Set_Handler_Rec is unused but had its address taken
  1235     0000                     
  1236 ;; Function _HAL_I2C_Request_From is unused but had its address taken
  1237     0000                     
  1238 ;; Function _HAL_SPI_Init is unused but had its address taken
  1239     0000                     
  1240 ;; Function _HAL_SPI_Deinit is unused but had its address taken
  1241     0000                     
  1242 ;; Function _HAL_SPI_Write_Char is unused but had its address taken
  1243     0000                     
  1244 ;; Function _HAL_SPI_Read_Char is unused but had its address taken
  1245     0000                     
  1246 ;; Function _HAL_SPI_Available is unused but had its address taken
  1247     0000                     
  1248 ;; Function _HAL_SPI_Write_String is unused but had its address taken
  1249     0000                     
  1250 ;; Function _HAL_SPI_Write_String_ln is unused but had its address taken
  1251     0000                     
  1252 ;; Function _MSSP_SPI_Interrupt_Configurations is unused but had its address taken
  1253     0000                     
  1254 ;; Function _HAL_USART_ASYNC_DeInit is unused but had its address taken
  1255     0000                     
  1256 ;; Function _HAL_USART_is_Available is unused but had its address taken
  1257     0000                     
  1258 ;; Function _HAL_USART_Write_String is unused but had its address taken
  1259     0000                     
  1260                           	psect	idataCOMMON
  1261     0C0B                     __pidataCOMMON:
  1262                           
  1263                           ;initializer for _RB4_Flag
  1264     0C0B  3401               	retlw	1
  1265                           
  1266                           ;initializer for _i2c_mode
  1267     0C0C  34FF               	retlw	255
  1268                           
  1269                           	psect	idataBANK1
  1270     0C0D                     __pidataBANK1:
  1271                           
  1272                           ;initializer for _RB7_Flag
  1273     0C0D  3401               	retlw	1
  1274                           
  1275                           ;initializer for _RB6_Flag
  1276     0C0E  3401               	retlw	1
  1277                           
  1278                           ;initializer for _RB5_Flag
  1279     0C0F  3401               	retlw	1
  1280                           
  1281                           	psect	strings
  1282     0800                     __pstrings:
  1283     0800                     stringtab:
  1284     0800                     __stringtab:
  1285                           
  1286                           ;	String table - string pointers are 1 byte each
  1287     0800  1BFF               	btfsc	btemp+1,7
  1288     0801  280A               	ljmp	stringcode
  1289     0802  1383               	bcf	3,7
  1290     0803  187F               	btfsc	btemp+1,0
  1291     0804  1783               	bsf	3,7
  1292     0805  0800               	movf	0,w
  1293     0806  0A84               	incf	4,f
  1294     0807  1903               	skipnz
  1295     0808  0AFF               	incf	btemp+1,f
  1296     0809  0008               	return
  1297     080A                     stringcode:
  1298     080A                     stringdir:
  1299     080A  3008               	movlw	high stringdir
  1300     080B  008A               	movwf	10
  1301     080C  0804               	movf	4,w
  1302     080D  0A84               	incf	4,f
  1303     080E  0782               	addwf	2,f
  1304     080F                     __stringbase:
  1305     080F  3400               	retlw	0
  1306     0810                     __end_of__stringtab:
  1307     0810                     _btn_values:
  1308     0810  3437               	retlw	55
  1309     0811  3438               	retlw	56
  1310     0812  3439               	retlw	57
  1311     0813  342F               	retlw	47
  1312     0814  3434               	retlw	52
  1313     0815  3435               	retlw	53
  1314     0816  3436               	retlw	54
  1315     0817  342A               	retlw	42
  1316     0818  3431               	retlw	49
  1317     0819  3432               	retlw	50
  1318     081A  3433               	retlw	51
  1319     081B  342D               	retlw	45
  1320     081C  3423               	retlw	35
  1321     081D  3430               	retlw	48
  1322     081E  343D               	retlw	61
  1323     081F  342B               	retlw	43
  1324     0820                     __end_of_btn_values:
  1325     001B                     _CCPR2	set	27
  1326     0015                     _CCPR1	set	21
  1327     0019                     _TXREG	set	25
  1328     001A                     _RCREG	set	26
  1329     0018                     _RCSTAbits	set	24
  1330     0011                     _TMR2	set	17
  1331     0012                     _T2CONbits	set	18
  1332     000E                     _TMR1L	set	14
  1333     000F                     _TMR1H	set	15
  1334     0010                     _T1CONbits	set	16
  1335     0001                     _TMR0	set	1
  1336     0006                     _PORTBbits	set	6
  1337     0013                     _SSPBUF	set	19
  1338     0014                     _SSPCONbits	set	20
  1339     0009                     _PORTE	set	9
  1340     0008                     _PORTD	set	8
  1341     0007                     _PORTC	set	7
  1342     0006                     _PORTB	set	6
  1343     0005                     _PORTA	set	5
  1344     000D                     _PIR2bits	set	13
  1345     001B                     _CCPR2L	set	27
  1346     0015                     _CCPR1L	set	21
  1347     001D                     _CCP2CONbits	set	29
  1348     0017                     _CCP1CONbits	set	23
  1349     001E                     _ADRESH	set	30
  1350     000C                     _PIR1bits	set	12
  1351     000B                     _INTCONbits	set	11
  1352     001F                     _ADCON0bits	set	31
  1353     0034                     _RB4	set	52
  1354     00C1                     _OERR	set	193
  1355     00C2                     _FERR	set	194
  1356     0065                     _RCIF	set	101
  1357     0063                     _SSPIF	set	99
  1358     00ED                     _CCP2X	set	237
  1359     00EC                     _CCP2Y	set	236
  1360     00BD                     _CCP1X	set	189
  1361     00BC                     _CCP1Y	set	188
  1362     00FF                     _ADCS1	set	255
  1363     00FE                     _ADCS0	set	254
  1364     0099                     _SPBRG	set	153
  1365     0098                     _TXSTAbits	set	152
  1366     0081                     _OPTION_REGbits	set	129
  1367     0094                     _SSPSTATbits	set	148
  1368     0093                     _SSPADD	set	147
  1369     0091                     _SSPCON2bits	set	145
  1370     0088                     _TRISD	set	136
  1371     0087                     _TRISC	set	135
  1372     0086                     _TRISB	set	134
  1373     009C                     _CMCONbits	set	156
  1374     008D                     _PIE2bits	set	141
  1375     0089                     _TRISE	set	137
  1376     0085                     _TRISA	set	133
  1377     009E                     _ADRESL	set	158
  1378     008C                     _PIE1bits	set	140
  1379     009F                     _ADCON1bits	set	159
  1380     0092                     _PR2	set	146
  1381     04A0                     _BF	set	1184
  1382     04A2                     _R_nW	set	1186
  1383     04FE                     _ADCS2	set	1278
  1384     0820                     STR_4:
  1385     0820  3420               	retlw	32	;' '
  1386     0821  3454               	retlw	84	;'T'
  1387     0822  3420               	retlw	32	;' '
  1388     0823  343D               	retlw	61	;'='
  1389     0824  3420               	retlw	32	;' '
  1390     0825  3425               	retlw	37	;'%'
  1391     0826  3464               	retlw	100	;'d'
  1392     0827  3420               	retlw	32	;' '
  1393     0828  3420               	retlw	32	;' '
  1394     0829  3420               	retlw	32	;' '
  1395     082A  3420               	retlw	32	;' '
  1396     082B  3420               	retlw	32	;' '
  1397     082C  3400               	retlw	0
  1398     082D                     STR_1:
  1399     082D  3420               	retlw	32	;' '
  1400     082E  3441               	retlw	65	;'A'
  1401     082F  3478               	retlw	120	;'x'
  1402     0830  3420               	retlw	32	;' '
  1403     0831  343D               	retlw	61	;'='
  1404     0832  3420               	retlw	32	;' '
  1405     0833  3425               	retlw	37	;'%'
  1406     0834  3464               	retlw	100	;'d'
  1407     0835  3420               	retlw	32	;' '
  1408     0836  3420               	retlw	32	;' '
  1409     0837  3420               	retlw	32	;' '
  1410     0838  3420               	retlw	32	;' '
  1411     0839  3400               	retlw	0
  1412     083A                     STR_5:
  1413     083A  3420               	retlw	32	;' '
  1414     083B  3447               	retlw	71	;'G'
  1415     083C  3478               	retlw	120	;'x'
  1416     083D  3420               	retlw	32	;' '
  1417     083E  343D               	retlw	61	;'='
  1418     083F  3420               	retlw	32	;' '
  1419     0840  3425               	retlw	37	;'%'
  1420     0841  3464               	retlw	100	;'d'
  1421     0842  3420               	retlw	32	;' '
  1422     0843  3420               	retlw	32	;' '
  1423     0844  3420               	retlw	32	;' '
  1424     0845  3420               	retlw	32	;' '
  1425     0846  3400               	retlw	0
  1426     0847                     STR_2:
  1427     0847  3420               	retlw	32	;' '
  1428     0848  3441               	retlw	65	;'A'
  1429     0849  3479               	retlw	121	;'y'
  1430     084A  3420               	retlw	32	;' '
  1431     084B  343D               	retlw	61	;'='
  1432     084C  3420               	retlw	32	;' '
  1433     084D  3425               	retlw	37	;'%'
  1434     084E  3464               	retlw	100	;'d'
  1435     084F  3420               	retlw	32	;' '
  1436     0850  3420               	retlw	32	;' '
  1437     0851  3420               	retlw	32	;' '
  1438     0852  3420               	retlw	32	;' '
  1439     0853  3400               	retlw	0
  1440     0854                     STR_6:
  1441     0854  3420               	retlw	32	;' '
  1442     0855  3447               	retlw	71	;'G'
  1443     0856  3479               	retlw	121	;'y'
  1444     0857  3420               	retlw	32	;' '
  1445     0858  343D               	retlw	61	;'='
  1446     0859  3420               	retlw	32	;' '
  1447     085A  3425               	retlw	37	;'%'
  1448     085B  3464               	retlw	100	;'d'
  1449     085C  3420               	retlw	32	;' '
  1450     085D  3420               	retlw	32	;' '
  1451     085E  3420               	retlw	32	;' '
  1452     085F  3420               	retlw	32	;' '
  1453     0860  3400               	retlw	0
  1454     0861                     STR_3:
  1455     0861  3420               	retlw	32	;' '
  1456     0862  3441               	retlw	65	;'A'
  1457     0863  347A               	retlw	122	;'z'
  1458     0864  3420               	retlw	32	;' '
  1459     0865  343D               	retlw	61	;'='
  1460     0866  3420               	retlw	32	;' '
  1461     0867  3425               	retlw	37	;'%'
  1462     0868  3464               	retlw	100	;'d'
  1463     0869  3420               	retlw	32	;' '
  1464     086A  3420               	retlw	32	;' '
  1465     086B  3420               	retlw	32	;' '
  1466     086C  3420               	retlw	32	;' '
  1467     086D  3400               	retlw	0
  1468     086E                     STR_7:
  1469     086E  3420               	retlw	32	;' '
  1470     086F  3447               	retlw	71	;'G'
  1471     0870  347A               	retlw	122	;'z'
  1472     0871  3420               	retlw	32	;' '
  1473     0872  343D               	retlw	61	;'='
  1474     0873  3420               	retlw	32	;' '
  1475     0874  3425               	retlw	37	;'%'
  1476     0875  3464               	retlw	100	;'d'
  1477     0876  3420               	retlw	32	;' '
  1478     0877  3420               	retlw	32	;' '
  1479     0878  3420               	retlw	32	;' '
  1480     0879  3420               	retlw	32	;' '
  1481     087A  3400               	retlw	0
  1482     087B                     STR_8:
  1483     087B  3445               	retlw	69	;'E'
  1484     087C  3452               	retlw	82	;'R'
  1485     087D  3452               	retlw	82	;'R'
  1486     087E  344F               	retlw	79	;'O'
  1487     087F  3452               	retlw	82	;'R'
  1488     0880  3400               	retlw	0
  1489                           
  1490                           	psect	cinit
  1491     0013                     start_initialization:	
  1492                           ; #config settings
  1493                           
  1494     0013                     __initialization:
  1495                           
  1496                           ; Initialize objects allocated to BANK1
  1497     0013  1683               	bsf	3,5	;RP0=1, select bank1
  1498     0014  1303               	bcf	3,6	;RP1=0, select bank1
  1499     0015  120A  158A  240D  120A  118A  	fcall	__pidataBANK1	;fetch initializer
  1500     001A  00E5               	movwf	__pdataBANK1& (0+127)
  1501     001B  120A  158A  240E  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
  1502     0020  00E6               	movwf	(__pdataBANK1+1)& (0+127)
  1503     0021  120A  158A  240F  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
  1504     0026  00E7               	movwf	(__pdataBANK1+2)& (0+127)
  1505                           
  1506                           ; Initialize objects allocated to COMMON
  1507     0027  120A  158A  240B  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  1508     002C  00FA               	movwf	__pdataCOMMON& (0+127)
  1509     002D  120A  158A  240C  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
  1510     0032  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  1511                           
  1512                           ; Clear objects allocated to BANK1
  1513     0033  1383               	bcf	3,7	;select IRP bank0
  1514     0034  30A0               	movlw	low __pbssBANK1
  1515     0035  0084               	movwf	4
  1516     0036  30E5               	movlw	low (__pbssBANK1+69)
  1517     0037  120A  158A  2438  120A  118A  	fcall	clear_ram0
  1518     003C                     end_of_initialization:	
  1519                           ;End of C runtime variable initialization code
  1520                           
  1521     003C                     __end_of__initialization:
  1522     003C  0183               	clrf	3
  1523     003D  120A  118A  2FD1   	ljmp	_main	;jump to C main() function
  1524                           
  1525                           	psect	dataCOMMON
  1526     007A                     __pdataCOMMON:
  1527     007A                     _RB4_Flag:
  1528     007A                     	ds	1
  1529     007B                     _i2c_mode:
  1530     007B                     	ds	1
  1531                           
  1532                           	psect	bssBANK1
  1533     00A0                     __pbssBANK1:
  1534     00A0                     _Wire:
  1535     00A0                     	ds	14
  1536     00AE                     _Spi:
  1537     00AE                     	ds	8
  1538     00B6                     _Serial:
  1539     00B6                     	ds	8
  1540     00BE                     convert_uint16_to_string@F1685:
  1541     00BE                     	ds	6
  1542     00C4                     _timer1_preload:
  1543     00C4                     	ds	2
  1544     00C6                     _timer0_preload:
  1545     00C6                     	ds	2
  1546     00C8                     _EUSART_OverrunErrorHandler:
  1547     00C8                     	ds	1
  1548     00C9                     _EUSART_FramingErrorHandler:
  1549     00C9                     	ds	1
  1550     00CA                     _EUSART_RxInterruptHandler:
  1551     00CA                     	ds	1
  1552     00CB                     _EUSART_TxInterruptHandler:
  1553     00CB                     	ds	1
  1554     00CC                     _timer2_preload:
  1555     00CC                     	ds	1
  1556     00CD                     _TMR2_InterruptHandler:
  1557     00CD                     	ds	1
  1558     00CE                     _TMR1_InterruptHandler:
  1559     00CE                     	ds	1
  1560     00CF                     _TMR0_InterruptHandler:
  1561     00CF                     	ds	1
  1562     00D0                     _check@hal_spi$F3537:
  1563     00D0                     	ds	1
  1564     00D1                     _SPI_DefaultInterruptHandle:
  1565     00D1                     	ds	1
  1566     00D2                     _SPI_Report_Receive_Overflow_InterruptHandle:
  1567     00D2                     	ds	1
  1568     00D3                     _SPI_Report_Write_Collision_InterruptHandler:
  1569     00D3                     	ds	1
  1570     00D4                     _RB7_InterruptHandler_LOW:
  1571     00D4                     	ds	1
  1572     00D5                     _RB7_InterruptHandler_HIGH:
  1573     00D5                     	ds	1
  1574     00D6                     _RB6_InterruptHandler_LOW:
  1575     00D6                     	ds	1
  1576     00D7                     _RB6_InterruptHandler_HIGH:
  1577     00D7                     	ds	1
  1578     00D8                     _RB5_InterruptHandler_LOW:
  1579     00D8                     	ds	1
  1580     00D9                     _RB5_InterruptHandler_HIGH:
  1581     00D9                     	ds	1
  1582     00DA                     _RB4_InterruptHandler_LOW:
  1583     00DA                     	ds	1
  1584     00DB                     _RB4_InterruptHandler_HIGH:
  1585     00DB                     	ds	1
  1586     00DC                     _INT0_InterruptHandler:
  1587     00DC                     	ds	1
  1588     00DD                     _check:
  1589     00DD                     	ds	1
  1590     00DE                     _I2C_DefaultInterruptHandle_Rec:
  1591     00DE                     	ds	1
  1592     00DF                     _I2C_DefaultInterruptHandle_Req:
  1593     00DF                     	ds	1
  1594     00E0                     _I2C_Report_Receive_Overflow_InterruptHandle:
  1595     00E0                     	ds	1
  1596     00E1                     _I2C_Report_Write_Collision_InterruptHandler:
  1597     00E1                     	ds	1
  1598     00E2                     _CCP2_InterruptHandler:
  1599     00E2                     	ds	1
  1600     00E3                     _CCP1_InterruptHandler:
  1601     00E3                     	ds	1
  1602     00E4                     _ADC_InterruptHandler:
  1603     00E4                     	ds	1
  1604                           
  1605                           	psect	dataBANK1
  1606     00E5                     __pdataBANK1:
  1607     00E5                     _RB7_Flag:
  1608     00E5                     	ds	1
  1609     00E6                     _RB6_Flag:
  1610     00E6                     	ds	1
  1611     00E7                     _RB5_Flag:
  1612     00E7                     	ds	1
  1613                           
  1614                           	psect	clrtext
  1615     0C38                     clear_ram0:	
  1616                           ;	Called with FSR containing the base address, and
  1617                           ;	W with the last address+1
  1618                           
  1619     0C38  0064               	clrwdt	;clear the watchdog before getting into this loop
  1620     0C39                     clrloop0:
  1621     0C39  0180               	clrf	0	;clear RAM location pointed to by FSR
  1622     0C3A  0A84               	incf	4,f	;increment pointer
  1623     0C3B  0604               	xorwf	4,w	;XOR with final address
  1624     0C3C  1903               	btfsc	3,2	;have we reached the end yet?
  1625     0C3D  3400               	retlw	0	;all done for this memory range, return
  1626     0C3E  0604               	xorwf	4,w	;XOR again to restore value
  1627     0C3F  2C39               	goto	clrloop0	;do the next byte
  1628                           
  1629                           	psect	cstackCOMMON
  1630     0070                     __pcstackCOMMON:
  1631     0070                     ?_TMR0_ISR:
  1632     0070                     ??_TMR0_ISR:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635     0070                     ?_TMR1_ISR:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638     0070                     ??_TMR1_ISR:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ?_TMR2_ISR:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ??_TMR2_ISR:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ?_EUSART_TX_ISR:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0070                     ??_EUSART_TX_ISR:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0070                     ?_EUSART_RX_ISR:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0070                     ?_MSSP_SPI_ISR:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0070                     ??_MSSP_SPI_ISR:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662     0070                     ?_EUSART_FramingErrorHandler_Isr:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665     0070                     ??_EUSART_FramingErrorHandler_Isr:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668     0070                     ?_EUSART_OverrunErrorHandler_Isr:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0070                     ??_EUSART_OverrunErrorHandler_Isr:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674     0070                     ?_HAL_USART_Read_Char:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677     0070                     ??_HAL_USART_Read_Char:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680     0070                     ?_HAL_USART_Write_Char:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683     0070                     ?_USART_RX_Interrupt_Handler:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686     0070                     ?_GPIO_Init:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689     0070                     ?_ADC_ISR:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692     0070                     ??_ADC_ISR:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695     0070                     ?_CCP1_ISR:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698     0070                     ??_CCP1_ISR:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701     0070                     ?_CCP2_ISR:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704     0070                     ??_CCP2_ISR:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707     0070                     ?_MSSP_I2C_ISR:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710     0070                     ??_MSSP_I2C_ISR:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713     0070                     ?_MSSP_I2C_BC_ISR:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716     0070                     ??_MSSP_I2C_BC_ISR:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719     0070                     ?_INT0_ISR:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722     0070                     ??_INT0_ISR:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725     0070                     ?_RB4_ISR:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728     0070                     ??_RB4_ISR:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731     0070                     ?_RB5_ISR:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734     0070                     ??_RB5_ISR:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737     0070                     ?_RB6_ISR:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740     0070                     ??_RB6_ISR:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743     0070                     ?_RB7_ISR:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746     0070                     ??_RB7_ISR:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749     0070                     ?_InterruptManager:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752     0070                     ?_USART_ASYNC_RX_Restart:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755     0070                     ??_USART_ASYNC_RX_Restart:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758     0070                     ?_main:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761     0070                     RB4_ISR@RB4_Source:	
  1762                           ; 2 bytes @ 0x0
  1763                           
  1764     0070                     RB5_ISR@RB5_Source:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767     0070                     RB6_ISR@RB6_Source:	
  1768                           ; 1 bytes @ 0x0
  1769                           
  1770     0070                     RB7_ISR@RB7_Source:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773     0070                     HAL_USART_Read_Char@data:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776     0070                     HAL_USART_Write_Char@character:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779                           
  1780                           ; 1 bytes @ 0x0
  1781     0070                     	ds	1
  1782     0071                     ??_HAL_USART_Write_Char:
  1783     0071                     ?_HAL_USART_Write_String_ln:	
  1784                           ; 1 bytes @ 0x1
  1785                           
  1786     0071                     HAL_USART_Write_String_ln@_data:	
  1787                           ; 1 bytes @ 0x1
  1788                           
  1789                           
  1790                           ; 2 bytes @ 0x1
  1791     0071                     	ds	2
  1792     0073                     ??_HAL_USART_Write_String_ln:
  1793     0073                     HAL_USART_Write_String_ln@char_counter:	
  1794                           ; 1 bytes @ 0x3
  1795                           
  1796                           
  1797                           ; 2 bytes @ 0x3
  1798     0073                     	ds	2
  1799     0075                     ??_USART_RX_Interrupt_Handler:
  1800     0075                     USART_RX_Interrupt_Handler@data:	
  1801                           ; 1 bytes @ 0x5
  1802                           
  1803                           
  1804                           ; 1 bytes @ 0x5
  1805     0075                     	ds	1
  1806     0076                     ??_EUSART_RX_ISR:
  1807     0076                     ??_InterruptManager:	
  1808                           ; 1 bytes @ 0x6
  1809                           
  1810                           
  1811                           ; 1 bytes @ 0x6
  1812     0076                     	ds	4
  1813                           
  1814                           	psect	cstackBANK0
  1815     0020                     __pcstackBANK0:
  1816     0020                     ?___flge:
  1817     0020                     ?_pinMode:	
  1818                           ; 1 bit 
  1819                           
  1820     0020                     ?_digitalWrite:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823     0020                     ?_HAL_USART_Set_Interrupt_Handler:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826     0020                     ?___lldiv:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829     0020                     ?___fltol:	
  1830                           ; 4 bytes @ 0x0
  1831                           
  1832     0020                     pinMode@Pinx:	
  1833                           ; 4 bytes @ 0x0
  1834                           
  1835     0020                     digitalWrite@Pinx:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838     0020                     HAL_USART_Set_Interrupt_Handler@InterruptHandler_Tx:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841     0020                     ___lldiv@divisor:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844     0020                     ___flge@ff1:	
  1845                           ; 4 bytes @ 0x0
  1846                           
  1847     0020                     ___fltol@f1:	
  1848                           ; 4 bytes @ 0x0
  1849                           
  1850                           
  1851                           ; 4 bytes @ 0x0
  1852     0020                     	ds	1
  1853     0021                     pinMode@mode:
  1854     0021                     digitalWrite@logic:	
  1855                           ; 1 bytes @ 0x1
  1856                           
  1857     0021                     HAL_USART_Set_Interrupt_Handler@InterruptHandler_Rx:	
  1858                           ; 1 bytes @ 0x1
  1859                           
  1860                           
  1861                           ; 1 bytes @ 0x1
  1862     0021                     	ds	1
  1863     0022                     ??_pinMode:
  1864     0022                     ??_digitalWrite:	
  1865                           ; 1 bytes @ 0x2
  1866                           
  1867     0022                     ??_HAL_USART_Set_Interrupt_Handler:	
  1868                           ; 1 bytes @ 0x2
  1869                           
  1870                           
  1871                           ; 1 bytes @ 0x2
  1872     0022                     	ds	2
  1873     0024                     ??___fltol:
  1874     0024                     pinMode@Portx:	
  1875                           ; 1 bytes @ 0x4
  1876                           
  1877     0024                     digitalWrite@Portx:	
  1878                           ; 1 bytes @ 0x4
  1879                           
  1880     0024                     ___lldiv@dividend:	
  1881                           ; 1 bytes @ 0x4
  1882                           
  1883     0024                     ___flge@ff2:	
  1884                           ; 4 bytes @ 0x4
  1885                           
  1886                           
  1887                           ; 4 bytes @ 0x4
  1888     0024                     	ds	1
  1889     0025                     ??_GPIO_Init:
  1890                           
  1891                           ; 1 bytes @ 0x5
  1892     0025                     	ds	3
  1893     0028                     ??___lldiv:
  1894     0028                     ??___flge:	
  1895                           ; 1 bytes @ 0x8
  1896                           
  1897     0028                     ___fltol@sign1:	
  1898                           ; 1 bytes @ 0x8
  1899                           
  1900                           
  1901                           ; 1 bytes @ 0x8
  1902     0028                     	ds	1
  1903     0029                     ___fltol@exp1:
  1904     0029                     ___lldiv@quotient:	
  1905                           ; 1 bytes @ 0x9
  1906                           
  1907                           
  1908                           ; 4 bytes @ 0x9
  1909     0029                     	ds	4
  1910     002D                     ___lldiv@counter:
  1911                           
  1912                           ; 1 bytes @ 0xD
  1913     002D                     	ds	1
  1914     002E                     ?___xxtofl:
  1915     002E                     ___xxtofl@val:	
  1916                           ; 4 bytes @ 0xE
  1917                           
  1918                           
  1919                           ; 4 bytes @ 0xE
  1920     002E                     	ds	4
  1921     0032                     ??___xxtofl:
  1922                           
  1923                           ; 1 bytes @ 0x12
  1924     0032                     	ds	4
  1925     0036                     ___xxtofl@sign:
  1926                           
  1927                           ; 1 bytes @ 0x16
  1928     0036                     	ds	1
  1929     0037                     ___xxtofl@exp:
  1930                           
  1931                           ; 1 bytes @ 0x17
  1932     0037                     	ds	1
  1933     0038                     ___xxtofl@arg:
  1934                           
  1935                           ; 4 bytes @ 0x18
  1936     0038                     	ds	4
  1937     003C                     ?___fldiv:
  1938     003C                     ___fldiv@a:	
  1939                           ; 4 bytes @ 0x1C
  1940                           
  1941                           
  1942                           ; 4 bytes @ 0x1C
  1943     003C                     	ds	4
  1944     0040                     ___fldiv@b:
  1945                           
  1946                           ; 4 bytes @ 0x20
  1947     0040                     	ds	4
  1948     0044                     ??___fldiv:
  1949                           
  1950                           ; 1 bytes @ 0x24
  1951     0044                     	ds	5
  1952     0049                     ___fldiv@rem:
  1953                           
  1954                           ; 4 bytes @ 0x29
  1955     0049                     	ds	4
  1956     004D                     ___fldiv@sign:
  1957                           
  1958                           ; 1 bytes @ 0x2D
  1959     004D                     	ds	1
  1960     004E                     ___fldiv@new_exp:
  1961                           
  1962                           ; 2 bytes @ 0x2E
  1963     004E                     	ds	2
  1964     0050                     ___fldiv@grs:
  1965                           
  1966                           ; 4 bytes @ 0x30
  1967     0050                     	ds	4
  1968     0054                     ___fldiv@bexp:
  1969                           
  1970                           ; 1 bytes @ 0x34
  1971     0054                     	ds	1
  1972     0055                     ___fldiv@aexp:
  1973                           
  1974                           ; 1 bytes @ 0x35
  1975     0055                     	ds	1
  1976     0056                     ?_USART_Baud_Rate_Calculation:
  1977     0056                     USART_Baud_Rate_Calculation@baud:	
  1978                           ; 1 bytes @ 0x36
  1979                           
  1980                           
  1981                           ; 4 bytes @ 0x36
  1982     0056                     	ds	4
  1983     005A                     ??_USART_Baud_Rate_Calculation:
  1984                           
  1985                           ; 1 bytes @ 0x3A
  1986     005A                     	ds	12
  1987     0066                     USART_Baud_Rate_Calculation@Baud_Rate_Temp:
  1988                           
  1989                           ; 4 bytes @ 0x46
  1990     0066                     	ds	4
  1991     006A                     ?_HAL_USART_ASYNC_Init:
  1992     006A                     HAL_USART_ASYNC_Init@baud:	
  1993                           ; 1 bytes @ 0x4A
  1994                           
  1995                           
  1996                           ; 4 bytes @ 0x4A
  1997     006A                     	ds	4
  1998     006E                     ??_HAL_USART_ASYNC_Init:
  1999     006E                     ??_main:	
  2000                           ; 1 bytes @ 0x4E
  2001                           
  2002                           
  2003                           	psect	maintext
  2004     07D1                     __pmaintext:	
  2005                           ; 1 bytes @ 0x4E
  2006 ;;
  2007 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2008 ;;
  2009 ;; *************** function _main *****************
  2010 ;; Defined at:
  2011 ;;		line 38 in file "main.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  2  1507[None  ] int 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : B00/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels required when called: 8
  2031 ;; This function calls:
  2032 ;;		_GPIO_Init
  2033 ;;		_HAL_USART_ASYNC_Init
  2034 ;;		_HAL_USART_Set_Interrupt_Handler
  2035 ;; This function is called by:
  2036 ;;		Startup code after reset
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040     07D1                     _main:	
  2041                           ;psect for function _main
  2042                           
  2043     07D1                     l7135:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2046                           
  2047                           
  2048                           ;main.c: 40:     HAL_USART_ASYNC_Init(38400);
  2049     07D1  3000               	movlw	0
  2050     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  2051     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  2052     07D4  00ED               	movwf	HAL_USART_ASYNC_Init@baud+3
  2053     07D5  3000               	movlw	0
  2054     07D6  00EC               	movwf	HAL_USART_ASYNC_Init@baud+2
  2055     07D7  3096               	movlw	150
  2056     07D8  00EB               	movwf	HAL_USART_ASYNC_Init@baud+1
  2057     07D9  3000               	movlw	0
  2058     07DA  00EA               	movwf	HAL_USART_ASYNC_Init@baud
  2059     07DB  120A  158A  2575  120A  118A  	fcall	_HAL_USART_ASYNC_Init
  2060     07E0                     l7137:
  2061                           
  2062                           ;main.c: 41:     Serial.set_interrupt_handler((0),USART_RX_Interrupt_Handler);
  2063     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  2064     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  2065     07E2  01A0               	clrf	HAL_USART_Set_Interrupt_Handler@InterruptHandler_Tx
  2066     07E3  3010               	movlw	(low (fp__USART_RX_Interrupt_Handler-i1fpbase))& (0+255)
  2067     07E4  00A1               	movwf	HAL_USART_Set_Interrupt_Handler@InterruptHandler_Rx
  2068     07E5  1683               	bsf	3,5	;RP0=1, select bank1
  2069     07E6  1303               	bcf	3,6	;RP1=0, select bank1
  2070     07E7  083D               	movf	(low ((_Serial| 0+7)))^(0+128),w	;volatile
  2071     07E8  120A  118A  2040  120A  118A  	fcall	fptable
  2072     07ED                     l7139:
  2073                           
  2074                           ;main.c: 42:     GPIO_Init();
  2075     07ED  120A  118A  2700  120A  118A  	fcall	_GPIO_Init
  2076     07F2                     l1508:	
  2077                           ;main.c: 44:     while(1)
  2078                           
  2079     07F2                     l1509:	
  2080                           ;main.c: 45:  {;main.c: 47:     }
  2081                           
  2082     07F2  2FF2               	goto	l1508
  2083     07F3  120A  118A  2810   	ljmp	start
  2084     07F6                     __end_of_main:
  2085                           
  2086                           	psect	text1
  2087     0CB0                     __ptext1:	
  2088 ;; *************** function _HAL_USART_Set_Interrupt_Handler *****************
  2089 ;; Defined at:
  2090 ;;		line 97 in file "MCAL_layer/usart/hal_usart.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  InterruptHan    1    0[BANK0 ] PTR FTN()void 
  2093 ;;		 -> NULL(1), 
  2094 ;;  InterruptHan    1    1[BANK0 ] PTR FTN()void 
  2095 ;;		 -> USART_RX_Interrupt_Handler(1), 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       2       0       0       0
  2108 ;;      Locals:         0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0
  2110 ;;      Totals:         0       2       0       0       0
  2111 ;;Total ram usage:        2 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 5
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_HAL_USART_ASYNC_Init
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122     0CB0                     _HAL_USART_Set_Interrupt_Handler:	
  2123                           ;psect for function _HAL_USART_Set_Interrupt_Handler
  2124                           
  2125     0CB0                     l5809:	
  2126                           ;incstack = 0
  2127                           ; Regs used in _HAL_USART_Set_Interrupt_Handler: [wreg+status,2+status,0]
  2128                           
  2129                           
  2130                           ;MCAL_layer/usart/hal_usart.c: 97: void HAL_USART_Set_Interrupt_Handler(void (* Interrup
      +                          tHandler_Tx)(void),void (* InterruptHandler_Rx)(void));MCAL_layer/usart/hal_usart.c: 98:
      +                           {;MCAL_layer/usart/hal_usart.c: 99:     if(InterruptHandler_Tx)
  2131     0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  2132     0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  2133     0CB2  0820               	movf	HAL_USART_Set_Interrupt_Handler@InterruptHandler_Tx,w
  2134     0CB3  1903               	btfsc	3,2
  2135     0CB4  2CB6               	goto	u5351
  2136     0CB5  2CB7               	goto	u5350
  2137     0CB6                     u5351:
  2138     0CB6  2CC2               	goto	l5815
  2139     0CB7                     u5350:
  2140     0CB7                     l5811:
  2141                           
  2142                           ;MCAL_layer/usart/hal_usart.c: 100:     {;MCAL_layer/usart/hal_usart.c: 101:         (IN
      +                          TCONbits.GIE = 1);
  2143     0CB7  178B               	bsf	11,7	;volatile
  2144                           
  2145                           ;MCAL_layer/usart/hal_usart.c: 102:         (INTCONbits.PEIE = 1);
  2146     0CB8  170B               	bsf	11,6	;volatile
  2147                           
  2148                           ;MCAL_layer/usart/hal_usart.c: 103:         (PIE1bits.TXIE = 1);
  2149     0CB9  1683               	bsf	3,5	;RP0=1, select bank1
  2150     0CBA  1303               	bcf	3,6	;RP1=0, select bank1
  2151     0CBB  160C               	bsf	12,4	;volatile
  2152     0CBC                     l5813:
  2153                           
  2154                           ;MCAL_layer/usart/hal_usart.c: 104:         EUSART_TxInterruptHandler = InterruptHandler
      +                          _Tx;
  2155     0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  2156     0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  2157     0CBE  0820               	movf	HAL_USART_Set_Interrupt_Handler@InterruptHandler_Tx,w
  2158     0CBF  1683               	bsf	3,5	;RP0=1, select bank1
  2159     0CC0  1303               	bcf	3,6	;RP1=0, select bank1
  2160     0CC1  00CB               	movwf	_EUSART_TxInterruptHandler^(0+128)
  2161     0CC2                     l5815:
  2162                           
  2163                           ;MCAL_layer/usart/hal_usart.c: 106:     if(InterruptHandler_Rx)
  2164     0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  2165     0CC3  0821               	movf	HAL_USART_Set_Interrupt_Handler@InterruptHandler_Rx,w
  2166     0CC4  1903               	btfsc	3,2
  2167     0CC5  2CC7               	goto	u5361
  2168     0CC6  2CC8               	goto	u5360
  2169     0CC7                     u5361:
  2170     0CC7  2CD3               	goto	l1455
  2171     0CC8                     u5360:
  2172     0CC8                     l5817:
  2173                           
  2174                           ;MCAL_layer/usart/hal_usart.c: 107:     {;MCAL_layer/usart/hal_usart.c: 108:         (IN
      +                          TCONbits.GIE = 1);
  2175     0CC8  178B               	bsf	11,7	;volatile
  2176                           
  2177                           ;MCAL_layer/usart/hal_usart.c: 109:         (INTCONbits.PEIE = 1);
  2178     0CC9  170B               	bsf	11,6	;volatile
  2179                           
  2180                           ;MCAL_layer/usart/hal_usart.c: 110:         (PIE1bits.RCIE = 1);
  2181     0CCA  1683               	bsf	3,5	;RP0=1, select bank1
  2182     0CCB  1303               	bcf	3,6	;RP1=0, select bank1
  2183     0CCC  168C               	bsf	12,5	;volatile
  2184     0CCD                     l5819:
  2185                           
  2186                           ;MCAL_layer/usart/hal_usart.c: 111:         EUSART_RxInterruptHandler = InterruptHandler
      +                          _Rx;
  2187     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  2188     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  2189     0CCF  0821               	movf	HAL_USART_Set_Interrupt_Handler@InterruptHandler_Rx,w
  2190     0CD0  1683               	bsf	3,5	;RP0=1, select bank1
  2191     0CD1  1303               	bcf	3,6	;RP1=0, select bank1
  2192     0CD2  00CA               	movwf	_EUSART_RxInterruptHandler^(0+128)
  2193     0CD3                     l1455:
  2194     0CD3  0008               	return
  2195     0CD4                     __end_of_HAL_USART_Set_Interrupt_Handler:
  2196                           
  2197                           	psect	text2
  2198     0D75                     __ptext2:	
  2199 ;; *************** function _HAL_USART_ASYNC_Init *****************
  2200 ;; Defined at:
  2201 ;;		line 33 in file "MCAL_layer/usart/hal_usart.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  baud            4   74[BANK0 ] unsigned long 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2215 ;;      Params:         0       4       0       0       0
  2216 ;;      Locals:         0       0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0
  2218 ;;      Totals:         0       4       0       0       0
  2219 ;;Total ram usage:        4 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 7
  2222 ;; This function calls:
  2223 ;;		_USART_Baud_Rate_Calculation
  2224 ;;		_pinMode
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230     0D75                     _HAL_USART_ASYNC_Init:	
  2231                           ;psect for function _HAL_USART_ASYNC_Init
  2232                           
  2233     0D75                     l5771:	
  2234                           ;incstack = 0
  2235                           ; Regs used in _HAL_USART_ASYNC_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2236                           
  2237                           
  2238                           ;MCAL_layer/usart/hal_usart.c: 33: void HAL_USART_ASYNC_Init(uint32 baud);MCAL_layer/usa
      +                          rt/hal_usart.c: 34: {;MCAL_layer/usart/hal_usart.c: 35:     (RCSTAbits.SPEN = 0);
  2239     0D75  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0D76  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0D77  1398               	bcf	24,7	;volatile
  2242                           
  2243                           ;MCAL_layer/usart/hal_usart.c: 36:     (TXSTAbits.SYNC = 0);
  2244     0D78  1683               	bsf	3,5	;RP0=1, select bank1
  2245     0D79  1303               	bcf	3,6	;RP1=0, select bank1
  2246     0D7A  1218               	bcf	24,4	;volatile
  2247     0D7B                     l5773:
  2248                           
  2249                           ;MCAL_layer/usart/hal_usart.c: 37:     USART_Baud_Rate_Calculation(baud);
  2250     0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  2251     0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  2252     0D7D  086D               	movf	HAL_USART_ASYNC_Init@baud+3,w
  2253     0D7E  00D9               	movwf	USART_Baud_Rate_Calculation@baud+3
  2254     0D7F  086C               	movf	HAL_USART_ASYNC_Init@baud+2,w
  2255     0D80  00D8               	movwf	USART_Baud_Rate_Calculation@baud+2
  2256     0D81  086B               	movf	HAL_USART_ASYNC_Init@baud+1,w
  2257     0D82  00D7               	movwf	USART_Baud_Rate_Calculation@baud+1
  2258     0D83  086A               	movf	HAL_USART_ASYNC_Init@baud,w
  2259     0D84  00D6               	movwf	USART_Baud_Rate_Calculation@baud
  2260     0D85  120A  118A  23F0  120A  158A  	fcall	_USART_Baud_Rate_Calculation
  2261     0D8A                     l5775:
  2262                           
  2263                           ;MCAL_layer/usart/hal_usart.c: 38:     (TXSTAbits.TX9 = 0);
  2264     0D8A  1683               	bsf	3,5	;RP0=1, select bank1
  2265     0D8B  1303               	bcf	3,6	;RP1=0, select bank1
  2266     0D8C  1318               	bcf	24,6	;volatile
  2267     0D8D                     l5777:
  2268                           
  2269                           ;MCAL_layer/usart/hal_usart.c: 39:     (TXSTAbits.TXEN = 1);
  2270     0D8D  1698               	bsf	24,5	;volatile
  2271     0D8E                     l5779:
  2272                           
  2273                           ;MCAL_layer/usart/hal_usart.c: 41:     (RCSTAbits.RX9 = 0);
  2274     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  2275     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  2276     0D90  1318               	bcf	24,6	;volatile
  2277     0D91                     l5781:
  2278                           
  2279                           ;MCAL_layer/usart/hal_usart.c: 42:     (RCSTAbits.CREN = 1);
  2280     0D91  1618               	bsf	24,4	;volatile
  2281     0D92                     l5783:
  2282                           
  2283                           ;MCAL_layer/usart/hal_usart.c: 44:     pinMode(PC,PIN6,INPUT);
  2284     0D92  3006               	movlw	6
  2285     0D93  00A0               	movwf	pinMode@Pinx
  2286     0D94  01A1               	clrf	pinMode@mode
  2287     0D95  0AA1               	incf	pinMode@mode,f
  2288     0D96  3002               	movlw	2
  2289     0D97  120A  118A  2546  120A  158A  	fcall	_pinMode
  2290     0D9C                     l5785:
  2291                           
  2292                           ;MCAL_layer/usart/hal_usart.c: 45:     pinMode(PC,PIN7,INPUT);
  2293     0D9C  3007               	movlw	7
  2294     0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  2295     0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  2296     0D9F  00A0               	movwf	pinMode@Pinx
  2297     0DA0  01A1               	clrf	pinMode@mode
  2298     0DA1  0AA1               	incf	pinMode@mode,f
  2299     0DA2  3002               	movlw	2
  2300     0DA3  120A  118A  2546  120A  158A  	fcall	_pinMode
  2301     0DA8                     l5787:
  2302                           
  2303                           ;MCAL_layer/usart/hal_usart.c: 47:     EUSART_FramingErrorHandler = EUSART_FramingErrorH
      +                          andler_Isr;
  2304     0DA8  3001               	movlw	(low (fp__EUSART_FramingErrorHandler_Isr-i1fpbase))& (0+255)
  2305     0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  2306     0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  2307     0DAB  00C9               	movwf	_EUSART_FramingErrorHandler^(0+128)
  2308     0DAC                     l5789:
  2309                           
  2310                           ;MCAL_layer/usart/hal_usart.c: 48:     EUSART_OverrunErrorHandler = EUSART_OverrunErrorH
      +                          andler_Isr;
  2311     0DAC  3004               	movlw	(low (fp__EUSART_OverrunErrorHandler_Isr-i1fpbase))& (0+255)
  2312     0DAD  00C8               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2313     0DAE                     l5791:
  2314                           
  2315                           ;MCAL_layer/usart/hal_usart.c: 50:     Serial.begin = HAL_USART_ASYNC_Init;
  2316     0DAE  300D               	movlw	(low (fp__HAL_USART_ASYNC_Init-fpbase))& (0+255)
  2317     0DAF  00B6               	movwf	_Serial^(0+128)	;volatile
  2318     0DB0                     l5793:
  2319                           
  2320                           ;MCAL_layer/usart/hal_usart.c: 51:     Serial.read = HAL_USART_Read_Char;
  2321     0DB0  3007               	movlw	(low (fp__HAL_USART_Read_Char-i1fpbase))& (0+255)
  2322     0DB1  00BA               	movwf	(low ((_Serial| 0+4)))^(0+128)	;volatile
  2323     0DB2                     l5795:
  2324                           
  2325                           ;MCAL_layer/usart/hal_usart.c: 52:     Serial.write = HAL_USART_Write_Char;
  2326     0DB2  300A               	movlw	(low (fp__HAL_USART_Write_Char-i1fpbase))& (0+255)
  2327     0DB3  00B7               	movwf	(low ((_Serial| 0+1)))^(0+128)	;volatile
  2328     0DB4                     l5797:
  2329                           
  2330                           ;MCAL_layer/usart/hal_usart.c: 53:     Serial.print = HAL_USART_Write_String;
  2331     0DB4  30BB               	movlw	(low (0-fpbase))& (0+255)
  2332     0DB5  00B8               	movwf	(low ((_Serial| 0+2)))^(0+128)	;volatile
  2333     0DB6                     l5799:
  2334                           
  2335                           ;MCAL_layer/usart/hal_usart.c: 54:     Serial.println = HAL_USART_Write_String_ln;
  2336     0DB6  300D               	movlw	(low (fp__HAL_USART_Write_String_ln-i1fpbase))& (0+255)
  2337     0DB7  00B9               	movwf	(low ((_Serial| 0+3)))^(0+128)	;volatile
  2338     0DB8                     l5801:
  2339                           
  2340                           ;MCAL_layer/usart/hal_usart.c: 55:     Serial.end = HAL_USART_ASYNC_DeInit;
  2341     0DB8  30BB               	movlw	(low (0-fpbase))& (0+255)
  2342     0DB9  00BB               	movwf	(low ((_Serial| 0+5)))^(0+128)	;volatile
  2343     0DBA                     l5803:
  2344                           
  2345                           ;MCAL_layer/usart/hal_usart.c: 56:     Serial.set_interrupt_handler = HAL_USART_Set_Inte
      +                          rrupt_Handler;
  2346     0DBA  3007               	movlw	(low (fp__HAL_USART_Set_Interrupt_Handler-fpbase))& (0+255)
  2347     0DBB  00BD               	movwf	(low ((_Serial| 0+7)))^(0+128)	;volatile
  2348     0DBC                     l5805:
  2349                           
  2350                           ;MCAL_layer/usart/hal_usart.c: 57:     Serial.available = HAL_USART_is_Available;
  2351     0DBC  30BB               	movlw	(low (0-fpbase))& (0+255)
  2352     0DBD  00BC               	movwf	(low ((_Serial| 0+6)))^(0+128)	;volatile
  2353     0DBE                     l5807:
  2354                           
  2355                           ;MCAL_layer/usart/hal_usart.c: 58:     (RCSTAbits.SPEN = 1);
  2356     0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  2357     0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  2358     0DC0  1798               	bsf	24,7	;volatile
  2359     0DC1                     l1418:
  2360     0DC1  0008               	return
  2361     0DC2                     __end_of_HAL_USART_ASYNC_Init:
  2362                           
  2363                           	psect	text3
  2364     03F0                     __ptext3:	
  2365 ;; *************** function _USART_Baud_Rate_Calculation *****************
  2366 ;; Defined at:
  2367 ;;		line 115 in file "MCAL_layer/usart/hal_usart.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  baud            4   54[BANK0 ] unsigned long 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  Baud_Rate_Te    4   70[BANK0 ] float 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       4       0       0       0
  2382 ;;      Locals:         0       4       0       0       0
  2383 ;;      Temps:          0      12       0       0       0
  2384 ;;      Totals:         0      20       0       0       0
  2385 ;;Total ram usage:       20 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 6
  2388 ;; This function calls:
  2389 ;;		___fldiv
  2390 ;;		___flge
  2391 ;;		___fltol
  2392 ;;		___lldiv
  2393 ;;		___xxtofl
  2394 ;; This function is called by:
  2395 ;;		_HAL_USART_ASYNC_Init
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399     03F0                     _USART_Baud_Rate_Calculation:	
  2400                           ;psect for function _USART_Baud_Rate_Calculation
  2401                           
  2402     03F0                     l5297:	
  2403                           ;incstack = 0
  2404                           ; Regs used in _USART_Baud_Rate_Calculation: [wreg+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2405                           
  2406                           
  2407                           ;MCAL_layer/usart/hal_usart.c: 115: static void USART_Baud_Rate_Calculation(uint32 baud)
      +                          ;MCAL_layer/usart/hal_usart.c: 116: {;MCAL_layer/usart/hal_usart.c: 117:     float Baud_
      +                          Rate_Temp = 0;
  2408     03F0  3000               	movlw	0
  2409     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2410     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2411     03F3  00E9               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  2412     03F4  3000               	movlw	0
  2413     03F5  00E8               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  2414     03F6  3000               	movlw	0
  2415     03F7  00E7               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  2416     03F8  3000               	movlw	0
  2417     03F9  00E6               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp
  2418     03FA                     l5299:
  2419                           
  2420                           ;MCAL_layer/usart/hal_usart.c: 118:     if(baud <= 2400)
  2421     03FA  0859               	movf	USART_Baud_Rate_Calculation@baud+3,w
  2422     03FB  1D03               	btfss	3,2
  2423     03FC  2C0B               	goto	u4771
  2424     03FD  0858               	movf	USART_Baud_Rate_Calculation@baud+2,w
  2425     03FE  1D03               	btfss	3,2
  2426     03FF  2C0B               	goto	u4771
  2427     0400  3009               	movlw	9
  2428     0401  0257               	subwf	USART_Baud_Rate_Calculation@baud+1,w
  2429     0402  1D03               	skipz
  2430     0403  2C08               	goto	u4773
  2431     0404  3061               	movlw	97
  2432     0405  0256               	subwf	USART_Baud_Rate_Calculation@baud,w
  2433     0406  1D03               	skipz
  2434     0407  2C08               	goto	u4773
  2435     0408                     u4773:
  2436     0408  1803               	btfsc	3,0
  2437     0409  2C0B               	goto	u4771
  2438     040A  2C0C               	goto	u4770
  2439     040B                     u4771:
  2440     040B  2C7F               	goto	l5305
  2441     040C                     u4770:
  2442     040C                     l5301:
  2443                           
  2444                           ;MCAL_layer/usart/hal_usart.c: 119:     {;MCAL_layer/usart/hal_usart.c: 120:         (TX
      +                          STAbits.BRGH = 0);
  2445     040C  1683               	bsf	3,5	;RP0=1, select bank1
  2446     040D  1303               	bcf	3,6	;RP1=0, select bank1
  2447     040E  1118               	bcf	24,2	;volatile
  2448     040F                     l5303:
  2449                           
  2450                           ;MCAL_layer/usart/hal_usart.c: 121:         Baud_Rate_Temp = (16000000 - baud*64)/(baud*
      +                          64);
  2451     040F  1283               	bcf	3,5	;RP0=0, select bank0
  2452     0410  1303               	bcf	3,6	;RP1=0, select bank0
  2453     0411  0856               	movf	USART_Baud_Rate_Calculation@baud,w
  2454     0412  00DA               	movwf	??_USART_Baud_Rate_Calculation
  2455     0413  0857               	movf	USART_Baud_Rate_Calculation@baud+1,w
  2456     0414  00DB               	movwf	??_USART_Baud_Rate_Calculation+1
  2457     0415  0858               	movf	USART_Baud_Rate_Calculation@baud+2,w
  2458     0416  00DC               	movwf	??_USART_Baud_Rate_Calculation+2
  2459     0417  0859               	movf	USART_Baud_Rate_Calculation@baud+3,w
  2460     0418  00DD               	movwf	??_USART_Baud_Rate_Calculation+3
  2461     0419  3006               	movlw	6
  2462     041A                     u4785:
  2463     041A  1003               	clrc
  2464     041B  0DDA               	rlf	??_USART_Baud_Rate_Calculation,f
  2465     041C  0DDB               	rlf	??_USART_Baud_Rate_Calculation+1,f
  2466     041D  0DDC               	rlf	??_USART_Baud_Rate_Calculation+2,f
  2467     041E  0DDD               	rlf	??_USART_Baud_Rate_Calculation+3,f
  2468     041F                     u4780:
  2469     041F  3EFF               	addlw	-1
  2470     0420  1D03               	skipz
  2471     0421  2C1A               	goto	u4785
  2472     0422  3000               	movlw	0
  2473     0423  00DE               	movwf	??_USART_Baud_Rate_Calculation+4
  2474     0424  3024               	movlw	36
  2475     0425  00DF               	movwf	??_USART_Baud_Rate_Calculation+5
  2476     0426  30F4               	movlw	244
  2477     0427  00E0               	movwf	??_USART_Baud_Rate_Calculation+6
  2478     0428  3000               	movlw	0
  2479     0429  00E1               	movwf	??_USART_Baud_Rate_Calculation+7
  2480     042A  085A               	movf	??_USART_Baud_Rate_Calculation,w
  2481     042B  02DE               	subwf	??_USART_Baud_Rate_Calculation+4,f
  2482     042C  085B               	movf	??_USART_Baud_Rate_Calculation+1,w
  2483     042D  1C03               	skipc
  2484     042E  0F5B               	incfsz	??_USART_Baud_Rate_Calculation+1,w
  2485     042F  2C31               	goto	u4791
  2486     0430  2C32               	goto	u4792
  2487     0431                     u4791:
  2488     0431  02DF               	subwf	??_USART_Baud_Rate_Calculation+5,f
  2489     0432                     u4792:
  2490     0432  085C               	movf	??_USART_Baud_Rate_Calculation+2,w
  2491     0433  1C03               	skipc
  2492     0434  0F5C               	incfsz	??_USART_Baud_Rate_Calculation+2,w
  2493     0435  2C37               	goto	u4793
  2494     0436  2C38               	goto	u4794
  2495     0437                     u4793:
  2496     0437  02E0               	subwf	??_USART_Baud_Rate_Calculation+6,f
  2497     0438                     u4794:
  2498     0438  085D               	movf	??_USART_Baud_Rate_Calculation+3,w
  2499     0439  1C03               	skipc
  2500     043A  0F5D               	incfsz	??_USART_Baud_Rate_Calculation+3,w
  2501     043B  2C3D               	goto	u4795
  2502     043C  2C3E               	goto	u4796
  2503     043D                     u4795:
  2504     043D  02E1               	subwf	??_USART_Baud_Rate_Calculation+7,f
  2505     043E                     u4796:
  2506     043E  0861               	movf	??_USART_Baud_Rate_Calculation+7,w
  2507     043F  00A7               	movwf	___lldiv@dividend+3
  2508     0440  0860               	movf	??_USART_Baud_Rate_Calculation+6,w
  2509     0441  00A6               	movwf	___lldiv@dividend+2
  2510     0442  085F               	movf	??_USART_Baud_Rate_Calculation+5,w
  2511     0443  00A5               	movwf	___lldiv@dividend+1
  2512     0444  085E               	movf	??_USART_Baud_Rate_Calculation+4,w
  2513     0445  00A4               	movwf	___lldiv@dividend
  2514     0446  0856               	movf	USART_Baud_Rate_Calculation@baud,w
  2515     0447  00E2               	movwf	??_USART_Baud_Rate_Calculation+8
  2516     0448  0857               	movf	USART_Baud_Rate_Calculation@baud+1,w
  2517     0449  00E3               	movwf	??_USART_Baud_Rate_Calculation+9
  2518     044A  0858               	movf	USART_Baud_Rate_Calculation@baud+2,w
  2519     044B  00E4               	movwf	??_USART_Baud_Rate_Calculation+10
  2520     044C  0859               	movf	USART_Baud_Rate_Calculation@baud+3,w
  2521     044D  00E5               	movwf	??_USART_Baud_Rate_Calculation+11
  2522     044E  3006               	movlw	6
  2523     044F                     u4805:
  2524     044F  1003               	clrc
  2525     0450  0DE2               	rlf	??_USART_Baud_Rate_Calculation+8,f
  2526     0451  0DE3               	rlf	??_USART_Baud_Rate_Calculation+9,f
  2527     0452  0DE4               	rlf	??_USART_Baud_Rate_Calculation+10,f
  2528     0453  0DE5               	rlf	??_USART_Baud_Rate_Calculation+11,f
  2529     0454                     u4800:
  2530     0454  3EFF               	addlw	-1
  2531     0455  1D03               	skipz
  2532     0456  2C4F               	goto	u4805
  2533     0457  0865               	movf	??_USART_Baud_Rate_Calculation+11,w
  2534     0458  00A3               	movwf	___lldiv@divisor+3
  2535     0459  0864               	movf	??_USART_Baud_Rate_Calculation+10,w
  2536     045A  00A2               	movwf	___lldiv@divisor+2
  2537     045B  0863               	movf	??_USART_Baud_Rate_Calculation+9,w
  2538     045C  00A1               	movwf	___lldiv@divisor+1
  2539     045D  0862               	movf	??_USART_Baud_Rate_Calculation+8,w
  2540     045E  00A0               	movwf	___lldiv@divisor
  2541     045F  120A  158A  25C2  120A  118A  	fcall	___lldiv
  2542     0464  1283               	bcf	3,5	;RP0=0, select bank0
  2543     0465  1303               	bcf	3,6	;RP1=0, select bank0
  2544     0466  0823               	movf	?___lldiv+3,w
  2545     0467  00B1               	movwf	___xxtofl@val+3
  2546     0468  0822               	movf	?___lldiv+2,w
  2547     0469  00B0               	movwf	___xxtofl@val+2
  2548     046A  0821               	movf	?___lldiv+1,w
  2549     046B  00AF               	movwf	___xxtofl@val+1
  2550     046C  0820               	movf	?___lldiv,w
  2551     046D  00AE               	movwf	___xxtofl@val
  2552     046E  3000               	movlw	0
  2553     046F  120A  158A  2746  120A  118A  	fcall	___xxtofl
  2554     0474  1283               	bcf	3,5	;RP0=0, select bank0
  2555     0475  1303               	bcf	3,6	;RP1=0, select bank0
  2556     0476  0831               	movf	?___xxtofl+3,w
  2557     0477  00E9               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  2558     0478  0830               	movf	?___xxtofl+2,w
  2559     0479  00E8               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  2560     047A  082F               	movf	?___xxtofl+1,w
  2561     047B  00E7               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  2562     047C  082E               	movf	?___xxtofl,w
  2563     047D  00E6               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp
  2564                           
  2565                           ;MCAL_layer/usart/hal_usart.c: 122:     }
  2566     047E  2D15               	goto	l5311
  2567     047F                     l5305:
  2568     047F  1283               	bcf	3,5	;RP0=0, select bank0
  2569     0480  1303               	bcf	3,6	;RP1=0, select bank0
  2570     0481  0859               	movf	USART_Baud_Rate_Calculation@baud+3,w
  2571     0482  1D03               	btfss	3,2
  2572     0483  2C93               	goto	u4810
  2573     0484  0858               	movf	USART_Baud_Rate_Calculation@baud+2,w
  2574     0485  1D03               	btfss	3,2
  2575     0486  2C93               	goto	u4810
  2576     0487  3009               	movlw	9
  2577     0488  0257               	subwf	USART_Baud_Rate_Calculation@baud+1,w
  2578     0489  1D03               	skipz
  2579     048A  2C8F               	goto	u4813
  2580     048B  3061               	movlw	97
  2581     048C  0256               	subwf	USART_Baud_Rate_Calculation@baud,w
  2582     048D  1D03               	skipz
  2583     048E  2C8F               	goto	u4813
  2584     048F                     u4813:
  2585     048F  1C03               	btfss	3,0
  2586     0490  2C92               	goto	u4811
  2587     0491  2C93               	goto	u4810
  2588     0492                     u4811:
  2589     0492  2D15               	goto	l5311
  2590     0493                     u4810:
  2591     0493                     l5307:
  2592                           
  2593                           ;MCAL_layer/usart/hal_usart.c: 124:     {;MCAL_layer/usart/hal_usart.c: 125:         (TX
      +                          STAbits.BRGH = 1);
  2594     0493  1683               	bsf	3,5	;RP0=1, select bank1
  2595     0494  1303               	bcf	3,6	;RP1=0, select bank1
  2596     0495  1518               	bsf	24,2	;volatile
  2597     0496                     l5309:
  2598                           
  2599                           ;MCAL_layer/usart/hal_usart.c: 126:         Baud_Rate_Temp = (16000000 - baud*16)/(float
      +                          )(baud*16);
  2600     0496  1283               	bcf	3,5	;RP0=0, select bank0
  2601     0497  1303               	bcf	3,6	;RP1=0, select bank0
  2602     0498  0856               	movf	USART_Baud_Rate_Calculation@baud,w
  2603     0499  00DA               	movwf	??_USART_Baud_Rate_Calculation
  2604     049A  0857               	movf	USART_Baud_Rate_Calculation@baud+1,w
  2605     049B  00DB               	movwf	??_USART_Baud_Rate_Calculation+1
  2606     049C  0858               	movf	USART_Baud_Rate_Calculation@baud+2,w
  2607     049D  00DC               	movwf	??_USART_Baud_Rate_Calculation+2
  2608     049E  0859               	movf	USART_Baud_Rate_Calculation@baud+3,w
  2609     049F  00DD               	movwf	??_USART_Baud_Rate_Calculation+3
  2610     04A0  3004               	movlw	4
  2611     04A1                     u4825:
  2612     04A1  1003               	clrc
  2613     04A2  0DDA               	rlf	??_USART_Baud_Rate_Calculation,f
  2614     04A3  0DDB               	rlf	??_USART_Baud_Rate_Calculation+1,f
  2615     04A4  0DDC               	rlf	??_USART_Baud_Rate_Calculation+2,f
  2616     04A5  0DDD               	rlf	??_USART_Baud_Rate_Calculation+3,f
  2617     04A6                     u4820:
  2618     04A6  3EFF               	addlw	-1
  2619     04A7  1D03               	skipz
  2620     04A8  2CA1               	goto	u4825
  2621     04A9  085D               	movf	??_USART_Baud_Rate_Calculation+3,w
  2622     04AA  00B1               	movwf	___xxtofl@val+3
  2623     04AB  085C               	movf	??_USART_Baud_Rate_Calculation+2,w
  2624     04AC  00B0               	movwf	___xxtofl@val+2
  2625     04AD  085B               	movf	??_USART_Baud_Rate_Calculation+1,w
  2626     04AE  00AF               	movwf	___xxtofl@val+1
  2627     04AF  085A               	movf	??_USART_Baud_Rate_Calculation,w
  2628     04B0  00AE               	movwf	___xxtofl@val
  2629     04B1  3000               	movlw	0
  2630     04B2  120A  158A  2746  120A  118A  	fcall	___xxtofl
  2631     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2632     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2633     04B9  0831               	movf	?___xxtofl+3,w
  2634     04BA  00BF               	movwf	___fldiv@a+3
  2635     04BB  0830               	movf	?___xxtofl+2,w
  2636     04BC  00BE               	movwf	___fldiv@a+2
  2637     04BD  082F               	movf	?___xxtofl+1,w
  2638     04BE  00BD               	movwf	___fldiv@a+1
  2639     04BF  082E               	movf	?___xxtofl,w
  2640     04C0  00BC               	movwf	___fldiv@a
  2641     04C1  0856               	movf	USART_Baud_Rate_Calculation@baud,w
  2642     04C2  00DE               	movwf	??_USART_Baud_Rate_Calculation+4
  2643     04C3  0857               	movf	USART_Baud_Rate_Calculation@baud+1,w
  2644     04C4  00DF               	movwf	??_USART_Baud_Rate_Calculation+5
  2645     04C5  0858               	movf	USART_Baud_Rate_Calculation@baud+2,w
  2646     04C6  00E0               	movwf	??_USART_Baud_Rate_Calculation+6
  2647     04C7  0859               	movf	USART_Baud_Rate_Calculation@baud+3,w
  2648     04C8  00E1               	movwf	??_USART_Baud_Rate_Calculation+7
  2649     04C9  3004               	movlw	4
  2650     04CA                     u4835:
  2651     04CA  1003               	clrc
  2652     04CB  0DDE               	rlf	??_USART_Baud_Rate_Calculation+4,f
  2653     04CC  0DDF               	rlf	??_USART_Baud_Rate_Calculation+5,f
  2654     04CD  0DE0               	rlf	??_USART_Baud_Rate_Calculation+6,f
  2655     04CE  0DE1               	rlf	??_USART_Baud_Rate_Calculation+7,f
  2656     04CF                     u4830:
  2657     04CF  3EFF               	addlw	-1
  2658     04D0  1D03               	skipz
  2659     04D1  2CCA               	goto	u4835
  2660     04D2  3000               	movlw	0
  2661     04D3  00E2               	movwf	??_USART_Baud_Rate_Calculation+8
  2662     04D4  3024               	movlw	36
  2663     04D5  00E3               	movwf	??_USART_Baud_Rate_Calculation+9
  2664     04D6  30F4               	movlw	244
  2665     04D7  00E4               	movwf	??_USART_Baud_Rate_Calculation+10
  2666     04D8  3000               	movlw	0
  2667     04D9  00E5               	movwf	??_USART_Baud_Rate_Calculation+11
  2668     04DA  085E               	movf	??_USART_Baud_Rate_Calculation+4,w
  2669     04DB  02E2               	subwf	??_USART_Baud_Rate_Calculation+8,f
  2670     04DC  085F               	movf	??_USART_Baud_Rate_Calculation+5,w
  2671     04DD  1C03               	skipc
  2672     04DE  0F5F               	incfsz	??_USART_Baud_Rate_Calculation+5,w
  2673     04DF  2CE1               	goto	u4841
  2674     04E0  2CE2               	goto	u4842
  2675     04E1                     u4841:
  2676     04E1  02E3               	subwf	??_USART_Baud_Rate_Calculation+9,f
  2677     04E2                     u4842:
  2678     04E2  0860               	movf	??_USART_Baud_Rate_Calculation+6,w
  2679     04E3  1C03               	skipc
  2680     04E4  0F60               	incfsz	??_USART_Baud_Rate_Calculation+6,w
  2681     04E5  2CE7               	goto	u4843
  2682     04E6  2CE8               	goto	u4844
  2683     04E7                     u4843:
  2684     04E7  02E4               	subwf	??_USART_Baud_Rate_Calculation+10,f
  2685     04E8                     u4844:
  2686     04E8  0861               	movf	??_USART_Baud_Rate_Calculation+7,w
  2687     04E9  1C03               	skipc
  2688     04EA  0F61               	incfsz	??_USART_Baud_Rate_Calculation+7,w
  2689     04EB  2CED               	goto	u4845
  2690     04EC  2CEE               	goto	u4846
  2691     04ED                     u4845:
  2692     04ED  02E5               	subwf	??_USART_Baud_Rate_Calculation+11,f
  2693     04EE                     u4846:
  2694     04EE  0865               	movf	??_USART_Baud_Rate_Calculation+11,w
  2695     04EF  00B1               	movwf	___xxtofl@val+3
  2696     04F0  0864               	movf	??_USART_Baud_Rate_Calculation+10,w
  2697     04F1  00B0               	movwf	___xxtofl@val+2
  2698     04F2  0863               	movf	??_USART_Baud_Rate_Calculation+9,w
  2699     04F3  00AF               	movwf	___xxtofl@val+1
  2700     04F4  0862               	movf	??_USART_Baud_Rate_Calculation+8,w
  2701     04F5  00AE               	movwf	___xxtofl@val
  2702     04F6  3000               	movlw	0
  2703     04F7  120A  158A  2746  120A  118A  	fcall	___xxtofl
  2704     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2705     04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2706     04FE  0831               	movf	?___xxtofl+3,w
  2707     04FF  00C3               	movwf	___fldiv@b+3
  2708     0500  0830               	movf	?___xxtofl+2,w
  2709     0501  00C2               	movwf	___fldiv@b+2
  2710     0502  082F               	movf	?___xxtofl+1,w
  2711     0503  00C1               	movwf	___fldiv@b+1
  2712     0504  082E               	movf	?___xxtofl,w
  2713     0505  00C0               	movwf	___fldiv@b
  2714     0506  120A  118A  206D  120A  118A  	fcall	___fldiv
  2715     050B  1283               	bcf	3,5	;RP0=0, select bank0
  2716     050C  1303               	bcf	3,6	;RP1=0, select bank0
  2717     050D  083F               	movf	?___fldiv+3,w
  2718     050E  00E9               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  2719     050F  083E               	movf	?___fldiv+2,w
  2720     0510  00E8               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  2721     0511  083D               	movf	?___fldiv+1,w
  2722     0512  00E7               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  2723     0513  083C               	movf	?___fldiv,w
  2724     0514  00E6               	movwf	USART_Baud_Rate_Calculation@Baud_Rate_Temp
  2725     0515                     l5311:
  2726                           
  2727                           ;MCAL_layer/usart/hal_usart.c: 128:     if(Baud_Rate_Temp < 255)
  2728     0515  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0516  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0517  0869               	movf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+3,w
  2731     0518  00A3               	movwf	___flge@ff1+3
  2732     0519  0868               	movf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+2,w
  2733     051A  00A2               	movwf	___flge@ff1+2
  2734     051B  0867               	movf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+1,w
  2735     051C  00A1               	movwf	___flge@ff1+1
  2736     051D  0866               	movf	USART_Baud_Rate_Calculation@Baud_Rate_Temp,w
  2737     051E  00A0               	movwf	___flge@ff1
  2738     051F  3043               	movlw	67
  2739     0520  00A7               	movwf	___flge@ff2+3
  2740     0521  307F               	movlw	127
  2741     0522  00A6               	movwf	___flge@ff2+2
  2742     0523  3000               	movlw	0
  2743     0524  00A5               	movwf	___flge@ff2+1
  2744     0525  3000               	movlw	0
  2745     0526  00A4               	movwf	___flge@ff2
  2746     0527  120A  158A  26A2  120A  118A  	fcall	___flge
  2747     052C  1803               	btfsc	3,0
  2748     052D  2D2F               	goto	u4851
  2749     052E  2D30               	goto	u4850
  2750     052F                     u4851:
  2751     052F  2D45               	goto	l1462
  2752     0530                     u4850:
  2753     0530                     l5313:
  2754                           
  2755                           ;MCAL_layer/usart/hal_usart.c: 129:     {SPBRG = (uint8)((uint32)Baud_Rate_Temp);}
  2756     0530  1283               	bcf	3,5	;RP0=0, select bank0
  2757     0531  1303               	bcf	3,6	;RP1=0, select bank0
  2758     0532  0869               	movf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+3,w
  2759     0533  00A3               	movwf	___fltol@f1+3
  2760     0534  0868               	movf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+2,w
  2761     0535  00A2               	movwf	___fltol@f1+2
  2762     0536  0867               	movf	USART_Baud_Rate_Calculation@Baud_Rate_Temp+1,w
  2763     0537  00A1               	movwf	___fltol@f1+1
  2764     0538  0866               	movf	USART_Baud_Rate_Calculation@Baud_Rate_Temp,w
  2765     0539  00A0               	movwf	___fltol@f1
  2766     053A  120A  158A  262A  120A  118A  	fcall	___fltol
  2767     053F  1283               	bcf	3,5	;RP0=0, select bank0
  2768     0540  1303               	bcf	3,6	;RP1=0, select bank0
  2769     0541  0820               	movf	?___fltol,w
  2770     0542  1683               	bsf	3,5	;RP0=1, select bank1
  2771     0543  1303               	bcf	3,6	;RP1=0, select bank1
  2772     0544  0099               	movwf	25	;volatile
  2773     0545                     l1462:
  2774     0545  0008               	return
  2775     0546                     __end_of_USART_Baud_Rate_Calculation:
  2776                           
  2777                           	psect	text4
  2778     0F46                     __ptext4:	
  2779 ;; *************** function ___xxtofl *****************
  2780 ;; Defined at:
  2781 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  sign            1    wreg     unsigned char 
  2784 ;;  val             4   14[BANK0 ] long 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  sign            1   22[BANK0 ] unsigned char 
  2787 ;;  arg             4   24[BANK0 ] unsigned long 
  2788 ;;  exp             1   23[BANK0 ] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  4   14[BANK0 ] unsigned char 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0, btemp+1
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       4       0       0       0
  2799 ;;      Locals:         0       6       0       0       0
  2800 ;;      Temps:          0       4       0       0       0
  2801 ;;      Totals:         0      14       0       0       0
  2802 ;;Total ram usage:       14 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 5
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_USART_Baud_Rate_Calculation
  2809 ;;		_HAL_I2C_setClock
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813     0F46                     ___xxtofl:	
  2814                           ;psect for function ___xxtofl
  2815                           
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  2819                           ;___xxtofl@sign stored from wreg
  2820     0F46  1283               	bcf	3,5	;RP0=0, select bank0
  2821     0F47  1303               	bcf	3,6	;RP1=0, select bank0
  2822     0F48  00B6               	movwf	___xxtofl@sign
  2823     0F49                     l5081:
  2824     0F49  0836               	movf	___xxtofl@sign,w
  2825     0F4A  1903               	btfsc	3,2
  2826     0F4B  2F4D               	goto	u4261
  2827     0F4C  2F4E               	goto	u4260
  2828     0F4D                     u4261:
  2829     0F4D  2F62               	goto	l5087
  2830     0F4E                     u4260:
  2831     0F4E                     l5083:
  2832     0F4E  1FB1               	btfss	___xxtofl@val+3,7
  2833     0F4F  2F51               	goto	u4271
  2834     0F50  2F52               	goto	u4270
  2835     0F51                     u4271:
  2836     0F51  2F62               	goto	l5087
  2837     0F52                     u4270:
  2838     0F52                     l5085:
  2839     0F52  092E               	comf	___xxtofl@val,w
  2840     0F53  00B8               	movwf	___xxtofl@arg
  2841     0F54  092F               	comf	___xxtofl@val+1,w
  2842     0F55  00B9               	movwf	___xxtofl@arg+1
  2843     0F56  0930               	comf	___xxtofl@val+2,w
  2844     0F57  00BA               	movwf	___xxtofl@arg+2
  2845     0F58  0931               	comf	___xxtofl@val+3,w
  2846     0F59  00BB               	movwf	___xxtofl@arg+3
  2847     0F5A  0AB8               	incf	___xxtofl@arg,f
  2848     0F5B  1903               	skipnz
  2849     0F5C  0AB9               	incf	___xxtofl@arg+1,f
  2850     0F5D  1903               	skipnz
  2851     0F5E  0ABA               	incf	___xxtofl@arg+2,f
  2852     0F5F  1903               	skipnz
  2853     0F60  0ABB               	incf	___xxtofl@arg+3,f
  2854     0F61  2F6A               	goto	l2041
  2855     0F62                     l5087:
  2856     0F62  0831               	movf	___xxtofl@val+3,w
  2857     0F63  00BB               	movwf	___xxtofl@arg+3
  2858     0F64  0830               	movf	___xxtofl@val+2,w
  2859     0F65  00BA               	movwf	___xxtofl@arg+2
  2860     0F66  082F               	movf	___xxtofl@val+1,w
  2861     0F67  00B9               	movwf	___xxtofl@arg+1
  2862     0F68  082E               	movf	___xxtofl@val,w
  2863     0F69  00B8               	movwf	___xxtofl@arg
  2864     0F6A                     l2041:
  2865     0F6A  0831               	movf	___xxtofl@val+3,w
  2866     0F6B  0430               	iorwf	___xxtofl@val+2,w
  2867     0F6C  042F               	iorwf	___xxtofl@val+1,w
  2868     0F6D  042E               	iorwf	___xxtofl@val,w
  2869     0F6E  1D03               	skipz
  2870     0F6F  2F71               	goto	u4281
  2871     0F70  2F72               	goto	u4280
  2872     0F71                     u4281:
  2873     0F71  2F7B               	goto	l5093
  2874     0F72                     u4280:
  2875     0F72                     l5089:
  2876     0F72  3000               	movlw	0
  2877     0F73  00B1               	movwf	?___xxtofl+3
  2878     0F74  3000               	movlw	0
  2879     0F75  00B0               	movwf	?___xxtofl+2
  2880     0F76  3000               	movlw	0
  2881     0F77  00AF               	movwf	?___xxtofl+1
  2882     0F78  3000               	movlw	0
  2883     0F79  00AE               	movwf	?___xxtofl
  2884     0F7A  2FFF               	goto	l2043
  2885     0F7B                     l5093:
  2886     0F7B  3096               	movlw	150
  2887     0F7C  00B7               	movwf	___xxtofl@exp
  2888     0F7D  2F8B               	goto	l5099
  2889     0F7E                     l5095:
  2890     0F7E  3001               	movlw	1
  2891     0F7F  00FF               	movwf	btemp+1
  2892     0F80  087F               	movf	btemp+1,w
  2893     0F81  07B7               	addwf	___xxtofl@exp,f
  2894     0F82                     l5097:
  2895     0F82  3001               	movlw	1
  2896     0F83                     u4295:
  2897     0F83  1003               	clrc
  2898     0F84  0CBB               	rrf	___xxtofl@arg+3,f
  2899     0F85  0CBA               	rrf	___xxtofl@arg+2,f
  2900     0F86  0CB9               	rrf	___xxtofl@arg+1,f
  2901     0F87  0CB8               	rrf	___xxtofl@arg,f
  2902     0F88  3EFF               	addlw	-1
  2903     0F89  1D03               	skipz
  2904     0F8A  2F83               	goto	u4295
  2905     0F8B                     l5099:
  2906     0F8B  30FE               	movlw	254
  2907     0F8C  053B               	andwf	___xxtofl@arg+3,w
  2908     0F8D  1D03               	btfss	3,2
  2909     0F8E  2F90               	goto	u4301
  2910     0F8F  2F91               	goto	u4300
  2911     0F90                     u4301:
  2912     0F90  2F7E               	goto	l5095
  2913     0F91                     u4300:
  2914     0F91  2FAD               	goto	l5107
  2915     0F92                     l5101:
  2916     0F92  3001               	movlw	1
  2917     0F93  00FF               	movwf	btemp+1
  2918     0F94  087F               	movf	btemp+1,w
  2919     0F95  07B7               	addwf	___xxtofl@exp,f
  2920     0F96                     l5103:
  2921     0F96  3001               	movlw	1
  2922     0F97  07B8               	addwf	___xxtofl@arg,f
  2923     0F98  3000               	movlw	0
  2924     0F99  1803               	skipnc
  2925     0F9A  3001               	movlw	1
  2926     0F9B  07B9               	addwf	___xxtofl@arg+1,f
  2927     0F9C  3000               	movlw	0
  2928     0F9D  1803               	skipnc
  2929     0F9E  3001               	movlw	1
  2930     0F9F  07BA               	addwf	___xxtofl@arg+2,f
  2931     0FA0  3000               	movlw	0
  2932     0FA1  1803               	skipnc
  2933     0FA2  3001               	movlw	1
  2934     0FA3  07BB               	addwf	___xxtofl@arg+3,f
  2935     0FA4                     l5105:
  2936     0FA4  3001               	movlw	1
  2937     0FA5                     u4315:
  2938     0FA5  1003               	clrc
  2939     0FA6  0CBB               	rrf	___xxtofl@arg+3,f
  2940     0FA7  0CBA               	rrf	___xxtofl@arg+2,f
  2941     0FA8  0CB9               	rrf	___xxtofl@arg+1,f
  2942     0FA9  0CB8               	rrf	___xxtofl@arg,f
  2943     0FAA  3EFF               	addlw	-1
  2944     0FAB  1D03               	skipz
  2945     0FAC  2FA5               	goto	u4315
  2946     0FAD                     l5107:
  2947     0FAD  30FF               	movlw	255
  2948     0FAE  053B               	andwf	___xxtofl@arg+3,w
  2949     0FAF  1D03               	btfss	3,2
  2950     0FB0  2FB2               	goto	u4321
  2951     0FB1  2FB3               	goto	u4320
  2952     0FB2                     u4321:
  2953     0FB2  2F92               	goto	l5101
  2954     0FB3                     u4320:
  2955     0FB3  2FBF               	goto	l5111
  2956     0FB4                     l5109:
  2957     0FB4  3001               	movlw	1
  2958     0FB5  02B7               	subwf	___xxtofl@exp,f
  2959     0FB6  3001               	movlw	1
  2960     0FB7  00B2               	movwf	??___xxtofl
  2961     0FB8                     u4335:
  2962     0FB8  1003               	clrc
  2963     0FB9  0DB8               	rlf	___xxtofl@arg,f
  2964     0FBA  0DB9               	rlf	___xxtofl@arg+1,f
  2965     0FBB  0DBA               	rlf	___xxtofl@arg+2,f
  2966     0FBC  0DBB               	rlf	___xxtofl@arg+3,f
  2967     0FBD  0BB2               	decfsz	??___xxtofl,f
  2968     0FBE  2FB8               	goto	u4335
  2969     0FBF                     l5111:
  2970     0FBF  1BBA               	btfsc	___xxtofl@arg+2,7
  2971     0FC0  2FC2               	goto	u4341
  2972     0FC1  2FC3               	goto	u4340
  2973     0FC2                     u4341:
  2974     0FC2  2FC9               	goto	l2054
  2975     0FC3                     u4340:
  2976     0FC3                     l5113:
  2977     0FC3  3002               	movlw	2
  2978     0FC4  0237               	subwf	___xxtofl@exp,w
  2979     0FC5  1803               	skipnc
  2980     0FC6  2FC8               	goto	u4351
  2981     0FC7  2FC9               	goto	u4350
  2982     0FC8                     u4351:
  2983     0FC8  2FB4               	goto	l5109
  2984     0FC9                     u4350:
  2985     0FC9                     l2054:
  2986     0FC9  1837               	btfsc	___xxtofl@exp,0
  2987     0FCA  2FCC               	goto	u4361
  2988     0FCB  2FCD               	goto	u4360
  2989     0FCC                     u4361:
  2990     0FCC  2FD5               	goto	l2055
  2991     0FCD                     u4360:
  2992     0FCD                     l5115:
  2993     0FCD  30FF               	movlw	255
  2994     0FCE  05B8               	andwf	___xxtofl@arg,f
  2995     0FCF  30FF               	movlw	255
  2996     0FD0  05B9               	andwf	___xxtofl@arg+1,f
  2997     0FD1  307F               	movlw	127
  2998     0FD2  05BA               	andwf	___xxtofl@arg+2,f
  2999     0FD3  30FF               	movlw	255
  3000     0FD4  05BB               	andwf	___xxtofl@arg+3,f
  3001     0FD5                     l2055:
  3002     0FD5  1003               	clrc
  3003     0FD6  0CB7               	rrf	___xxtofl@exp,f
  3004     0FD7                     l5117:
  3005     0FD7  0837               	movf	___xxtofl@exp,w
  3006     0FD8  00B2               	movwf	??___xxtofl
  3007     0FD9  01B3               	clrf	??___xxtofl+1
  3008     0FDA  01B4               	clrf	??___xxtofl+2
  3009     0FDB  01B5               	clrf	??___xxtofl+3
  3010     0FDC  3018               	movlw	24
  3011     0FDD                     u4375:
  3012     0FDD  1003               	clrc
  3013     0FDE  0DB2               	rlf	??___xxtofl,f
  3014     0FDF  0DB3               	rlf	??___xxtofl+1,f
  3015     0FE0  0DB4               	rlf	??___xxtofl+2,f
  3016     0FE1  0DB5               	rlf	??___xxtofl+3,f
  3017     0FE2                     u4370:
  3018     0FE2  3EFF               	addlw	-1
  3019     0FE3  1D03               	skipz
  3020     0FE4  2FDD               	goto	u4375
  3021     0FE5  0832               	movf	??___xxtofl,w
  3022     0FE6  04B8               	iorwf	___xxtofl@arg,f
  3023     0FE7  0833               	movf	??___xxtofl+1,w
  3024     0FE8  04B9               	iorwf	___xxtofl@arg+1,f
  3025     0FE9  0834               	movf	??___xxtofl+2,w
  3026     0FEA  04BA               	iorwf	___xxtofl@arg+2,f
  3027     0FEB  0835               	movf	??___xxtofl+3,w
  3028     0FEC  04BB               	iorwf	___xxtofl@arg+3,f
  3029     0FED                     l5119:
  3030     0FED  0836               	movf	___xxtofl@sign,w
  3031     0FEE  1903               	btfsc	3,2
  3032     0FEF  2FF1               	goto	u4381
  3033     0FF0  2FF2               	goto	u4380
  3034     0FF1                     u4381:
  3035     0FF1  2FF7               	goto	l5125
  3036     0FF2                     u4380:
  3037     0FF2                     l5121:
  3038     0FF2  1FB1               	btfss	___xxtofl@val+3,7
  3039     0FF3  2FF5               	goto	u4391
  3040     0FF4  2FF6               	goto	u4390
  3041     0FF5                     u4391:
  3042     0FF5  2FF7               	goto	l5125
  3043     0FF6                     u4390:
  3044     0FF6                     l5123:
  3045     0FF6  17BB               	bsf	___xxtofl@arg+3,7
  3046     0FF7                     l5125:
  3047     0FF7  083B               	movf	___xxtofl@arg+3,w
  3048     0FF8  00B1               	movwf	?___xxtofl+3
  3049     0FF9  083A               	movf	___xxtofl@arg+2,w
  3050     0FFA  00B0               	movwf	?___xxtofl+2
  3051     0FFB  0839               	movf	___xxtofl@arg+1,w
  3052     0FFC  00AF               	movwf	?___xxtofl+1
  3053     0FFD  0838               	movf	___xxtofl@arg,w
  3054     0FFE  00AE               	movwf	?___xxtofl
  3055     0FFF                     l2043:
  3056     0FFF  0008               	return
  3057     1000                     __end_of___xxtofl:
  3058                           
  3059                           	psect	text5
  3060     0DC2                     __ptext5:	
  3061 ;; *************** function ___lldiv *****************
  3062 ;; Defined at:
  3063 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  divisor         4    0[BANK0 ] unsigned long 
  3066 ;;  dividend        4    4[BANK0 ] unsigned long 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  quotient        4    9[BANK0 ] unsigned long 
  3069 ;;  counter         1   13[BANK0 ] unsigned char 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  4    0[BANK0 ] unsigned long 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, btemp+1
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3079 ;;      Params:         0       8       0       0       0
  3080 ;;      Locals:         0       5       0       0       0
  3081 ;;      Temps:          0       1       0       0       0
  3082 ;;      Totals:         0      14       0       0       0
  3083 ;;Total ram usage:       14 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 5
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_USART_Baud_Rate_Calculation
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093     0DC2                     ___lldiv:	
  3094                           ;psect for function ___lldiv
  3095                           
  3096     0DC2                     l4851:	
  3097                           ;incstack = 0
  3098                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  3099                           
  3100     0DC2  3000               	movlw	0
  3101     0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  3102     0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  3103     0DC5  00AC               	movwf	___lldiv@quotient+3
  3104     0DC6  3000               	movlw	0
  3105     0DC7  00AB               	movwf	___lldiv@quotient+2
  3106     0DC8  3000               	movlw	0
  3107     0DC9  00AA               	movwf	___lldiv@quotient+1
  3108     0DCA  3000               	movlw	0
  3109     0DCB  00A9               	movwf	___lldiv@quotient
  3110     0DCC  0823               	movf	___lldiv@divisor+3,w
  3111     0DCD  0422               	iorwf	___lldiv@divisor+2,w
  3112     0DCE  0421               	iorwf	___lldiv@divisor+1,w
  3113     0DCF  0420               	iorwf	___lldiv@divisor,w
  3114     0DD0  1903               	skipnz
  3115     0DD1  2DD3               	goto	u3731
  3116     0DD2  2DD4               	goto	u3730
  3117     0DD3                     u3731:
  3118     0DD3  2E21               	goto	l4873
  3119     0DD4                     u3730:
  3120     0DD4                     l4853:
  3121     0DD4  01AD               	clrf	___lldiv@counter
  3122     0DD5  0AAD               	incf	___lldiv@counter,f
  3123     0DD6  2DE4               	goto	l4859
  3124     0DD7                     l4855:
  3125     0DD7  3001               	movlw	1
  3126     0DD8  00A8               	movwf	??___lldiv
  3127     0DD9                     u3745:
  3128     0DD9  1003               	clrc
  3129     0DDA  0DA0               	rlf	___lldiv@divisor,f
  3130     0DDB  0DA1               	rlf	___lldiv@divisor+1,f
  3131     0DDC  0DA2               	rlf	___lldiv@divisor+2,f
  3132     0DDD  0DA3               	rlf	___lldiv@divisor+3,f
  3133     0DDE  0BA8               	decfsz	??___lldiv,f
  3134     0DDF  2DD9               	goto	u3745
  3135     0DE0                     l4857:
  3136     0DE0  3001               	movlw	1
  3137     0DE1  00FF               	movwf	btemp+1
  3138     0DE2  087F               	movf	btemp+1,w
  3139     0DE3  07AD               	addwf	___lldiv@counter,f
  3140     0DE4                     l4859:
  3141     0DE4  1FA3               	btfss	___lldiv@divisor+3,7
  3142     0DE5  2DE7               	goto	u3751
  3143     0DE6  2DE8               	goto	u3750
  3144     0DE7                     u3751:
  3145     0DE7  2DD7               	goto	l4855
  3146     0DE8                     u3750:
  3147     0DE8                     l4861:
  3148     0DE8  3001               	movlw	1
  3149     0DE9  00A8               	movwf	??___lldiv
  3150     0DEA                     u3765:
  3151     0DEA  1003               	clrc
  3152     0DEB  0DA9               	rlf	___lldiv@quotient,f
  3153     0DEC  0DAA               	rlf	___lldiv@quotient+1,f
  3154     0DED  0DAB               	rlf	___lldiv@quotient+2,f
  3155     0DEE  0DAC               	rlf	___lldiv@quotient+3,f
  3156     0DEF  0BA8               	decfsz	??___lldiv,f
  3157     0DF0  2DEA               	goto	u3765
  3158     0DF1                     l4863:
  3159     0DF1  0823               	movf	___lldiv@divisor+3,w
  3160     0DF2  0227               	subwf	___lldiv@dividend+3,w
  3161     0DF3  1D03               	skipz
  3162     0DF4  2DFF               	goto	u3775
  3163     0DF5  0822               	movf	___lldiv@divisor+2,w
  3164     0DF6  0226               	subwf	___lldiv@dividend+2,w
  3165     0DF7  1D03               	skipz
  3166     0DF8  2DFF               	goto	u3775
  3167     0DF9  0821               	movf	___lldiv@divisor+1,w
  3168     0DFA  0225               	subwf	___lldiv@dividend+1,w
  3169     0DFB  1D03               	skipz
  3170     0DFC  2DFF               	goto	u3775
  3171     0DFD  0820               	movf	___lldiv@divisor,w
  3172     0DFE  0224               	subwf	___lldiv@dividend,w
  3173     0DFF                     u3775:
  3174     0DFF  1C03               	skipc
  3175     0E00  2E02               	goto	u3771
  3176     0E01  2E03               	goto	u3770
  3177     0E02                     u3771:
  3178     0E02  2E12               	goto	l4869
  3179     0E03                     u3770:
  3180     0E03                     l4865:
  3181     0E03  0820               	movf	___lldiv@divisor,w
  3182     0E04  02A4               	subwf	___lldiv@dividend,f
  3183     0E05  0821               	movf	___lldiv@divisor+1,w
  3184     0E06  1C03               	skipc
  3185     0E07  0F21               	incfsz	___lldiv@divisor+1,w
  3186     0E08  02A5               	subwf	___lldiv@dividend+1,f
  3187     0E09  0822               	movf	___lldiv@divisor+2,w
  3188     0E0A  1C03               	skipc
  3189     0E0B  0F22               	incfsz	___lldiv@divisor+2,w
  3190     0E0C  02A6               	subwf	___lldiv@dividend+2,f
  3191     0E0D  0823               	movf	___lldiv@divisor+3,w
  3192     0E0E  1C03               	skipc
  3193     0E0F  0F23               	incfsz	___lldiv@divisor+3,w
  3194     0E10  02A7               	subwf	___lldiv@dividend+3,f
  3195     0E11                     l4867:
  3196     0E11  1429               	bsf	___lldiv@quotient,0
  3197     0E12                     l4869:
  3198     0E12  3001               	movlw	1
  3199     0E13                     u3785:
  3200     0E13  1003               	clrc
  3201     0E14  0CA3               	rrf	___lldiv@divisor+3,f
  3202     0E15  0CA2               	rrf	___lldiv@divisor+2,f
  3203     0E16  0CA1               	rrf	___lldiv@divisor+1,f
  3204     0E17  0CA0               	rrf	___lldiv@divisor,f
  3205     0E18  3EFF               	addlw	-1
  3206     0E19  1D03               	skipz
  3207     0E1A  2E13               	goto	u3785
  3208     0E1B                     l4871:
  3209     0E1B  3001               	movlw	1
  3210     0E1C  02AD               	subwf	___lldiv@counter,f
  3211     0E1D  1D03               	btfss	3,2
  3212     0E1E  2E20               	goto	u3791
  3213     0E1F  2E21               	goto	u3790
  3214     0E20                     u3791:
  3215     0E20  2DE8               	goto	l4861
  3216     0E21                     u3790:
  3217     0E21                     l4873:
  3218     0E21  082C               	movf	___lldiv@quotient+3,w
  3219     0E22  00A3               	movwf	?___lldiv+3
  3220     0E23  082B               	movf	___lldiv@quotient+2,w
  3221     0E24  00A2               	movwf	?___lldiv+2
  3222     0E25  082A               	movf	___lldiv@quotient+1,w
  3223     0E26  00A1               	movwf	?___lldiv+1
  3224     0E27  0829               	movf	___lldiv@quotient,w
  3225     0E28  00A0               	movwf	?___lldiv
  3226     0E29                     l1644:
  3227     0E29  0008               	return
  3228     0E2A                     __end_of___lldiv:
  3229                           
  3230                           	psect	text6
  3231     0E2A                     __ptext6:	
  3232 ;; *************** function ___fltol *****************
  3233 ;; Defined at:
  3234 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  f1              4    0[BANK0 ] unsigned long 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  exp1            1    9[BANK0 ] unsigned char 
  3239 ;;  sign1           1    8[BANK0 ] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  4    0[BANK0 ] long 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, btemp+1
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       4       0       0       0
  3250 ;;      Locals:         0       2       0       0       0
  3251 ;;      Temps:          0       4       0       0       0
  3252 ;;      Totals:         0      10       0       0       0
  3253 ;;Total ram usage:       10 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 5
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_USART_Baud_Rate_Calculation
  3260 ;;		_HAL_I2C_setClock
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264     0E2A                     ___fltol:	
  3265                           ;psect for function ___fltol
  3266                           
  3267     0E2A                     l4897:	
  3268                           ;incstack = 0
  3269                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3270                           
  3271     0E2A  1003               	clrc
  3272     0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  3273     0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  3274     0E2D  0D22               	rlf	___fltol@f1+2,w
  3275     0E2E  0D23               	rlf	___fltol@f1+3,w
  3276     0E2F  00A9               	movwf	___fltol@exp1
  3277     0E30  0829               	movf	___fltol@exp1,w
  3278     0E31  1D03               	btfss	3,2
  3279     0E32  2E34               	goto	u3871
  3280     0E33  2E35               	goto	u3870
  3281     0E34                     u3871:
  3282     0E34  2E3E               	goto	l4903
  3283     0E35                     u3870:
  3284     0E35                     l4899:
  3285     0E35  3000               	movlw	0
  3286     0E36  00A3               	movwf	?___fltol+3
  3287     0E37  3000               	movlw	0
  3288     0E38  00A2               	movwf	?___fltol+2
  3289     0E39  3000               	movlw	0
  3290     0E3A  00A1               	movwf	?___fltol+1
  3291     0E3B  3000               	movlw	0
  3292     0E3C  00A0               	movwf	?___fltol
  3293     0E3D  2EA1               	goto	l1794
  3294     0E3E                     l4903:
  3295     0E3E  0820               	movf	___fltol@f1,w
  3296     0E3F  00A4               	movwf	??___fltol
  3297     0E40  0821               	movf	___fltol@f1+1,w
  3298     0E41  00A5               	movwf	??___fltol+1
  3299     0E42  0822               	movf	___fltol@f1+2,w
  3300     0E43  00A6               	movwf	??___fltol+2
  3301     0E44  0823               	movf	___fltol@f1+3,w
  3302     0E45  00A7               	movwf	??___fltol+3
  3303     0E46  301F               	movlw	31
  3304     0E47                     u3885:
  3305     0E47  1003               	clrc
  3306     0E48  0CA7               	rrf	??___fltol+3,f
  3307     0E49  0CA6               	rrf	??___fltol+2,f
  3308     0E4A  0CA5               	rrf	??___fltol+1,f
  3309     0E4B  0CA4               	rrf	??___fltol,f
  3310     0E4C                     u3880:
  3311     0E4C  3EFF               	addlw	-1
  3312     0E4D  1D03               	skipz
  3313     0E4E  2E47               	goto	u3885
  3314     0E4F  0824               	movf	??___fltol,w
  3315     0E50  00A8               	movwf	___fltol@sign1
  3316     0E51                     l4905:
  3317     0E51  17A2               	bsf	___fltol@f1+2,7
  3318     0E52                     l4907:
  3319     0E52  30FF               	movlw	255
  3320     0E53  05A0               	andwf	___fltol@f1,f
  3321     0E54  30FF               	movlw	255
  3322     0E55  05A1               	andwf	___fltol@f1+1,f
  3323     0E56  30FF               	movlw	255
  3324     0E57  05A2               	andwf	___fltol@f1+2,f
  3325     0E58  3000               	movlw	0
  3326     0E59  05A3               	andwf	___fltol@f1+3,f
  3327     0E5A                     l4909:
  3328     0E5A  3096               	movlw	150
  3329     0E5B  02A9               	subwf	___fltol@exp1,f
  3330     0E5C                     l4911:
  3331     0E5C  1FA9               	btfss	___fltol@exp1,7
  3332     0E5D  2E5F               	goto	u3891
  3333     0E5E  2E60               	goto	u3890
  3334     0E5F                     u3891:
  3335     0E5F  2E7A               	goto	l4923
  3336     0E60                     u3890:
  3337     0E60                     l4913:
  3338     0E60  0829               	movf	___fltol@exp1,w
  3339     0E61  3A80               	xorlw	128
  3340     0E62  3E97               	addlw	151
  3341     0E63  1803               	skipnc
  3342     0E64  2E66               	goto	u3901
  3343     0E65  2E67               	goto	u3900
  3344     0E66                     u3901:
  3345     0E66  2E68               	goto	l4919
  3346     0E67                     u3900:
  3347     0E67  2E35               	goto	l4899
  3348     0E68                     l4919:
  3349     0E68  3001               	movlw	1
  3350     0E69                     u3915:
  3351     0E69  1003               	clrc
  3352     0E6A  0CA3               	rrf	___fltol@f1+3,f
  3353     0E6B  0CA2               	rrf	___fltol@f1+2,f
  3354     0E6C  0CA1               	rrf	___fltol@f1+1,f
  3355     0E6D  0CA0               	rrf	___fltol@f1,f
  3356     0E6E  3EFF               	addlw	-1
  3357     0E6F  1D03               	skipz
  3358     0E70  2E69               	goto	u3915
  3359     0E71                     l4921:
  3360     0E71  3001               	movlw	1
  3361     0E72  00FF               	movwf	btemp+1
  3362     0E73  087F               	movf	btemp+1,w
  3363     0E74  07A9               	addwf	___fltol@exp1,f
  3364     0E75  1D03               	btfss	3,2
  3365     0E76  2E78               	goto	u3921
  3366     0E77  2E79               	goto	u3920
  3367     0E78                     u3921:
  3368     0E78  2E68               	goto	l4919
  3369     0E79                     u3920:
  3370     0E79  2E91               	goto	l4931
  3371     0E7A                     l4923:
  3372     0E7A  3020               	movlw	32
  3373     0E7B  0229               	subwf	___fltol@exp1,w
  3374     0E7C  1C03               	skipc
  3375     0E7D  2E7F               	goto	u3931
  3376     0E7E  2E80               	goto	u3930
  3377     0E7F                     u3931:
  3378     0E7F  2E8C               	goto	l1801
  3379     0E80                     u3930:
  3380     0E80  2E35               	goto	l4899
  3381     0E81                     l4929:
  3382     0E81  3001               	movlw	1
  3383     0E82  00A4               	movwf	??___fltol
  3384     0E83                     u3945:
  3385     0E83  1003               	clrc
  3386     0E84  0DA0               	rlf	___fltol@f1,f
  3387     0E85  0DA1               	rlf	___fltol@f1+1,f
  3388     0E86  0DA2               	rlf	___fltol@f1+2,f
  3389     0E87  0DA3               	rlf	___fltol@f1+3,f
  3390     0E88  0BA4               	decfsz	??___fltol,f
  3391     0E89  2E83               	goto	u3945
  3392     0E8A  3001               	movlw	1
  3393     0E8B  02A9               	subwf	___fltol@exp1,f
  3394     0E8C                     l1801:
  3395     0E8C  0829               	movf	___fltol@exp1,w
  3396     0E8D  1D03               	btfss	3,2
  3397     0E8E  2E90               	goto	u3951
  3398     0E8F  2E91               	goto	u3950
  3399     0E90                     u3951:
  3400     0E90  2E81               	goto	l4929
  3401     0E91                     u3950:
  3402     0E91                     l4931:
  3403     0E91  0828               	movf	___fltol@sign1,w
  3404     0E92  1903               	btfsc	3,2
  3405     0E93  2E95               	goto	u3961
  3406     0E94  2E96               	goto	u3960
  3407     0E95                     u3961:
  3408     0E95  2EA1               	goto	l1804
  3409     0E96                     u3960:
  3410     0E96                     l4933:
  3411     0E96  09A0               	comf	___fltol@f1,f
  3412     0E97  09A1               	comf	___fltol@f1+1,f
  3413     0E98  09A2               	comf	___fltol@f1+2,f
  3414     0E99  09A3               	comf	___fltol@f1+3,f
  3415     0E9A  0AA0               	incf	___fltol@f1,f
  3416     0E9B  1903               	skipnz
  3417     0E9C  0AA1               	incf	___fltol@f1+1,f
  3418     0E9D  1903               	skipnz
  3419     0E9E  0AA2               	incf	___fltol@f1+2,f
  3420     0E9F  1903               	skipnz
  3421     0EA0  0AA3               	incf	___fltol@f1+3,f
  3422     0EA1                     l1804:
  3423     0EA1                     l1794:
  3424     0EA1  0008               	return
  3425     0EA2                     __end_of___fltol:
  3426                           
  3427                           	psect	text7
  3428     0EA2                     __ptext7:	
  3429 ;; *************** function ___flge *****************
  3430 ;; Defined at:
  3431 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  ff1             4    0[BANK0 ] long 
  3434 ;;  ff2             4    4[BANK0 ] long 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         0       8       0       0       0
  3447 ;;      Locals:         0       0       0       0       0
  3448 ;;      Temps:          0       4       0       0       0
  3449 ;;      Totals:         0      12       0       0       0
  3450 ;;Total ram usage:       12 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 5
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_USART_Baud_Rate_Calculation
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460     0EA2                     ___flge:	
  3461                           ;psect for function ___flge
  3462                           
  3463     0EA2                     l4877:	
  3464                           ;incstack = 0
  3465                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3466                           
  3467     0EA2  3000               	movlw	0
  3468     0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  3469     0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  3470     0EA5  0520               	andwf	___flge@ff1,w
  3471     0EA6  00A8               	movwf	??___flge
  3472     0EA7  3000               	movlw	0
  3473     0EA8  0521               	andwf	___flge@ff1+1,w
  3474     0EA9  00A9               	movwf	??___flge+1
  3475     0EAA  3080               	movlw	128
  3476     0EAB  0522               	andwf	___flge@ff1+2,w
  3477     0EAC  00AA               	movwf	??___flge+2
  3478     0EAD  307F               	movlw	127
  3479     0EAE  0523               	andwf	___flge@ff1+3,w
  3480     0EAF  00AB               	movwf	??___flge+3
  3481     0EB0  082B               	movf	??___flge+3,w
  3482     0EB1  042A               	iorwf	??___flge+2,w
  3483     0EB2  0429               	iorwf	??___flge+1,w
  3484     0EB3  0428               	iorwf	??___flge,w
  3485     0EB4  1D03               	skipz
  3486     0EB5  2EB7               	goto	u3801
  3487     0EB6  2EB8               	goto	u3800
  3488     0EB7                     u3801:
  3489     0EB7  2EC0               	goto	l1782
  3490     0EB8                     u3800:
  3491     0EB8                     l4879:
  3492     0EB8  3000               	movlw	0
  3493     0EB9  00A3               	movwf	___flge@ff1+3
  3494     0EBA  3000               	movlw	0
  3495     0EBB  00A2               	movwf	___flge@ff1+2
  3496     0EBC  3000               	movlw	0
  3497     0EBD  00A1               	movwf	___flge@ff1+1
  3498     0EBE  3000               	movlw	0
  3499     0EBF  00A0               	movwf	___flge@ff1
  3500     0EC0                     l1782:
  3501     0EC0  3000               	movlw	0
  3502     0EC1  0524               	andwf	___flge@ff2,w
  3503     0EC2  00A8               	movwf	??___flge
  3504     0EC3  3000               	movlw	0
  3505     0EC4  0525               	andwf	___flge@ff2+1,w
  3506     0EC5  00A9               	movwf	??___flge+1
  3507     0EC6  3080               	movlw	128
  3508     0EC7  0526               	andwf	___flge@ff2+2,w
  3509     0EC8  00AA               	movwf	??___flge+2
  3510     0EC9  307F               	movlw	127
  3511     0ECA  0527               	andwf	___flge@ff2+3,w
  3512     0ECB  00AB               	movwf	??___flge+3
  3513     0ECC  082B               	movf	??___flge+3,w
  3514     0ECD  042A               	iorwf	??___flge+2,w
  3515     0ECE  0429               	iorwf	??___flge+1,w
  3516     0ECF  0428               	iorwf	??___flge,w
  3517     0ED0  1D03               	skipz
  3518     0ED1  2ED3               	goto	u3811
  3519     0ED2  2ED4               	goto	u3810
  3520     0ED3                     u3811:
  3521     0ED3  2EDC               	goto	l4883
  3522     0ED4                     u3810:
  3523     0ED4                     l4881:
  3524     0ED4  3000               	movlw	0
  3525     0ED5  00A7               	movwf	___flge@ff2+3
  3526     0ED6  3000               	movlw	0
  3527     0ED7  00A6               	movwf	___flge@ff2+2
  3528     0ED8  3000               	movlw	0
  3529     0ED9  00A5               	movwf	___flge@ff2+1
  3530     0EDA  3000               	movlw	0
  3531     0EDB  00A4               	movwf	___flge@ff2
  3532     0EDC                     l4883:
  3533     0EDC  1FA3               	btfss	___flge@ff1+3,7
  3534     0EDD  2EDF               	goto	u3821
  3535     0EDE  2EE0               	goto	u3820
  3536     0EDF                     u3821:
  3537     0EDF  2F04               	goto	l4887
  3538     0EE0                     u3820:
  3539     0EE0                     l4885:
  3540     0EE0  3000               	movlw	0
  3541     0EE1  00A8               	movwf	??___flge
  3542     0EE2  3000               	movlw	0
  3543     0EE3  00A9               	movwf	??___flge+1
  3544     0EE4  3000               	movlw	0
  3545     0EE5  00AA               	movwf	??___flge+2
  3546     0EE6  3080               	movlw	128
  3547     0EE7  00AB               	movwf	??___flge+3
  3548     0EE8  0820               	movf	___flge@ff1,w
  3549     0EE9  02A8               	subwf	??___flge,f
  3550     0EEA  0821               	movf	___flge@ff1+1,w
  3551     0EEB  1C03               	skipc
  3552     0EEC  0F21               	incfsz	___flge@ff1+1,w
  3553     0EED  2EEF               	goto	u3831
  3554     0EEE  2EF0               	goto	u3832
  3555     0EEF                     u3831:
  3556     0EEF  02A9               	subwf	??___flge+1,f
  3557     0EF0                     u3832:
  3558     0EF0  0822               	movf	___flge@ff1+2,w
  3559     0EF1  1C03               	skipc
  3560     0EF2  0F22               	incfsz	___flge@ff1+2,w
  3561     0EF3  2EF5               	goto	u3833
  3562     0EF4  2EF6               	goto	u3834
  3563     0EF5                     u3833:
  3564     0EF5  02AA               	subwf	??___flge+2,f
  3565     0EF6                     u3834:
  3566     0EF6  0823               	movf	___flge@ff1+3,w
  3567     0EF7  1C03               	skipc
  3568     0EF8  0F23               	incfsz	___flge@ff1+3,w
  3569     0EF9  2EFB               	goto	u3835
  3570     0EFA  2EFC               	goto	u3836
  3571     0EFB                     u3835:
  3572     0EFB  02AB               	subwf	??___flge+3,f
  3573     0EFC                     u3836:
  3574     0EFC  082B               	movf	??___flge+3,w
  3575     0EFD  00A3               	movwf	___flge@ff1+3
  3576     0EFE  082A               	movf	??___flge+2,w
  3577     0EFF  00A2               	movwf	___flge@ff1+2
  3578     0F00  0829               	movf	??___flge+1,w
  3579     0F01  00A1               	movwf	___flge@ff1+1
  3580     0F02  0828               	movf	??___flge,w
  3581     0F03  00A0               	movwf	___flge@ff1
  3582     0F04                     l4887:
  3583     0F04  1FA7               	btfss	___flge@ff2+3,7
  3584     0F05  2F07               	goto	u3841
  3585     0F06  2F08               	goto	u3840
  3586     0F07                     u3841:
  3587     0F07  2F2C               	goto	l1785
  3588     0F08                     u3840:
  3589     0F08                     l4889:
  3590     0F08  3000               	movlw	0
  3591     0F09  00A8               	movwf	??___flge
  3592     0F0A  3000               	movlw	0
  3593     0F0B  00A9               	movwf	??___flge+1
  3594     0F0C  3000               	movlw	0
  3595     0F0D  00AA               	movwf	??___flge+2
  3596     0F0E  3080               	movlw	128
  3597     0F0F  00AB               	movwf	??___flge+3
  3598     0F10  0824               	movf	___flge@ff2,w
  3599     0F11  02A8               	subwf	??___flge,f
  3600     0F12  0825               	movf	___flge@ff2+1,w
  3601     0F13  1C03               	skipc
  3602     0F14  0F25               	incfsz	___flge@ff2+1,w
  3603     0F15  2F17               	goto	u3851
  3604     0F16  2F18               	goto	u3852
  3605     0F17                     u3851:
  3606     0F17  02A9               	subwf	??___flge+1,f
  3607     0F18                     u3852:
  3608     0F18  0826               	movf	___flge@ff2+2,w
  3609     0F19  1C03               	skipc
  3610     0F1A  0F26               	incfsz	___flge@ff2+2,w
  3611     0F1B  2F1D               	goto	u3853
  3612     0F1C  2F1E               	goto	u3854
  3613     0F1D                     u3853:
  3614     0F1D  02AA               	subwf	??___flge+2,f
  3615     0F1E                     u3854:
  3616     0F1E  0827               	movf	___flge@ff2+3,w
  3617     0F1F  1C03               	skipc
  3618     0F20  0F27               	incfsz	___flge@ff2+3,w
  3619     0F21  2F23               	goto	u3855
  3620     0F22  2F24               	goto	u3856
  3621     0F23                     u3855:
  3622     0F23  02AB               	subwf	??___flge+3,f
  3623     0F24                     u3856:
  3624     0F24  082B               	movf	??___flge+3,w
  3625     0F25  00A7               	movwf	___flge@ff2+3
  3626     0F26  082A               	movf	??___flge+2,w
  3627     0F27  00A6               	movwf	___flge@ff2+2
  3628     0F28  0829               	movf	??___flge+1,w
  3629     0F29  00A5               	movwf	___flge@ff2+1
  3630     0F2A  0828               	movf	??___flge,w
  3631     0F2B  00A4               	movwf	___flge@ff2
  3632     0F2C                     l1785:
  3633     0F2C  3080               	movlw	128
  3634     0F2D  06A3               	xorwf	___flge@ff1+3,f
  3635     0F2E  3080               	movlw	128
  3636     0F2F  06A7               	xorwf	___flge@ff2+3,f
  3637     0F30  0827               	movf	___flge@ff2+3,w
  3638     0F31  0223               	subwf	___flge@ff1+3,w
  3639     0F32  1D03               	skipz
  3640     0F33  2F3E               	goto	u3865
  3641     0F34  0826               	movf	___flge@ff2+2,w
  3642     0F35  0222               	subwf	___flge@ff1+2,w
  3643     0F36  1D03               	skipz
  3644     0F37  2F3E               	goto	u3865
  3645     0F38  0825               	movf	___flge@ff2+1,w
  3646     0F39  0221               	subwf	___flge@ff1+1,w
  3647     0F3A  1D03               	skipz
  3648     0F3B  2F3E               	goto	u3865
  3649     0F3C  0824               	movf	___flge@ff2,w
  3650     0F3D  0220               	subwf	___flge@ff1,w
  3651     0F3E                     u3865:
  3652     0F3E  1803               	skipnc
  3653     0F3F  2F41               	goto	u3861
  3654     0F40  2F42               	goto	u3860
  3655     0F41                     u3861:
  3656     0F41  2F44               	goto	l4893
  3657     0F42                     u3860:
  3658     0F42                     l4891:
  3659     0F42  1003               	clrc
  3660     0F43  2F45               	goto	l1786
  3661     0F44                     l4893:
  3662     0F44  1403               	setc
  3663     0F45                     l1786:
  3664     0F45  0008               	return
  3665     0F46                     __end_of___flge:
  3666                           
  3667                           	psect	text8
  3668     006D                     __ptext8:	
  3669 ;; *************** function ___fldiv *****************
  3670 ;; Defined at:
  3671 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcdiv.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  a               4   28[BANK0 ] long 
  3674 ;;  b               4   32[BANK0 ] long 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  grs             4   48[BANK0 ] unsigned long 
  3677 ;;  rem             4   41[BANK0 ] unsigned long 
  3678 ;;  new_exp         2   46[BANK0 ] int 
  3679 ;;  aexp            1   53[BANK0 ] unsigned char 
  3680 ;;  bexp            1   52[BANK0 ] unsigned char 
  3681 ;;  sign            1   45[BANK0 ] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  4   28[BANK0 ] unsigned char 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0, btemp+1
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3691 ;;      Params:         0       8       0       0       0
  3692 ;;      Locals:         0      13       0       0       0
  3693 ;;      Temps:          0       5       0       0       0
  3694 ;;      Totals:         0      26       0       0       0
  3695 ;;Total ram usage:       26 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 5
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_USART_Baud_Rate_Calculation
  3702 ;;		_HAL_I2C_setClock
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706     006D                     ___fldiv:	
  3707                           ;psect for function ___fldiv
  3708                           
  3709     006D                     l4935:	
  3710                           ;incstack = 0
  3711                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3712                           
  3713     006D  1283               	bcf	3,5	;RP0=0, select bank0
  3714     006E  1303               	bcf	3,6	;RP1=0, select bank0
  3715     006F  0843               	movf	___fldiv@b+3,w
  3716     0070  3980               	andlw	128
  3717     0071  00CD               	movwf	___fldiv@sign
  3718     0072                     l4937:
  3719     0072  0843               	movf	___fldiv@b+3,w
  3720     0073  00C4               	movwf	??___fldiv
  3721     0074  0744               	addwf	??___fldiv,w
  3722     0075  00D4               	movwf	___fldiv@bexp
  3723     0076                     l4939:
  3724     0076  1FC2               	btfss	___fldiv@b+2,7
  3725     0077  2879               	goto	u3971
  3726     0078  287A               	goto	u3970
  3727     0079                     u3971:
  3728     0079  287B               	goto	l4943
  3729     007A                     u3970:
  3730     007A                     l4941:
  3731     007A  1454               	bsf	___fldiv@bexp,0
  3732     007B                     l4943:
  3733     007B  0854               	movf	___fldiv@bexp,w
  3734     007C  1903               	btfsc	3,2
  3735     007D  287F               	goto	u3981
  3736     007E  2880               	goto	u3980
  3737     007F                     u3981:
  3738     007F  2890               	goto	l4953
  3739     0080                     u3980:
  3740     0080                     l4945:
  3741     0080  0A54               	incf	___fldiv@bexp,w
  3742     0081  1D03               	btfss	3,2
  3743     0082  2884               	goto	u3991
  3744     0083  2885               	goto	u3990
  3745     0084                     u3991:
  3746     0084  288D               	goto	l4949
  3747     0085                     u3990:
  3748     0085                     l4947:
  3749     0085  3000               	movlw	0
  3750     0086  00C3               	movwf	___fldiv@b+3
  3751     0087  3000               	movlw	0
  3752     0088  00C2               	movwf	___fldiv@b+2
  3753     0089  3000               	movlw	0
  3754     008A  00C1               	movwf	___fldiv@b+1
  3755     008B  3000               	movlw	0
  3756     008C  00C0               	movwf	___fldiv@b
  3757     008D                     l4949:
  3758     008D  17C2               	bsf	___fldiv@b+2,7
  3759     008E                     l4951:
  3760     008E  01C3               	clrf	___fldiv@b+3
  3761     008F  2898               	goto	l4955
  3762     0090                     l4953:
  3763     0090  3000               	movlw	0
  3764     0091  00C3               	movwf	___fldiv@b+3
  3765     0092  3000               	movlw	0
  3766     0093  00C2               	movwf	___fldiv@b+2
  3767     0094  3000               	movlw	0
  3768     0095  00C1               	movwf	___fldiv@b+1
  3769     0096  3000               	movlw	0
  3770     0097  00C0               	movwf	___fldiv@b
  3771     0098                     l4955:
  3772     0098  083F               	movf	___fldiv@a+3,w
  3773     0099  3980               	andlw	128
  3774     009A  00FF               	movwf	btemp+1
  3775     009B  087F               	movf	btemp+1,w
  3776     009C  06CD               	xorwf	___fldiv@sign,f
  3777     009D                     l4957:
  3778     009D  083F               	movf	___fldiv@a+3,w
  3779     009E  00C4               	movwf	??___fldiv
  3780     009F  0744               	addwf	??___fldiv,w
  3781     00A0  00D5               	movwf	___fldiv@aexp
  3782     00A1                     l4959:
  3783     00A1  1FBE               	btfss	___fldiv@a+2,7
  3784     00A2  28A4               	goto	u4001
  3785     00A3  28A5               	goto	u4000
  3786     00A4                     u4001:
  3787     00A4  28A6               	goto	l4963
  3788     00A5                     u4000:
  3789     00A5                     l4961:
  3790     00A5  1455               	bsf	___fldiv@aexp,0
  3791     00A6                     l4963:
  3792     00A6  0855               	movf	___fldiv@aexp,w
  3793     00A7  1903               	btfsc	3,2
  3794     00A8  28AA               	goto	u4011
  3795     00A9  28AB               	goto	u4010
  3796     00AA                     u4011:
  3797     00AA  28BB               	goto	l4973
  3798     00AB                     u4010:
  3799     00AB                     l4965:
  3800     00AB  0A55               	incf	___fldiv@aexp,w
  3801     00AC  1D03               	btfss	3,2
  3802     00AD  28AF               	goto	u4021
  3803     00AE  28B0               	goto	u4020
  3804     00AF                     u4021:
  3805     00AF  28B8               	goto	l4969
  3806     00B0                     u4020:
  3807     00B0                     l4967:
  3808     00B0  3000               	movlw	0
  3809     00B1  00BF               	movwf	___fldiv@a+3
  3810     00B2  3000               	movlw	0
  3811     00B3  00BE               	movwf	___fldiv@a+2
  3812     00B4  3000               	movlw	0
  3813     00B5  00BD               	movwf	___fldiv@a+1
  3814     00B6  3000               	movlw	0
  3815     00B7  00BC               	movwf	___fldiv@a
  3816     00B8                     l4969:
  3817     00B8  17BE               	bsf	___fldiv@a+2,7
  3818     00B9                     l4971:
  3819     00B9  01BF               	clrf	___fldiv@a+3
  3820     00BA  28C3               	goto	l1957
  3821     00BB                     l4973:
  3822     00BB  3000               	movlw	0
  3823     00BC  00BF               	movwf	___fldiv@a+3
  3824     00BD  3000               	movlw	0
  3825     00BE  00BE               	movwf	___fldiv@a+2
  3826     00BF  3000               	movlw	0
  3827     00C0  00BD               	movwf	___fldiv@a+1
  3828     00C1  3000               	movlw	0
  3829     00C2  00BC               	movwf	___fldiv@a
  3830     00C3                     l1957:
  3831     00C3  083F               	movf	___fldiv@a+3,w
  3832     00C4  043E               	iorwf	___fldiv@a+2,w
  3833     00C5  043D               	iorwf	___fldiv@a+1,w
  3834     00C6  043C               	iorwf	___fldiv@a,w
  3835     00C7  1D03               	skipz
  3836     00C8  28CA               	goto	u4031
  3837     00C9  28CB               	goto	u4030
  3838     00CA                     u4031:
  3839     00CA  28E4               	goto	l4983
  3840     00CB                     u4030:
  3841     00CB                     l4975:
  3842     00CB  3000               	movlw	0
  3843     00CC  00C3               	movwf	___fldiv@b+3
  3844     00CD  3000               	movlw	0
  3845     00CE  00C2               	movwf	___fldiv@b+2
  3846     00CF  3000               	movlw	0
  3847     00D0  00C1               	movwf	___fldiv@b+1
  3848     00D1  3000               	movlw	0
  3849     00D2  00C0               	movwf	___fldiv@b
  3850     00D3  3080               	movlw	128
  3851     00D4  04C2               	iorwf	___fldiv@b+2,f
  3852     00D5  307F               	movlw	127
  3853     00D6  04C3               	iorwf	___fldiv@b+3,f
  3854     00D7                     l4977:
  3855     00D7  084D               	movf	___fldiv@sign,w
  3856     00D8  00FF               	movwf	btemp+1
  3857     00D9  087F               	movf	btemp+1,w
  3858     00DA  04C3               	iorwf	___fldiv@b+3,f
  3859     00DB                     l4979:
  3860     00DB  0843               	movf	___fldiv@b+3,w
  3861     00DC  00BF               	movwf	?___fldiv+3
  3862     00DD  0842               	movf	___fldiv@b+2,w
  3863     00DE  00BE               	movwf	?___fldiv+2
  3864     00DF  0841               	movf	___fldiv@b+1,w
  3865     00E0  00BD               	movwf	?___fldiv+1
  3866     00E1  0840               	movf	___fldiv@b,w
  3867     00E2  00BC               	movwf	?___fldiv
  3868     00E3  2A3B               	goto	l1959
  3869     00E4                     l4983:
  3870     00E4  0854               	movf	___fldiv@bexp,w
  3871     00E5  1D03               	btfss	3,2
  3872     00E6  28E8               	goto	u4041
  3873     00E7  28E9               	goto	u4040
  3874     00E8                     u4041:
  3875     00E8  28F2               	goto	l4989
  3876     00E9                     u4040:
  3877     00E9                     l4985:
  3878     00E9  3000               	movlw	0
  3879     00EA  00BF               	movwf	?___fldiv+3
  3880     00EB  3000               	movlw	0
  3881     00EC  00BE               	movwf	?___fldiv+2
  3882     00ED  3000               	movlw	0
  3883     00EE  00BD               	movwf	?___fldiv+1
  3884     00EF  3000               	movlw	0
  3885     00F0  00BC               	movwf	?___fldiv
  3886     00F1  2A3B               	goto	l1959
  3887     00F2                     l4989:
  3888     00F2  0854               	movf	___fldiv@bexp,w
  3889     00F3  00C4               	movwf	??___fldiv
  3890     00F4  01C5               	clrf	??___fldiv+1
  3891     00F5  0845               	movf	??___fldiv+1,w
  3892     00F6  00C7               	movwf	??___fldiv+3
  3893     00F7  0855               	movf	___fldiv@aexp,w
  3894     00F8  0244               	subwf	??___fldiv,w
  3895     00F9  00C6               	movwf	??___fldiv+2
  3896     00FA  1C03               	skipc
  3897     00FB  03C7               	decf	??___fldiv+3,f
  3898     00FC  0846               	movf	??___fldiv+2,w
  3899     00FD  3E7F               	addlw	127
  3900     00FE  00CE               	movwf	___fldiv@new_exp
  3901     00FF  0847               	movf	??___fldiv+3,w
  3902     0100  1803               	skipnc
  3903     0101  3E01               	addlw	1
  3904     0102  3E00               	addlw	0
  3905     0103  00CF               	movwf	___fldiv@new_exp+1
  3906     0104                     l4991:
  3907     0104  0843               	movf	___fldiv@b+3,w
  3908     0105  00CC               	movwf	___fldiv@rem+3
  3909     0106  0842               	movf	___fldiv@b+2,w
  3910     0107  00CB               	movwf	___fldiv@rem+2
  3911     0108  0841               	movf	___fldiv@b+1,w
  3912     0109  00CA               	movwf	___fldiv@rem+1
  3913     010A  0840               	movf	___fldiv@b,w
  3914     010B  00C9               	movwf	___fldiv@rem
  3915     010C                     l4993:
  3916     010C  3000               	movlw	0
  3917     010D  00C3               	movwf	___fldiv@b+3
  3918     010E  3000               	movlw	0
  3919     010F  00C2               	movwf	___fldiv@b+2
  3920     0110  3000               	movlw	0
  3921     0111  00C1               	movwf	___fldiv@b+1
  3922     0112  3000               	movlw	0
  3923     0113  00C0               	movwf	___fldiv@b
  3924     0114                     l4995:
  3925     0114  3000               	movlw	0
  3926     0115  00D3               	movwf	___fldiv@grs+3
  3927     0116  3000               	movlw	0
  3928     0117  00D2               	movwf	___fldiv@grs+2
  3929     0118  3000               	movlw	0
  3930     0119  00D1               	movwf	___fldiv@grs+1
  3931     011A  3000               	movlw	0
  3932     011B  00D0               	movwf	___fldiv@grs
  3933     011C                     l4997:
  3934     011C  01D5               	clrf	___fldiv@aexp
  3935     011D  2968               	goto	l5017
  3936     011E                     l4999:
  3937     011E  0855               	movf	___fldiv@aexp,w
  3938     011F  1903               	btfsc	3,2
  3939     0120  2922               	goto	u4051
  3940     0121  2923               	goto	u4050
  3941     0122                     u4051:
  3942     0122  2943               	goto	l5009
  3943     0123                     u4050:
  3944     0123                     l5001:
  3945     0123  3001               	movlw	1
  3946     0124  00C4               	movwf	??___fldiv
  3947     0125                     u4065:
  3948     0125  1003               	clrc
  3949     0126  0DC9               	rlf	___fldiv@rem,f
  3950     0127  0DCA               	rlf	___fldiv@rem+1,f
  3951     0128  0DCB               	rlf	___fldiv@rem+2,f
  3952     0129  0DCC               	rlf	___fldiv@rem+3,f
  3953     012A  0BC4               	decfsz	??___fldiv,f
  3954     012B  2925               	goto	u4065
  3955     012C  3001               	movlw	1
  3956     012D  00C4               	movwf	??___fldiv
  3957     012E                     u4075:
  3958     012E  1003               	clrc
  3959     012F  0DC0               	rlf	___fldiv@b,f
  3960     0130  0DC1               	rlf	___fldiv@b+1,f
  3961     0131  0DC2               	rlf	___fldiv@b+2,f
  3962     0132  0DC3               	rlf	___fldiv@b+3,f
  3963     0133  0BC4               	decfsz	??___fldiv,f
  3964     0134  292E               	goto	u4075
  3965     0135                     l5003:
  3966     0135  1FD3               	btfss	___fldiv@grs+3,7
  3967     0136  2938               	goto	u4081
  3968     0137  2939               	goto	u4080
  3969     0138                     u4081:
  3970     0138  293A               	goto	l5007
  3971     0139                     u4080:
  3972     0139                     l5005:
  3973     0139  1440               	bsf	___fldiv@b,0
  3974     013A                     l5007:
  3975     013A  3001               	movlw	1
  3976     013B  00C4               	movwf	??___fldiv
  3977     013C                     u4095:
  3978     013C  1003               	clrc
  3979     013D  0DD0               	rlf	___fldiv@grs,f
  3980     013E  0DD1               	rlf	___fldiv@grs+1,f
  3981     013F  0DD2               	rlf	___fldiv@grs+2,f
  3982     0140  0DD3               	rlf	___fldiv@grs+3,f
  3983     0141  0BC4               	decfsz	??___fldiv,f
  3984     0142  293C               	goto	u4095
  3985     0143                     l5009:
  3986     0143  083F               	movf	___fldiv@a+3,w
  3987     0144  024C               	subwf	___fldiv@rem+3,w
  3988     0145  1D03               	skipz
  3989     0146  2951               	goto	u4105
  3990     0147  083E               	movf	___fldiv@a+2,w
  3991     0148  024B               	subwf	___fldiv@rem+2,w
  3992     0149  1D03               	skipz
  3993     014A  2951               	goto	u4105
  3994     014B  083D               	movf	___fldiv@a+1,w
  3995     014C  024A               	subwf	___fldiv@rem+1,w
  3996     014D  1D03               	skipz
  3997     014E  2951               	goto	u4105
  3998     014F  083C               	movf	___fldiv@a,w
  3999     0150  0249               	subwf	___fldiv@rem,w
  4000     0151                     u4105:
  4001     0151  1C03               	skipc
  4002     0152  2954               	goto	u4101
  4003     0153  2955               	goto	u4100
  4004     0154                     u4101:
  4005     0154  2964               	goto	l5015
  4006     0155                     u4100:
  4007     0155                     l5011:
  4008     0155  1753               	bsf	___fldiv@grs+3,6
  4009     0156                     l5013:
  4010     0156  083C               	movf	___fldiv@a,w
  4011     0157  02C9               	subwf	___fldiv@rem,f
  4012     0158  083D               	movf	___fldiv@a+1,w
  4013     0159  1C03               	skipc
  4014     015A  0F3D               	incfsz	___fldiv@a+1,w
  4015     015B  02CA               	subwf	___fldiv@rem+1,f
  4016     015C  083E               	movf	___fldiv@a+2,w
  4017     015D  1C03               	skipc
  4018     015E  0F3E               	incfsz	___fldiv@a+2,w
  4019     015F  02CB               	subwf	___fldiv@rem+2,f
  4020     0160  083F               	movf	___fldiv@a+3,w
  4021     0161  1C03               	skipc
  4022     0162  0F3F               	incfsz	___fldiv@a+3,w
  4023     0163  02CC               	subwf	___fldiv@rem+3,f
  4024     0164                     l5015:
  4025     0164  3001               	movlw	1
  4026     0165  00FF               	movwf	btemp+1
  4027     0166  087F               	movf	btemp+1,w
  4028     0167  07D5               	addwf	___fldiv@aexp,f
  4029     0168                     l5017:
  4030     0168  301A               	movlw	26
  4031     0169  0255               	subwf	___fldiv@aexp,w
  4032     016A  1C03               	skipc
  4033     016B  296D               	goto	u4111
  4034     016C  296E               	goto	u4110
  4035     016D                     u4111:
  4036     016D  291E               	goto	l4999
  4037     016E                     u4110:
  4038     016E                     l5019:
  4039     016E  084C               	movf	___fldiv@rem+3,w
  4040     016F  044B               	iorwf	___fldiv@rem+2,w
  4041     0170  044A               	iorwf	___fldiv@rem+1,w
  4042     0171  0449               	iorwf	___fldiv@rem,w
  4043     0172  1903               	skipnz
  4044     0173  2975               	goto	u4121
  4045     0174  2976               	goto	u4120
  4046     0175                     u4121:
  4047     0175  2995               	goto	l5033
  4048     0176                     u4120:
  4049     0176                     l5021:
  4050     0176  1450               	bsf	___fldiv@grs,0
  4051     0177  2995               	goto	l5033
  4052     0178                     l5023:
  4053     0178  3001               	movlw	1
  4054     0179  00C4               	movwf	??___fldiv
  4055     017A                     u4135:
  4056     017A  1003               	clrc
  4057     017B  0DC0               	rlf	___fldiv@b,f
  4058     017C  0DC1               	rlf	___fldiv@b+1,f
  4059     017D  0DC2               	rlf	___fldiv@b+2,f
  4060     017E  0DC3               	rlf	___fldiv@b+3,f
  4061     017F  0BC4               	decfsz	??___fldiv,f
  4062     0180  297A               	goto	u4135
  4063     0181                     l5025:
  4064     0181  1FD3               	btfss	___fldiv@grs+3,7
  4065     0182  2984               	goto	u4141
  4066     0183  2985               	goto	u4140
  4067     0184                     u4141:
  4068     0184  2986               	goto	l5029
  4069     0185                     u4140:
  4070     0185                     l5027:
  4071     0185  1440               	bsf	___fldiv@b,0
  4072     0186                     l5029:
  4073     0186  3001               	movlw	1
  4074     0187  00C4               	movwf	??___fldiv
  4075     0188                     u4155:
  4076     0188  1003               	clrc
  4077     0189  0DD0               	rlf	___fldiv@grs,f
  4078     018A  0DD1               	rlf	___fldiv@grs+1,f
  4079     018B  0DD2               	rlf	___fldiv@grs+2,f
  4080     018C  0DD3               	rlf	___fldiv@grs+3,f
  4081     018D  0BC4               	decfsz	??___fldiv,f
  4082     018E  2988               	goto	u4155
  4083     018F                     l5031:
  4084     018F  30FF               	movlw	255
  4085     0190  07CE               	addwf	___fldiv@new_exp,f
  4086     0191  1803               	skipnc
  4087     0192  0ACF               	incf	___fldiv@new_exp+1,f
  4088     0193  30FF               	movlw	255
  4089     0194  07CF               	addwf	___fldiv@new_exp+1,f
  4090     0195                     l5033:
  4091     0195  1FC2               	btfss	___fldiv@b+2,7
  4092     0196  2998               	goto	u4161
  4093     0197  2999               	goto	u4160
  4094     0198                     u4161:
  4095     0198  2978               	goto	l5023
  4096     0199                     u4160:
  4097     0199                     l5035:
  4098     0199  01D5               	clrf	___fldiv@aexp
  4099     019A                     l5037:
  4100     019A  1FD3               	btfss	___fldiv@grs+3,7
  4101     019B  299D               	goto	u4171
  4102     019C  299E               	goto	u4170
  4103     019D                     u4171:
  4104     019D  29BA               	goto	l5045
  4105     019E                     u4170:
  4106     019E                     l5039:
  4107     019E  30FF               	movlw	255
  4108     019F  0550               	andwf	___fldiv@grs,w
  4109     01A0  00C4               	movwf	??___fldiv
  4110     01A1  30FF               	movlw	255
  4111     01A2  0551               	andwf	___fldiv@grs+1,w
  4112     01A3  00C5               	movwf	??___fldiv+1
  4113     01A4  30FF               	movlw	255
  4114     01A5  0552               	andwf	___fldiv@grs+2,w
  4115     01A6  00C6               	movwf	??___fldiv+2
  4116     01A7  307F               	movlw	127
  4117     01A8  0553               	andwf	___fldiv@grs+3,w
  4118     01A9  00C7               	movwf	??___fldiv+3
  4119     01AA  0847               	movf	??___fldiv+3,w
  4120     01AB  0446               	iorwf	??___fldiv+2,w
  4121     01AC  0445               	iorwf	??___fldiv+1,w
  4122     01AD  0444               	iorwf	??___fldiv,w
  4123     01AE  1903               	skipnz
  4124     01AF  29B1               	goto	u4181
  4125     01B0  29B2               	goto	u4180
  4126     01B1                     u4181:
  4127     01B1  29B5               	goto	l1973
  4128     01B2                     u4180:
  4129     01B2                     l5041:
  4130     01B2  01D5               	clrf	___fldiv@aexp
  4131     01B3  0AD5               	incf	___fldiv@aexp,f
  4132     01B4  29BA               	goto	l5045
  4133     01B5                     l1973:
  4134     01B5  1C40               	btfss	___fldiv@b,0
  4135     01B6  29B8               	goto	u4191
  4136     01B7  29B9               	goto	u4190
  4137     01B8                     u4191:
  4138     01B8  29BA               	goto	l5045
  4139     01B9                     u4190:
  4140     01B9  29B2               	goto	l5041
  4141     01BA                     l5045:
  4142     01BA  0855               	movf	___fldiv@aexp,w
  4143     01BB  1903               	btfsc	3,2
  4144     01BC  29BE               	goto	u4201
  4145     01BD  29BF               	goto	u4200
  4146     01BE                     u4201:
  4147     01BE  29F0               	goto	l5055
  4148     01BF                     u4200:
  4149     01BF                     l5047:
  4150     01BF  3001               	movlw	1
  4151     01C0  07C0               	addwf	___fldiv@b,f
  4152     01C1  3000               	movlw	0
  4153     01C2  1803               	skipnc
  4154     01C3  3001               	movlw	1
  4155     01C4  07C1               	addwf	___fldiv@b+1,f
  4156     01C5  3000               	movlw	0
  4157     01C6  1803               	skipnc
  4158     01C7  3001               	movlw	1
  4159     01C8  07C2               	addwf	___fldiv@b+2,f
  4160     01C9  3000               	movlw	0
  4161     01CA  1803               	skipnc
  4162     01CB  3001               	movlw	1
  4163     01CC  07C3               	addwf	___fldiv@b+3,f
  4164     01CD                     l5049:
  4165     01CD  1C43               	btfss	___fldiv@b+3,0
  4166     01CE  29D0               	goto	u4211
  4167     01CF  29D1               	goto	u4210
  4168     01D0                     u4211:
  4169     01D0  29F0               	goto	l5055
  4170     01D1                     u4210:
  4171     01D1                     l5051:
  4172     01D1  0840               	movf	___fldiv@b,w
  4173     01D2  00C4               	movwf	??___fldiv
  4174     01D3  0841               	movf	___fldiv@b+1,w
  4175     01D4  00C5               	movwf	??___fldiv+1
  4176     01D5  0842               	movf	___fldiv@b+2,w
  4177     01D6  00C6               	movwf	??___fldiv+2
  4178     01D7  0843               	movf	___fldiv@b+3,w
  4179     01D8  00C7               	movwf	??___fldiv+3
  4180     01D9  3001               	movlw	1
  4181     01DA  00C8               	movwf	??___fldiv+4
  4182     01DB                     u4225:
  4183     01DB  0D47               	rlf	??___fldiv+3,w
  4184     01DC  0CC7               	rrf	??___fldiv+3,f
  4185     01DD  0CC6               	rrf	??___fldiv+2,f
  4186     01DE  0CC5               	rrf	??___fldiv+1,f
  4187     01DF  0CC4               	rrf	??___fldiv,f
  4188     01E0                     u4220:
  4189     01E0  0BC8               	decfsz	??___fldiv+4,f
  4190     01E1  29DB               	goto	u4225
  4191     01E2  0847               	movf	??___fldiv+3,w
  4192     01E3  00C3               	movwf	___fldiv@b+3
  4193     01E4  0846               	movf	??___fldiv+2,w
  4194     01E5  00C2               	movwf	___fldiv@b+2
  4195     01E6  0845               	movf	??___fldiv+1,w
  4196     01E7  00C1               	movwf	___fldiv@b+1
  4197     01E8  0844               	movf	??___fldiv,w
  4198     01E9  00C0               	movwf	___fldiv@b
  4199     01EA                     l5053:
  4200     01EA  3001               	movlw	1
  4201     01EB  07CE               	addwf	___fldiv@new_exp,f
  4202     01EC  1803               	skipnc
  4203     01ED  0ACF               	incf	___fldiv@new_exp+1,f
  4204     01EE  3000               	movlw	0
  4205     01EF  07CF               	addwf	___fldiv@new_exp+1,f
  4206     01F0                     l5055:
  4207     01F0  084F               	movf	___fldiv@new_exp+1,w
  4208     01F1  3A80               	xorlw	128
  4209     01F2  00FF               	movwf	btemp+1
  4210     01F3  3080               	movlw	128
  4211     01F4  027F               	subwf	btemp+1,w
  4212     01F5  1D03               	skipz
  4213     01F6  29F9               	goto	u4235
  4214     01F7  30FF               	movlw	255
  4215     01F8  024E               	subwf	___fldiv@new_exp,w
  4216     01F9                     u4235:
  4217     01F9  1C03               	skipc
  4218     01FA  29FC               	goto	u4231
  4219     01FB  29FD               	goto	u4230
  4220     01FC                     u4231:
  4221     01FC  2A0B               	goto	l5059
  4222     01FD                     u4230:
  4223     01FD                     l5057:
  4224     01FD  30FF               	movlw	255
  4225     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  4226     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  4227     0200  00CE               	movwf	___fldiv@new_exp
  4228     0201  3000               	movlw	0
  4229     0202  00CF               	movwf	___fldiv@new_exp+1
  4230     0203  3000               	movlw	0
  4231     0204  00C3               	movwf	___fldiv@b+3
  4232     0205  3000               	movlw	0
  4233     0206  00C2               	movwf	___fldiv@b+2
  4234     0207  3000               	movlw	0
  4235     0208  00C1               	movwf	___fldiv@b+1
  4236     0209  3000               	movlw	0
  4237     020A  00C0               	movwf	___fldiv@b
  4238     020B                     l5059:
  4239     020B  1283               	bcf	3,5	;RP0=0, select bank0
  4240     020C  1303               	bcf	3,6	;RP1=0, select bank0
  4241     020D  084F               	movf	___fldiv@new_exp+1,w
  4242     020E  3A80               	xorlw	128
  4243     020F  00FF               	movwf	btemp+1
  4244     0210  3080               	movlw	128
  4245     0211  027F               	subwf	btemp+1,w
  4246     0212  1D03               	skipz
  4247     0213  2A16               	goto	u4245
  4248     0214  3001               	movlw	1
  4249     0215  024E               	subwf	___fldiv@new_exp,w
  4250     0216                     u4245:
  4251     0216  1803               	skipnc
  4252     0217  2A19               	goto	u4241
  4253     0218  2A1A               	goto	u4240
  4254     0219                     u4241:
  4255     0219  2A27               	goto	l1979
  4256     021A                     u4240:
  4257     021A                     l5061:
  4258     021A  1283               	bcf	3,5	;RP0=0, select bank0
  4259     021B  1303               	bcf	3,6	;RP1=0, select bank0
  4260     021C  01CE               	clrf	___fldiv@new_exp
  4261     021D  01CF               	clrf	___fldiv@new_exp+1
  4262     021E                     l5063:
  4263     021E  3000               	movlw	0
  4264     021F  00C3               	movwf	___fldiv@b+3
  4265     0220  3000               	movlw	0
  4266     0221  00C2               	movwf	___fldiv@b+2
  4267     0222  3000               	movlw	0
  4268     0223  00C1               	movwf	___fldiv@b+1
  4269     0224  3000               	movlw	0
  4270     0225  00C0               	movwf	___fldiv@b
  4271     0226                     l5065:
  4272     0226  01CD               	clrf	___fldiv@sign
  4273     0227                     l1979:
  4274     0227  1283               	bcf	3,5	;RP0=0, select bank0
  4275     0228  1303               	bcf	3,6	;RP1=0, select bank0
  4276     0229  084E               	movf	___fldiv@new_exp,w
  4277     022A  00D4               	movwf	___fldiv@bexp
  4278     022B                     l5067:
  4279     022B  1C54               	btfss	___fldiv@bexp,0
  4280     022C  2A2E               	goto	u4251
  4281     022D  2A2F               	goto	u4250
  4282     022E                     u4251:
  4283     022E  2A31               	goto	l5071
  4284     022F                     u4250:
  4285     022F                     l5069:
  4286     022F  17C2               	bsf	___fldiv@b+2,7
  4287     0230  2A35               	goto	l5073
  4288     0231                     l5071:
  4289     0231  307F               	movlw	127
  4290     0232  00FF               	movwf	btemp+1
  4291     0233  087F               	movf	btemp+1,w
  4292     0234  05C2               	andwf	___fldiv@b+2,f
  4293     0235                     l5073:
  4294     0235  0854               	movf	___fldiv@bexp,w
  4295     0236  00C4               	movwf	??___fldiv
  4296     0237  1003               	clrc
  4297     0238  0C44               	rrf	??___fldiv,w
  4298     0239  00C3               	movwf	___fldiv@b+3
  4299     023A  28D7               	goto	l4977
  4300     023B                     l1959:
  4301     023B  0008               	return
  4302     023C                     __end_of___fldiv:
  4303                           
  4304                           	psect	text9
  4305     0700                     __ptext9:	
  4306 ;; *************** function _GPIO_Init *****************
  4307 ;; Defined at:
  4308 ;;		line 53 in file "main.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4322 ;;      Params:         0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 6
  4329 ;; This function calls:
  4330 ;;		_digitalWrite
  4331 ;;		_pinMode
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337     0700                     _GPIO_Init:	
  4338                           ;psect for function _GPIO_Init
  4339                           
  4340     0700                     l5821:	
  4341                           ;incstack = 0
  4342                           ; Regs used in _GPIO_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4343                           
  4344                           
  4345                           ;main.c: 56:     pinMode(PD,PIN0,OUTPUT);
  4346     0700  1283               	bcf	3,5	;RP0=0, select bank0
  4347     0701  1303               	bcf	3,6	;RP1=0, select bank0
  4348     0702  01A0               	clrf	pinMode@Pinx
  4349     0703  01A1               	clrf	pinMode@mode
  4350     0704  3003               	movlw	3
  4351     0705  120A  118A  2546  120A  118A  	fcall	_pinMode
  4352                           
  4353                           ;main.c: 57:     pinMode(PD,PIN1,OUTPUT);
  4354     070A  1283               	bcf	3,5	;RP0=0, select bank0
  4355     070B  1303               	bcf	3,6	;RP1=0, select bank0
  4356     070C  01A0               	clrf	pinMode@Pinx
  4357     070D  0AA0               	incf	pinMode@Pinx,f
  4358     070E  01A1               	clrf	pinMode@mode
  4359     070F  3003               	movlw	3
  4360     0710  120A  118A  2546  120A  118A  	fcall	_pinMode
  4361                           
  4362                           ;main.c: 58:     pinMode(PD,PIN2,OUTPUT);
  4363     0715  3002               	movlw	2
  4364     0716  1283               	bcf	3,5	;RP0=0, select bank0
  4365     0717  1303               	bcf	3,6	;RP1=0, select bank0
  4366     0718  00A0               	movwf	pinMode@Pinx
  4367     0719  01A1               	clrf	pinMode@mode
  4368     071A  3003               	movlw	3
  4369     071B  120A  118A  2546  120A  118A  	fcall	_pinMode
  4370                           
  4371                           ;main.c: 59:     pinMode(PD,PIN3,OUTPUT);
  4372     0720  3003               	movlw	3
  4373     0721  1283               	bcf	3,5	;RP0=0, select bank0
  4374     0722  1303               	bcf	3,6	;RP1=0, select bank0
  4375     0723  00A0               	movwf	pinMode@Pinx
  4376     0724  01A1               	clrf	pinMode@mode
  4377     0725  3003               	movlw	3
  4378     0726  120A  118A  2546  120A  118A  	fcall	_pinMode
  4379                           
  4380                           ;main.c: 60:     pinMode(PD,PIN4,OUTPUT);
  4381     072B  3004               	movlw	4
  4382     072C  1283               	bcf	3,5	;RP0=0, select bank0
  4383     072D  1303               	bcf	3,6	;RP1=0, select bank0
  4384     072E  00A0               	movwf	pinMode@Pinx
  4385     072F  01A1               	clrf	pinMode@mode
  4386     0730  3003               	movlw	3
  4387     0731  120A  118A  2546  120A  118A  	fcall	_pinMode
  4388                           
  4389                           ;main.c: 61:     pinMode(PD,PIN5,OUTPUT);
  4390     0736  3005               	movlw	5
  4391     0737  1283               	bcf	3,5	;RP0=0, select bank0
  4392     0738  1303               	bcf	3,6	;RP1=0, select bank0
  4393     0739  00A0               	movwf	pinMode@Pinx
  4394     073A  01A1               	clrf	pinMode@mode
  4395     073B  3003               	movlw	3
  4396     073C  120A  118A  2546  120A  118A  	fcall	_pinMode
  4397                           
  4398                           ;main.c: 62:     pinMode(PD,PIN6,OUTPUT);
  4399     0741  3006               	movlw	6
  4400     0742  1283               	bcf	3,5	;RP0=0, select bank0
  4401     0743  1303               	bcf	3,6	;RP1=0, select bank0
  4402     0744  00A0               	movwf	pinMode@Pinx
  4403     0745  01A1               	clrf	pinMode@mode
  4404     0746  3003               	movlw	3
  4405     0747  120A  118A  2546  120A  118A  	fcall	_pinMode
  4406                           
  4407                           ;main.c: 63:     pinMode(PD,PIN7,OUTPUT);
  4408     074C  3007               	movlw	7
  4409     074D  1283               	bcf	3,5	;RP0=0, select bank0
  4410     074E  1303               	bcf	3,6	;RP1=0, select bank0
  4411     074F  00A0               	movwf	pinMode@Pinx
  4412     0750  01A1               	clrf	pinMode@mode
  4413     0751  3003               	movlw	3
  4414     0752  120A  118A  2546  120A  118A  	fcall	_pinMode
  4415                           
  4416                           ;main.c: 65:     digitalWrite(PD,PIN0,LOW);
  4417     0757  1283               	bcf	3,5	;RP0=0, select bank0
  4418     0758  1303               	bcf	3,6	;RP1=0, select bank0
  4419     0759  01A0               	clrf	digitalWrite@Pinx
  4420     075A  01A1               	clrf	digitalWrite@logic
  4421     075B  3003               	movlw	3
  4422     075C  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4423                           
  4424                           ;main.c: 66:     digitalWrite(PD,PIN1,LOW);
  4425     0761  1283               	bcf	3,5	;RP0=0, select bank0
  4426     0762  1303               	bcf	3,6	;RP1=0, select bank0
  4427     0763  01A0               	clrf	digitalWrite@Pinx
  4428     0764  0AA0               	incf	digitalWrite@Pinx,f
  4429     0765  01A1               	clrf	digitalWrite@logic
  4430     0766  3003               	movlw	3
  4431     0767  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4432                           
  4433                           ;main.c: 67:     digitalWrite(PD,PIN2,LOW);
  4434     076C  3002               	movlw	2
  4435     076D  1283               	bcf	3,5	;RP0=0, select bank0
  4436     076E  1303               	bcf	3,6	;RP1=0, select bank0
  4437     076F  00A0               	movwf	digitalWrite@Pinx
  4438     0770  01A1               	clrf	digitalWrite@logic
  4439     0771  3003               	movlw	3
  4440     0772  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4441                           
  4442                           ;main.c: 68:     digitalWrite(PD,PIN3,LOW);
  4443     0777  3003               	movlw	3
  4444     0778  1283               	bcf	3,5	;RP0=0, select bank0
  4445     0779  1303               	bcf	3,6	;RP1=0, select bank0
  4446     077A  00A0               	movwf	digitalWrite@Pinx
  4447     077B  01A1               	clrf	digitalWrite@logic
  4448     077C  3003               	movlw	3
  4449     077D  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4450                           
  4451                           ;main.c: 69:     digitalWrite(PD,PIN4,LOW);
  4452     0782  3004               	movlw	4
  4453     0783  1283               	bcf	3,5	;RP0=0, select bank0
  4454     0784  1303               	bcf	3,6	;RP1=0, select bank0
  4455     0785  00A0               	movwf	digitalWrite@Pinx
  4456     0786  01A1               	clrf	digitalWrite@logic
  4457     0787  3003               	movlw	3
  4458     0788  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4459                           
  4460                           ;main.c: 70:     digitalWrite(PD,PIN5,LOW);
  4461     078D  3005               	movlw	5
  4462     078E  1283               	bcf	3,5	;RP0=0, select bank0
  4463     078F  1303               	bcf	3,6	;RP1=0, select bank0
  4464     0790  00A0               	movwf	digitalWrite@Pinx
  4465     0791  01A1               	clrf	digitalWrite@logic
  4466     0792  3003               	movlw	3
  4467     0793  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4468                           
  4469                           ;main.c: 71:     digitalWrite(PD,PIN6,LOW);
  4470     0798  3006               	movlw	6
  4471     0799  1283               	bcf	3,5	;RP0=0, select bank0
  4472     079A  1303               	bcf	3,6	;RP1=0, select bank0
  4473     079B  00A0               	movwf	digitalWrite@Pinx
  4474     079C  01A1               	clrf	digitalWrite@logic
  4475     079D  3003               	movlw	3
  4476     079E  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4477                           
  4478                           ;main.c: 72:     digitalWrite(PD,PIN7,LOW);
  4479     07A3  3007               	movlw	7
  4480     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  4481     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  4482     07A6  00A0               	movwf	digitalWrite@Pinx
  4483     07A7  01A1               	clrf	digitalWrite@logic
  4484     07A8  3003               	movlw	3
  4485     07A9  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4486                           
  4487                           ;main.c: 75:     pinMode(PB,PIN3,OUTPUT);
  4488     07AE  3003               	movlw	3
  4489     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  4490     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  4491     07B1  00A0               	movwf	pinMode@Pinx
  4492     07B2  01A1               	clrf	pinMode@mode
  4493     07B3  3001               	movlw	1
  4494     07B4  120A  118A  2546  120A  118A  	fcall	_pinMode
  4495                           
  4496                           ;main.c: 76:     digitalWrite(PB,PIN3,LOW);
  4497     07B9  3003               	movlw	3
  4498     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4499     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4500     07BC  00A0               	movwf	digitalWrite@Pinx
  4501     07BD  01A1               	clrf	digitalWrite@logic
  4502     07BE  3001               	movlw	1
  4503     07BF  120A  118A  262D  120A  118A  	fcall	_digitalWrite
  4504                           
  4505                           ;main.c: 79:     pinMode(PB,PIN4,INPUT);
  4506     07C4  3004               	movlw	4
  4507     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4508     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4509     07C7  00A0               	movwf	pinMode@Pinx
  4510     07C8  01A1               	clrf	pinMode@mode
  4511     07C9  0AA1               	incf	pinMode@mode,f
  4512     07CA  3001               	movlw	1
  4513     07CB  120A  118A  2546  120A  118A  	fcall	_pinMode
  4514     07D0                     l1514:
  4515     07D0  0008               	return
  4516     07D1                     __end_of_GPIO_Init:
  4517                           
  4518                           	psect	text10
  4519     0546                     __ptext10:	
  4520 ;; *************** function _pinMode *****************
  4521 ;; Defined at:
  4522 ;;		line 26 in file "MCAL_layer/gpio/gpio.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  Portx           1    wreg     enum E1154
  4525 ;;  Pinx            1    0[BANK0 ] enum E1161
  4526 ;;  mode            1    1[BANK0 ] enum E1150
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  Portx           1    4[BANK0 ] enum E1154
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4538 ;;      Params:         0       2       0       0       0
  4539 ;;      Locals:         0       1       0       0       0
  4540 ;;      Temps:          0       2       0       0       0
  4541 ;;      Totals:         0       5       0       0       0
  4542 ;;Total ram usage:        5 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 5
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_HAL_USART_ASYNC_Init
  4549 ;;		_GPIO_Init
  4550 ;;		_lcd_4bit_intialize
  4551 ;;		_lcd_8bit_intialize
  4552 ;;		_keypad_initialize
  4553 ;;		_HAL_CCP_Capture_Mode_Init
  4554 ;;		_HAL_CCP_Compare_Mode_Init
  4555 ;;		_HAL_CCP_Pwm_Mode_Init
  4556 ;;		_Comparator_Init
  4557 ;;		_MSSP_I2C_Mode_GPIO_CFG
  4558 ;;		_RBx_SetInterruptHandler
  4559 ;;		_Interrupt_INT0_Pin_Init
  4560 ;;		_HAL_SPI_Init
  4561 ;;		_Timer1_Mode_Select
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565     0546                     _pinMode:	
  4566                           ;psect for function _pinMode
  4567                           
  4568                           
  4569                           ;incstack = 0
  4570                           ; Regs used in _pinMode: [wreg-fsr0h+status,2+status,0+btemp+1]
  4571                           ;pinMode@Portx stored from wreg
  4572     0546  1283               	bcf	3,5	;RP0=0, select bank0
  4573     0547  1303               	bcf	3,6	;RP1=0, select bank0
  4574     0548  00A4               	movwf	pinMode@Portx
  4575     0549                     l5129:
  4576                           
  4577                           ;MCAL_layer/gpio/gpio.c: 27:     if (mode == OUTPUT) {
  4578     0549  0821               	movf	pinMode@mode,w
  4579     054A  1D03               	btfss	3,2
  4580     054B  2D4D               	goto	u4401
  4581     054C  2D4E               	goto	u4400
  4582     054D                     u4401:
  4583     054D  2DBD               	goto	l5147
  4584     054E                     u4400:
  4585     054E  2DA4               	goto	l5145
  4586     054F                     l5133:
  4587                           
  4588                           ;MCAL_layer/gpio/gpio.c: 31:                 (TRISA &= ~(1 << Pinx));
  4589     054F  3001               	movlw	1
  4590     0550  00A2               	movwf	??_pinMode
  4591     0551  0A20               	incf	pinMode@Pinx,w
  4592     0552  2D55               	goto	u4414
  4593     0553                     u4415:
  4594     0553  1003               	clrc
  4595     0554  0DA2               	rlf	??_pinMode,f
  4596     0555                     u4414:
  4597     0555  3EFF               	addlw	-1
  4598     0556  1D03               	skipz
  4599     0557  2D53               	goto	u4415
  4600     0558  0822               	movf	??_pinMode,w
  4601     0559  3AFF               	xorlw	255
  4602     055A  00FF               	movwf	btemp+1
  4603     055B  087F               	movf	btemp+1,w
  4604     055C  1683               	bsf	3,5	;RP0=1, select bank1
  4605     055D  1303               	bcf	3,6	;RP1=0, select bank1
  4606     055E  0585               	andwf	5,f	;volatile
  4607                           
  4608                           ;MCAL_layer/gpio/gpio.c: 32:                 break;
  4609     055F  2E2C               	goto	l666
  4610     0560                     l5135:
  4611                           
  4612                           ;MCAL_layer/gpio/gpio.c: 34:                 (TRISB &= ~(1 << Pinx));
  4613     0560  3001               	movlw	1
  4614     0561  00A2               	movwf	??_pinMode
  4615     0562  0A20               	incf	pinMode@Pinx,w
  4616     0563  2D66               	goto	u4424
  4617     0564                     u4425:
  4618     0564  1003               	clrc
  4619     0565  0DA2               	rlf	??_pinMode,f
  4620     0566                     u4424:
  4621     0566  3EFF               	addlw	-1
  4622     0567  1D03               	skipz
  4623     0568  2D64               	goto	u4425
  4624     0569  0822               	movf	??_pinMode,w
  4625     056A  3AFF               	xorlw	255
  4626     056B  00FF               	movwf	btemp+1
  4627     056C  087F               	movf	btemp+1,w
  4628     056D  1683               	bsf	3,5	;RP0=1, select bank1
  4629     056E  1303               	bcf	3,6	;RP1=0, select bank1
  4630     056F  0586               	andwf	6,f	;volatile
  4631                           
  4632                           ;MCAL_layer/gpio/gpio.c: 35:                 break;
  4633     0570  2E2C               	goto	l666
  4634     0571                     l5137:
  4635                           
  4636                           ;MCAL_layer/gpio/gpio.c: 37:                 (TRISC &= ~(1 << Pinx));
  4637     0571  3001               	movlw	1
  4638     0572  00A2               	movwf	??_pinMode
  4639     0573  0A20               	incf	pinMode@Pinx,w
  4640     0574  2D77               	goto	u4434
  4641     0575                     u4435:
  4642     0575  1003               	clrc
  4643     0576  0DA2               	rlf	??_pinMode,f
  4644     0577                     u4434:
  4645     0577  3EFF               	addlw	-1
  4646     0578  1D03               	skipz
  4647     0579  2D75               	goto	u4435
  4648     057A  0822               	movf	??_pinMode,w
  4649     057B  3AFF               	xorlw	255
  4650     057C  00FF               	movwf	btemp+1
  4651     057D  087F               	movf	btemp+1,w
  4652     057E  1683               	bsf	3,5	;RP0=1, select bank1
  4653     057F  1303               	bcf	3,6	;RP1=0, select bank1
  4654     0580  0587               	andwf	7,f	;volatile
  4655                           
  4656                           ;MCAL_layer/gpio/gpio.c: 38:                 break;
  4657     0581  2E2C               	goto	l666
  4658     0582                     l5139:
  4659                           
  4660                           ;MCAL_layer/gpio/gpio.c: 40:                 (TRISD &= ~(1 << Pinx));
  4661     0582  3001               	movlw	1
  4662     0583  00A2               	movwf	??_pinMode
  4663     0584  0A20               	incf	pinMode@Pinx,w
  4664     0585  2D88               	goto	u4444
  4665     0586                     u4445:
  4666     0586  1003               	clrc
  4667     0587  0DA2               	rlf	??_pinMode,f
  4668     0588                     u4444:
  4669     0588  3EFF               	addlw	-1
  4670     0589  1D03               	skipz
  4671     058A  2D86               	goto	u4445
  4672     058B  0822               	movf	??_pinMode,w
  4673     058C  3AFF               	xorlw	255
  4674     058D  00FF               	movwf	btemp+1
  4675     058E  087F               	movf	btemp+1,w
  4676     058F  1683               	bsf	3,5	;RP0=1, select bank1
  4677     0590  1303               	bcf	3,6	;RP1=0, select bank1
  4678     0591  0588               	andwf	8,f	;volatile
  4679                           
  4680                           ;MCAL_layer/gpio/gpio.c: 41:                 break;
  4681     0592  2E2C               	goto	l666
  4682     0593                     l5141:
  4683                           
  4684                           ;MCAL_layer/gpio/gpio.c: 43:                 (TRISE &= ~(1 << Pinx));
  4685     0593  3001               	movlw	1
  4686     0594  00A2               	movwf	??_pinMode
  4687     0595  0A20               	incf	pinMode@Pinx,w
  4688     0596  2D99               	goto	u4454
  4689     0597                     u4455:
  4690     0597  1003               	clrc
  4691     0598  0DA2               	rlf	??_pinMode,f
  4692     0599                     u4454:
  4693     0599  3EFF               	addlw	-1
  4694     059A  1D03               	skipz
  4695     059B  2D97               	goto	u4455
  4696     059C  0822               	movf	??_pinMode,w
  4697     059D  3AFF               	xorlw	255
  4698     059E  00FF               	movwf	btemp+1
  4699     059F  087F               	movf	btemp+1,w
  4700     05A0  1683               	bsf	3,5	;RP0=1, select bank1
  4701     05A1  1303               	bcf	3,6	;RP1=0, select bank1
  4702     05A2  0589               	andwf	9,f	;volatile
  4703                           
  4704                           ;MCAL_layer/gpio/gpio.c: 44:                 break;
  4705     05A3  2E2C               	goto	l666
  4706     05A4                     l5145:
  4707     05A4  0824               	movf	pinMode@Portx,w
  4708     05A5  00A2               	movwf	??_pinMode
  4709     05A6  01A3               	clrf	??_pinMode+1
  4710                           
  4711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4712                           ; Switch size 1, requested type "simple"
  4713                           ; Number of cases is 1, Range of values is 0 to 0
  4714                           ; switch strategies available:
  4715                           ; Name         Instructions Cycles
  4716                           ; simple_byte            4     3 (average)
  4717                           ; direct_byte           11     8 (fixed)
  4718                           ; jumptable            260     6 (fixed)
  4719                           ;	Chosen strategy is simple_byte
  4720     05A7  0823               	movf	??_pinMode+1,w
  4721     05A8  3A00               	xorlw	0	; case 0
  4722     05A9  1903               	skipnz
  4723     05AA  2DAC               	goto	l7221
  4724     05AB  2E2C               	goto	l666
  4725     05AC                     l7221:
  4726                           
  4727                           ; Switch size 1, requested type "simple"
  4728                           ; Number of cases is 5, Range of values is 0 to 4
  4729                           ; switch strategies available:
  4730                           ; Name         Instructions Cycles
  4731                           ; simple_byte           16     9 (average)
  4732                           ; direct_byte           23     8 (fixed)
  4733                           ; jumptable            260     6 (fixed)
  4734                           ;	Chosen strategy is simple_byte
  4735     05AC  0822               	movf	??_pinMode,w
  4736     05AD  3A00               	xorlw	0	; case 0
  4737     05AE  1903               	skipnz
  4738     05AF  2D4F               	goto	l5133
  4739     05B0  3A01               	xorlw	1	; case 1
  4740     05B1  1903               	skipnz
  4741     05B2  2D60               	goto	l5135
  4742     05B3  3A03               	xorlw	3	; case 2
  4743     05B4  1903               	skipnz
  4744     05B5  2D71               	goto	l5137
  4745     05B6  3A01               	xorlw	1	; case 3
  4746     05B7  1903               	skipnz
  4747     05B8  2D82               	goto	l5139
  4748     05B9  3A07               	xorlw	7	; case 4
  4749     05BA  1903               	skipnz
  4750     05BB  2D93               	goto	l5141
  4751     05BC  2E2C               	goto	l666
  4752     05BD                     l5147:
  4753     05BD  0321               	decf	pinMode@mode,w
  4754     05BE  1D03               	btfss	3,2
  4755     05BF  2DC1               	goto	u4461
  4756     05C0  2DC2               	goto	u4460
  4757     05C1                     u4461:
  4758     05C1  2E2C               	goto	l666
  4759     05C2                     u4460:
  4760     05C2  2E13               	goto	l5163
  4761     05C3                     l5151:
  4762                           
  4763                           ;MCAL_layer/gpio/gpio.c: 52:                 (TRISA |= (1 << Pinx));
  4764     05C3  3001               	movlw	1
  4765     05C4  00A2               	movwf	??_pinMode
  4766     05C5  0A20               	incf	pinMode@Pinx,w
  4767     05C6  2DC9               	goto	u4474
  4768     05C7                     u4475:
  4769     05C7  1003               	clrc
  4770     05C8  0DA2               	rlf	??_pinMode,f
  4771     05C9                     u4474:
  4772     05C9  3EFF               	addlw	-1
  4773     05CA  1D03               	skipz
  4774     05CB  2DC7               	goto	u4475
  4775     05CC  0822               	movf	??_pinMode,w
  4776     05CD  00FF               	movwf	btemp+1
  4777     05CE  087F               	movf	btemp+1,w
  4778     05CF  1683               	bsf	3,5	;RP0=1, select bank1
  4779     05D0  1303               	bcf	3,6	;RP1=0, select bank1
  4780     05D1  0485               	iorwf	5,f	;volatile
  4781                           
  4782                           ;MCAL_layer/gpio/gpio.c: 53:                 break;
  4783     05D2  2E2C               	goto	l666
  4784     05D3                     l5153:
  4785                           
  4786                           ;MCAL_layer/gpio/gpio.c: 55:                 (TRISB |= (1 << Pinx));
  4787     05D3  3001               	movlw	1
  4788     05D4  00A2               	movwf	??_pinMode
  4789     05D5  0A20               	incf	pinMode@Pinx,w
  4790     05D6  2DD9               	goto	u4484
  4791     05D7                     u4485:
  4792     05D7  1003               	clrc
  4793     05D8  0DA2               	rlf	??_pinMode,f
  4794     05D9                     u4484:
  4795     05D9  3EFF               	addlw	-1
  4796     05DA  1D03               	skipz
  4797     05DB  2DD7               	goto	u4485
  4798     05DC  0822               	movf	??_pinMode,w
  4799     05DD  00FF               	movwf	btemp+1
  4800     05DE  087F               	movf	btemp+1,w
  4801     05DF  1683               	bsf	3,5	;RP0=1, select bank1
  4802     05E0  1303               	bcf	3,6	;RP1=0, select bank1
  4803     05E1  0486               	iorwf	6,f	;volatile
  4804                           
  4805                           ;MCAL_layer/gpio/gpio.c: 56:                 break;
  4806     05E2  2E2C               	goto	l666
  4807     05E3                     l5155:
  4808                           
  4809                           ;MCAL_layer/gpio/gpio.c: 58:                 (TRISC |= (1 << Pinx));
  4810     05E3  3001               	movlw	1
  4811     05E4  00A2               	movwf	??_pinMode
  4812     05E5  0A20               	incf	pinMode@Pinx,w
  4813     05E6  2DE9               	goto	u4494
  4814     05E7                     u4495:
  4815     05E7  1003               	clrc
  4816     05E8  0DA2               	rlf	??_pinMode,f
  4817     05E9                     u4494:
  4818     05E9  3EFF               	addlw	-1
  4819     05EA  1D03               	skipz
  4820     05EB  2DE7               	goto	u4495
  4821     05EC  0822               	movf	??_pinMode,w
  4822     05ED  00FF               	movwf	btemp+1
  4823     05EE  087F               	movf	btemp+1,w
  4824     05EF  1683               	bsf	3,5	;RP0=1, select bank1
  4825     05F0  1303               	bcf	3,6	;RP1=0, select bank1
  4826     05F1  0487               	iorwf	7,f	;volatile
  4827                           
  4828                           ;MCAL_layer/gpio/gpio.c: 59:                 break;
  4829     05F2  2E2C               	goto	l666
  4830     05F3                     l5157:
  4831                           
  4832                           ;MCAL_layer/gpio/gpio.c: 61:                 (TRISD |= (1 << Pinx));
  4833     05F3  3001               	movlw	1
  4834     05F4  00A2               	movwf	??_pinMode
  4835     05F5  0A20               	incf	pinMode@Pinx,w
  4836     05F6  2DF9               	goto	u4504
  4837     05F7                     u4505:
  4838     05F7  1003               	clrc
  4839     05F8  0DA2               	rlf	??_pinMode,f
  4840     05F9                     u4504:
  4841     05F9  3EFF               	addlw	-1
  4842     05FA  1D03               	skipz
  4843     05FB  2DF7               	goto	u4505
  4844     05FC  0822               	movf	??_pinMode,w
  4845     05FD  00FF               	movwf	btemp+1
  4846     05FE  087F               	movf	btemp+1,w
  4847     05FF  1683               	bsf	3,5	;RP0=1, select bank1
  4848     0600  1303               	bcf	3,6	;RP1=0, select bank1
  4849     0601  0488               	iorwf	8,f	;volatile
  4850                           
  4851                           ;MCAL_layer/gpio/gpio.c: 62:                 break;
  4852     0602  2E2C               	goto	l666
  4853     0603                     l5159:
  4854                           
  4855                           ;MCAL_layer/gpio/gpio.c: 64:                 (TRISE |= (1 << Pinx));
  4856     0603  3001               	movlw	1
  4857     0604  00A2               	movwf	??_pinMode
  4858     0605  0A20               	incf	pinMode@Pinx,w
  4859     0606  2E09               	goto	u4514
  4860     0607                     u4515:
  4861     0607  1003               	clrc
  4862     0608  0DA2               	rlf	??_pinMode,f
  4863     0609                     u4514:
  4864     0609  3EFF               	addlw	-1
  4865     060A  1D03               	skipz
  4866     060B  2E07               	goto	u4515
  4867     060C  0822               	movf	??_pinMode,w
  4868     060D  00FF               	movwf	btemp+1
  4869     060E  087F               	movf	btemp+1,w
  4870     060F  1683               	bsf	3,5	;RP0=1, select bank1
  4871     0610  1303               	bcf	3,6	;RP1=0, select bank1
  4872     0611  0489               	iorwf	9,f	;volatile
  4873                           
  4874                           ;MCAL_layer/gpio/gpio.c: 65:                 break;
  4875     0612  2E2C               	goto	l666
  4876     0613                     l5163:
  4877     0613  0824               	movf	pinMode@Portx,w
  4878     0614  00A2               	movwf	??_pinMode
  4879     0615  01A3               	clrf	??_pinMode+1
  4880                           
  4881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4882                           ; Switch size 1, requested type "simple"
  4883                           ; Number of cases is 1, Range of values is 0 to 0
  4884                           ; switch strategies available:
  4885                           ; Name         Instructions Cycles
  4886                           ; simple_byte            4     3 (average)
  4887                           ; direct_byte           11     8 (fixed)
  4888                           ; jumptable            260     6 (fixed)
  4889                           ;	Chosen strategy is simple_byte
  4890     0616  0823               	movf	??_pinMode+1,w
  4891     0617  3A00               	xorlw	0	; case 0
  4892     0618  1903               	skipnz
  4893     0619  2E1B               	goto	l7223
  4894     061A  2E2C               	goto	l666
  4895     061B                     l7223:
  4896                           
  4897                           ; Switch size 1, requested type "simple"
  4898                           ; Number of cases is 5, Range of values is 0 to 4
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte           16     9 (average)
  4902                           ; direct_byte           23     8 (fixed)
  4903                           ; jumptable            260     6 (fixed)
  4904                           ;	Chosen strategy is simple_byte
  4905     061B  0822               	movf	??_pinMode,w
  4906     061C  3A00               	xorlw	0	; case 0
  4907     061D  1903               	skipnz
  4908     061E  2DC3               	goto	l5151
  4909     061F  3A01               	xorlw	1	; case 1
  4910     0620  1903               	skipnz
  4911     0621  2DD3               	goto	l5153
  4912     0622  3A03               	xorlw	3	; case 2
  4913     0623  1903               	skipnz
  4914     0624  2DE3               	goto	l5155
  4915     0625  3A01               	xorlw	1	; case 3
  4916     0626  1903               	skipnz
  4917     0627  2DF3               	goto	l5157
  4918     0628  3A07               	xorlw	7	; case 4
  4919     0629  1903               	skipnz
  4920     062A  2E03               	goto	l5159
  4921     062B  2E2C               	goto	l666
  4922     062C                     l666:
  4923     062C  0008               	return
  4924     062D                     __end_of_pinMode:
  4925                           
  4926                           	psect	text11
  4927     062D                     __ptext11:	
  4928 ;; *************** function _digitalWrite *****************
  4929 ;; Defined at:
  4930 ;;		line 80 in file "MCAL_layer/gpio/gpio.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  Portx           1    wreg     enum E1154
  4933 ;;  Pinx            1    0[BANK0 ] enum E1161
  4934 ;;  logic           1    1[BANK0 ] enum E1171
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  Portx           1    4[BANK0 ] enum E1154
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4946 ;;      Params:         0       2       0       0       0
  4947 ;;      Locals:         0       1       0       0       0
  4948 ;;      Temps:          0       2       0       0       0
  4949 ;;      Totals:         0       5       0       0       0
  4950 ;;Total ram usage:        5 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; Hardware stack levels required when called: 5
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_GPIO_Init
  4957 ;;		_lcd_4bit_send_command
  4958 ;;		_lcd_4bit_send_char_data
  4959 ;;		_lcd_8bit_send_command
  4960 ;;		_lcd_8bit_send_char_data
  4961 ;;		_lcd_send_4bits
  4962 ;;		_lcd_send_8bits
  4963 ;;		_lcd_4bit_send_enable_signal
  4964 ;;		_lcd_8bit_send_enable_signal
  4965 ;;		_keypad_get_value
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969     062D                     _digitalWrite:	
  4970                           ;psect for function _digitalWrite
  4971                           
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _digitalWrite: [wreg-fsr0h+status,2+status,0+btemp+1]
  4975                           ;digitalWrite@Portx stored from wreg
  4976     062D  1283               	bcf	3,5	;RP0=0, select bank0
  4977     062E  1303               	bcf	3,6	;RP1=0, select bank0
  4978     062F  00A4               	movwf	digitalWrite@Portx
  4979     0630                     l5195:
  4980                           
  4981                           ;MCAL_layer/gpio/gpio.c: 81:     if (logic == HIGH) {
  4982     0630  0321               	decf	digitalWrite@logic,w
  4983     0631  1D03               	btfss	3,2
  4984     0632  2E34               	goto	u4521
  4985     0633  2E35               	goto	u4520
  4986     0634                     u4521:
  4987     0634  2E95               	goto	l5213
  4988     0635                     u4520:
  4989     0635  2E7C               	goto	l5211
  4990     0636                     l5199:
  4991                           
  4992                           ;MCAL_layer/gpio/gpio.c: 85:                 (PORTA |= (1 << Pinx));
  4993     0636  3001               	movlw	1
  4994     0637  00A2               	movwf	??_digitalWrite
  4995     0638  0A20               	incf	digitalWrite@Pinx,w
  4996     0639  2E3C               	goto	u4534
  4997     063A                     u4535:
  4998     063A  1003               	clrc
  4999     063B  0DA2               	rlf	??_digitalWrite,f
  5000     063C                     u4534:
  5001     063C  3EFF               	addlw	-1
  5002     063D  1D03               	skipz
  5003     063E  2E3A               	goto	u4535
  5004     063F  0822               	movf	??_digitalWrite,w
  5005     0640  00FF               	movwf	btemp+1
  5006     0641  087F               	movf	btemp+1,w
  5007     0642  0485               	iorwf	5,f	;volatile
  5008                           
  5009                           ;MCAL_layer/gpio/gpio.c: 86:                 break;
  5010     0643  2EFF               	goto	l688
  5011     0644                     l5201:
  5012                           
  5013                           ;MCAL_layer/gpio/gpio.c: 88:                 (PORTB |= (1 << Pinx));
  5014     0644  3001               	movlw	1
  5015     0645  00A2               	movwf	??_digitalWrite
  5016     0646  0A20               	incf	digitalWrite@Pinx,w
  5017     0647  2E4A               	goto	u4544
  5018     0648                     u4545:
  5019     0648  1003               	clrc
  5020     0649  0DA2               	rlf	??_digitalWrite,f
  5021     064A                     u4544:
  5022     064A  3EFF               	addlw	-1
  5023     064B  1D03               	skipz
  5024     064C  2E48               	goto	u4545
  5025     064D  0822               	movf	??_digitalWrite,w
  5026     064E  00FF               	movwf	btemp+1
  5027     064F  087F               	movf	btemp+1,w
  5028     0650  0486               	iorwf	6,f	;volatile
  5029                           
  5030                           ;MCAL_layer/gpio/gpio.c: 89:                 break;
  5031     0651  2EFF               	goto	l688
  5032     0652                     l5203:
  5033                           
  5034                           ;MCAL_layer/gpio/gpio.c: 91:                 (PORTC |= (1 << Pinx));
  5035     0652  3001               	movlw	1
  5036     0653  00A2               	movwf	??_digitalWrite
  5037     0654  0A20               	incf	digitalWrite@Pinx,w
  5038     0655  2E58               	goto	u4554
  5039     0656                     u4555:
  5040     0656  1003               	clrc
  5041     0657  0DA2               	rlf	??_digitalWrite,f
  5042     0658                     u4554:
  5043     0658  3EFF               	addlw	-1
  5044     0659  1D03               	skipz
  5045     065A  2E56               	goto	u4555
  5046     065B  0822               	movf	??_digitalWrite,w
  5047     065C  00FF               	movwf	btemp+1
  5048     065D  087F               	movf	btemp+1,w
  5049     065E  0487               	iorwf	7,f	;volatile
  5050                           
  5051                           ;MCAL_layer/gpio/gpio.c: 92:                 break;
  5052     065F  2EFF               	goto	l688
  5053     0660                     l5205:
  5054                           
  5055                           ;MCAL_layer/gpio/gpio.c: 94:                 (PORTD |= (1 << Pinx));
  5056     0660  3001               	movlw	1
  5057     0661  00A2               	movwf	??_digitalWrite
  5058     0662  0A20               	incf	digitalWrite@Pinx,w
  5059     0663  2E66               	goto	u4564
  5060     0664                     u4565:
  5061     0664  1003               	clrc
  5062     0665  0DA2               	rlf	??_digitalWrite,f
  5063     0666                     u4564:
  5064     0666  3EFF               	addlw	-1
  5065     0667  1D03               	skipz
  5066     0668  2E64               	goto	u4565
  5067     0669  0822               	movf	??_digitalWrite,w
  5068     066A  00FF               	movwf	btemp+1
  5069     066B  087F               	movf	btemp+1,w
  5070     066C  0488               	iorwf	8,f	;volatile
  5071                           
  5072                           ;MCAL_layer/gpio/gpio.c: 95:                 break;
  5073     066D  2EFF               	goto	l688
  5074     066E                     l5207:
  5075                           
  5076                           ;MCAL_layer/gpio/gpio.c: 97:                 (PORTE |= (1 << Pinx));
  5077     066E  3001               	movlw	1
  5078     066F  00A2               	movwf	??_digitalWrite
  5079     0670  0A20               	incf	digitalWrite@Pinx,w
  5080     0671  2E74               	goto	u4574
  5081     0672                     u4575:
  5082     0672  1003               	clrc
  5083     0673  0DA2               	rlf	??_digitalWrite,f
  5084     0674                     u4574:
  5085     0674  3EFF               	addlw	-1
  5086     0675  1D03               	skipz
  5087     0676  2E72               	goto	u4575
  5088     0677  0822               	movf	??_digitalWrite,w
  5089     0678  00FF               	movwf	btemp+1
  5090     0679  087F               	movf	btemp+1,w
  5091     067A  0489               	iorwf	9,f	;volatile
  5092                           
  5093                           ;MCAL_layer/gpio/gpio.c: 98:                 break;
  5094     067B  2EFF               	goto	l688
  5095     067C                     l5211:
  5096     067C  0824               	movf	digitalWrite@Portx,w
  5097     067D  00A2               	movwf	??_digitalWrite
  5098     067E  01A3               	clrf	??_digitalWrite+1
  5099                           
  5100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5101                           ; Switch size 1, requested type "simple"
  5102                           ; Number of cases is 1, Range of values is 0 to 0
  5103                           ; switch strategies available:
  5104                           ; Name         Instructions Cycles
  5105                           ; simple_byte            4     3 (average)
  5106                           ; direct_byte           11     8 (fixed)
  5107                           ; jumptable            260     6 (fixed)
  5108                           ;	Chosen strategy is simple_byte
  5109     067F  0823               	movf	??_digitalWrite+1,w
  5110     0680  3A00               	xorlw	0	; case 0
  5111     0681  1903               	skipnz
  5112     0682  2E84               	goto	l7225
  5113     0683  2EFF               	goto	l688
  5114     0684                     l7225:
  5115                           
  5116                           ; Switch size 1, requested type "simple"
  5117                           ; Number of cases is 5, Range of values is 0 to 4
  5118                           ; switch strategies available:
  5119                           ; Name         Instructions Cycles
  5120                           ; simple_byte           16     9 (average)
  5121                           ; direct_byte           23     8 (fixed)
  5122                           ; jumptable            260     6 (fixed)
  5123                           ;	Chosen strategy is simple_byte
  5124     0684  0822               	movf	??_digitalWrite,w
  5125     0685  3A00               	xorlw	0	; case 0
  5126     0686  1903               	skipnz
  5127     0687  2E36               	goto	l5199
  5128     0688  3A01               	xorlw	1	; case 1
  5129     0689  1903               	skipnz
  5130     068A  2E44               	goto	l5201
  5131     068B  3A03               	xorlw	3	; case 2
  5132     068C  1903               	skipnz
  5133     068D  2E52               	goto	l5203
  5134     068E  3A01               	xorlw	1	; case 3
  5135     068F  1903               	skipnz
  5136     0690  2E60               	goto	l5205
  5137     0691  3A07               	xorlw	7	; case 4
  5138     0692  1903               	skipnz
  5139     0693  2E6E               	goto	l5207
  5140     0694  2EFF               	goto	l688
  5141     0695                     l5213:
  5142     0695  0821               	movf	digitalWrite@logic,w
  5143     0696  1D03               	btfss	3,2
  5144     0697  2E99               	goto	u4581
  5145     0698  2E9A               	goto	u4580
  5146     0699                     u4581:
  5147     0699  2EFF               	goto	l688
  5148     069A                     u4580:
  5149     069A  2EE6               	goto	l5229
  5150     069B                     l5217:
  5151                           
  5152                           ;MCAL_layer/gpio/gpio.c: 106:                 (PORTA &= ~(1 << Pinx));
  5153     069B  3001               	movlw	1
  5154     069C  00A2               	movwf	??_digitalWrite
  5155     069D  0A20               	incf	digitalWrite@Pinx,w
  5156     069E  2EA1               	goto	u4594
  5157     069F                     u4595:
  5158     069F  1003               	clrc
  5159     06A0  0DA2               	rlf	??_digitalWrite,f
  5160     06A1                     u4594:
  5161     06A1  3EFF               	addlw	-1
  5162     06A2  1D03               	skipz
  5163     06A3  2E9F               	goto	u4595
  5164     06A4  0822               	movf	??_digitalWrite,w
  5165     06A5  3AFF               	xorlw	255
  5166     06A6  00FF               	movwf	btemp+1
  5167     06A7  087F               	movf	btemp+1,w
  5168     06A8  0585               	andwf	5,f	;volatile
  5169                           
  5170                           ;MCAL_layer/gpio/gpio.c: 107:                 break;
  5171     06A9  2EFF               	goto	l688
  5172     06AA                     l5219:
  5173                           
  5174                           ;MCAL_layer/gpio/gpio.c: 109:                 (PORTB &= ~(1 << Pinx));
  5175     06AA  3001               	movlw	1
  5176     06AB  00A2               	movwf	??_digitalWrite
  5177     06AC  0A20               	incf	digitalWrite@Pinx,w
  5178     06AD  2EB0               	goto	u4604
  5179     06AE                     u4605:
  5180     06AE  1003               	clrc
  5181     06AF  0DA2               	rlf	??_digitalWrite,f
  5182     06B0                     u4604:
  5183     06B0  3EFF               	addlw	-1
  5184     06B1  1D03               	skipz
  5185     06B2  2EAE               	goto	u4605
  5186     06B3  0822               	movf	??_digitalWrite,w
  5187     06B4  3AFF               	xorlw	255
  5188     06B5  00FF               	movwf	btemp+1
  5189     06B6  087F               	movf	btemp+1,w
  5190     06B7  0586               	andwf	6,f	;volatile
  5191                           
  5192                           ;MCAL_layer/gpio/gpio.c: 110:                 break;
  5193     06B8  2EFF               	goto	l688
  5194     06B9                     l5221:
  5195                           
  5196                           ;MCAL_layer/gpio/gpio.c: 112:                 (PORTC &= ~(1 << Pinx));
  5197     06B9  3001               	movlw	1
  5198     06BA  00A2               	movwf	??_digitalWrite
  5199     06BB  0A20               	incf	digitalWrite@Pinx,w
  5200     06BC  2EBF               	goto	u4614
  5201     06BD                     u4615:
  5202     06BD  1003               	clrc
  5203     06BE  0DA2               	rlf	??_digitalWrite,f
  5204     06BF                     u4614:
  5205     06BF  3EFF               	addlw	-1
  5206     06C0  1D03               	skipz
  5207     06C1  2EBD               	goto	u4615
  5208     06C2  0822               	movf	??_digitalWrite,w
  5209     06C3  3AFF               	xorlw	255
  5210     06C4  00FF               	movwf	btemp+1
  5211     06C5  087F               	movf	btemp+1,w
  5212     06C6  0587               	andwf	7,f	;volatile
  5213                           
  5214                           ;MCAL_layer/gpio/gpio.c: 113:                 break;
  5215     06C7  2EFF               	goto	l688
  5216     06C8                     l5223:
  5217                           
  5218                           ;MCAL_layer/gpio/gpio.c: 115:                 (PORTD &= ~(1 << Pinx));
  5219     06C8  3001               	movlw	1
  5220     06C9  00A2               	movwf	??_digitalWrite
  5221     06CA  0A20               	incf	digitalWrite@Pinx,w
  5222     06CB  2ECE               	goto	u4624
  5223     06CC                     u4625:
  5224     06CC  1003               	clrc
  5225     06CD  0DA2               	rlf	??_digitalWrite,f
  5226     06CE                     u4624:
  5227     06CE  3EFF               	addlw	-1
  5228     06CF  1D03               	skipz
  5229     06D0  2ECC               	goto	u4625
  5230     06D1  0822               	movf	??_digitalWrite,w
  5231     06D2  3AFF               	xorlw	255
  5232     06D3  00FF               	movwf	btemp+1
  5233     06D4  087F               	movf	btemp+1,w
  5234     06D5  0588               	andwf	8,f	;volatile
  5235                           
  5236                           ;MCAL_layer/gpio/gpio.c: 116:                 break;
  5237     06D6  2EFF               	goto	l688
  5238     06D7                     l5225:
  5239                           
  5240                           ;MCAL_layer/gpio/gpio.c: 118:                 (PORTE &= ~(1 << Pinx));
  5241     06D7  3001               	movlw	1
  5242     06D8  00A2               	movwf	??_digitalWrite
  5243     06D9  0A20               	incf	digitalWrite@Pinx,w
  5244     06DA  2EDD               	goto	u4634
  5245     06DB                     u4635:
  5246     06DB  1003               	clrc
  5247     06DC  0DA2               	rlf	??_digitalWrite,f
  5248     06DD                     u4634:
  5249     06DD  3EFF               	addlw	-1
  5250     06DE  1D03               	skipz
  5251     06DF  2EDB               	goto	u4635
  5252     06E0  0822               	movf	??_digitalWrite,w
  5253     06E1  3AFF               	xorlw	255
  5254     06E2  00FF               	movwf	btemp+1
  5255     06E3  087F               	movf	btemp+1,w
  5256     06E4  0589               	andwf	9,f	;volatile
  5257                           
  5258                           ;MCAL_layer/gpio/gpio.c: 119:                 break;
  5259     06E5  2EFF               	goto	l688
  5260     06E6                     l5229:
  5261     06E6  0824               	movf	digitalWrite@Portx,w
  5262     06E7  00A2               	movwf	??_digitalWrite
  5263     06E8  01A3               	clrf	??_digitalWrite+1
  5264                           
  5265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5266                           ; Switch size 1, requested type "simple"
  5267                           ; Number of cases is 1, Range of values is 0 to 0
  5268                           ; switch strategies available:
  5269                           ; Name         Instructions Cycles
  5270                           ; simple_byte            4     3 (average)
  5271                           ; direct_byte           11     8 (fixed)
  5272                           ; jumptable            260     6 (fixed)
  5273                           ;	Chosen strategy is simple_byte
  5274     06E9  0823               	movf	??_digitalWrite+1,w
  5275     06EA  3A00               	xorlw	0	; case 0
  5276     06EB  1903               	skipnz
  5277     06EC  2EEE               	goto	l7227
  5278     06ED  2EFF               	goto	l688
  5279     06EE                     l7227:
  5280                           
  5281                           ; Switch size 1, requested type "simple"
  5282                           ; Number of cases is 5, Range of values is 0 to 4
  5283                           ; switch strategies available:
  5284                           ; Name         Instructions Cycles
  5285                           ; simple_byte           16     9 (average)
  5286                           ; direct_byte           23     8 (fixed)
  5287                           ; jumptable            260     6 (fixed)
  5288                           ;	Chosen strategy is simple_byte
  5289     06EE  0822               	movf	??_digitalWrite,w
  5290     06EF  3A00               	xorlw	0	; case 0
  5291     06F0  1903               	skipnz
  5292     06F1  2E9B               	goto	l5217
  5293     06F2  3A01               	xorlw	1	; case 1
  5294     06F3  1903               	skipnz
  5295     06F4  2EAA               	goto	l5219
  5296     06F5  3A03               	xorlw	3	; case 2
  5297     06F6  1903               	skipnz
  5298     06F7  2EB9               	goto	l5221
  5299     06F8  3A01               	xorlw	1	; case 3
  5300     06F9  1903               	skipnz
  5301     06FA  2EC8               	goto	l5223
  5302     06FB  3A07               	xorlw	7	; case 4
  5303     06FC  1903               	skipnz
  5304     06FD  2ED7               	goto	l5225
  5305     06FE  2EFF               	goto	l688
  5306     06FF                     l688:
  5307     06FF  0008               	return
  5308     0700                     __end_of_digitalWrite:
  5309                           
  5310                           	psect	text12
  5311     023C                     __ptext12:	
  5312 ;; *************** function _InterruptManager *****************
  5313 ;; Defined at:
  5314 ;;		line 19 in file "MCAL_layer/Interrupt/mcal_interrupt_manager.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5328 ;;      Params:         0       0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0
  5330 ;;      Temps:          4       0       0       0       0
  5331 ;;      Totals:         4       0       0       0       0
  5332 ;;Total ram usage:        4 bytes
  5333 ;; Hardware stack levels used: 1
  5334 ;; Hardware stack levels required when called: 4
  5335 ;; This function calls:
  5336 ;;		_ADC_ISR
  5337 ;;		_CCP1_ISR
  5338 ;;		_CCP2_ISR
  5339 ;;		_EUSART_RX_ISR
  5340 ;;		_EUSART_TX_ISR
  5341 ;;		_INT0_ISR
  5342 ;;		_MSSP_I2C_BC_ISR
  5343 ;;		_MSSP_I2C_ISR
  5344 ;;		_MSSP_SPI_ISR
  5345 ;;		_RB4_ISR
  5346 ;;		_RB5_ISR
  5347 ;;		_RB6_ISR
  5348 ;;		_RB7_ISR
  5349 ;;		_TMR0_ISR
  5350 ;;		_TMR1_ISR
  5351 ;;		_TMR2_ISR
  5352 ;; This function is called by:
  5353 ;;		Interrupt level 1
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357     023C                     _InterruptManager:	
  5358                           ;psect for function _InterruptManager
  5359                           
  5360     023C                     i1l6769:
  5361                           
  5362                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 21:     if((1 == INTCONbits.INTE) && (1 
      +                          == INTCONbits.INTF)){
  5363     023C  1E0B               	btfss	11,4	;volatile
  5364     023D  2A3F               	goto	u649_21
  5365     023E  2A40               	goto	u649_20
  5366     023F                     u649_21:
  5367     023F  2A49               	goto	i1l1078
  5368     0240                     u649_20:
  5369     0240                     i1l6771:
  5370     0240  1C8B               	btfss	11,1	;volatile
  5371     0241  2A43               	goto	u650_21
  5372     0242  2A44               	goto	u650_20
  5373     0243                     u650_21:
  5374     0243  2A49               	goto	i1l1078
  5375     0244                     u650_20:
  5376     0244                     i1l6773:
  5377                           
  5378                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 22:         INT0_ISR();
  5379     0244  120A  158A  2409  120A  118A  	fcall	_INT0_ISR
  5380     0249                     i1l1078:	
  5381                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 23:     }
  5382                           
  5383                           
  5384                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 28:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5385     0249  1D8B               	btfss	11,3	;volatile
  5386     024A  2A4C               	goto	u651_21
  5387     024B  2A4D               	goto	u651_20
  5388     024C                     u651_21:
  5389     024C  2A63               	goto	i1l1080
  5390     024D                     u651_20:
  5391     024D                     i1l6775:
  5392     024D  1C0B               	btfss	11,0	;volatile
  5393     024E  2A50               	goto	u652_21
  5394     024F  2A51               	goto	u652_20
  5395     0250                     u652_21:
  5396     0250  2A63               	goto	i1l1080
  5397     0251                     u652_20:
  5398     0251                     i1l6777:
  5399     0251  1283               	bcf	3,5	;RP0=0, select bank0
  5400     0252  1303               	bcf	3,6	;RP1=0, select bank0
  5401     0253  1E06               	btfss	6,4	;volatile
  5402     0254  2A56               	goto	u653_21
  5403     0255  2A57               	goto	u653_20
  5404     0256                     u653_21:
  5405     0256  2A63               	goto	i1l1080
  5406     0257                     u653_20:
  5407     0257                     i1l6779:
  5408     0257  037A               	decf	_RB4_Flag,w	;volatile
  5409     0258  1D03               	btfss	3,2
  5410     0259  2A5B               	goto	u654_21
  5411     025A  2A5C               	goto	u654_20
  5412     025B                     u654_21:
  5413     025B  2A63               	goto	i1l1080
  5414     025C                     u654_20:
  5415     025C                     i1l6781:
  5416                           
  5417                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 29:        (PORTBbits.RB4 == HIGH) && (R
      +                          B4_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 30:         RB4_Flag = 0;
  5418     025C  01FA               	clrf	_RB4_Flag	;volatile
  5419     025D                     i1l6783:
  5420                           
  5421                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 31:         RB4_ISR(0);
  5422     025D  3000               	movlw	0
  5423     025E  120A  158A  2440  120A  118A  	fcall	_RB4_ISR
  5424     0263                     i1l1080:	
  5425                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 32:     }
  5426                           
  5427                           
  5428                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5429     0263  1D8B               	btfss	11,3	;volatile
  5430     0264  2A66               	goto	u655_21
  5431     0265  2A67               	goto	u655_20
  5432     0266                     u655_21:
  5433     0266  2A7E               	goto	i1l1082
  5434     0267                     u655_20:
  5435     0267                     i1l6785:
  5436     0267  1C0B               	btfss	11,0	;volatile
  5437     0268  2A6A               	goto	u656_21
  5438     0269  2A6B               	goto	u656_20
  5439     026A                     u656_21:
  5440     026A  2A7E               	goto	i1l1082
  5441     026B                     u656_20:
  5442     026B                     i1l6787:
  5443     026B  1283               	bcf	3,5	;RP0=0, select bank0
  5444     026C  1303               	bcf	3,6	;RP1=0, select bank0
  5445     026D  1A06               	btfsc	6,4	;volatile
  5446     026E  2A70               	goto	u657_21
  5447     026F  2A71               	goto	u657_20
  5448     0270                     u657_21:
  5449     0270  2A7E               	goto	i1l1082
  5450     0271                     u657_20:
  5451     0271                     i1l6789:
  5452     0271  087A               	movf	_RB4_Flag,w	;volatile
  5453     0272  1D03               	btfss	3,2
  5454     0273  2A75               	goto	u658_21
  5455     0274  2A76               	goto	u658_20
  5456     0275                     u658_21:
  5457     0275  2A7E               	goto	i1l1082
  5458     0276                     u658_20:
  5459     0276                     i1l6791:
  5460                           
  5461                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 35:        (PORTBbits.RB4 == LOW) && (RB
      +                          4_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 36:         RB4_Flag = 1;
  5462     0276  3001               	movlw	1
  5463     0277  00FA               	movwf	_RB4_Flag	;volatile
  5464     0278                     i1l6793:
  5465                           
  5466                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 37:         RB4_ISR(1);
  5467     0278  3001               	movlw	1
  5468     0279  120A  158A  2440  120A  118A  	fcall	_RB4_ISR
  5469     027E                     i1l1082:	
  5470                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 38:     }
  5471                           
  5472                           
  5473                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 40:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5474     027E  1D8B               	btfss	11,3	;volatile
  5475     027F  2A81               	goto	u659_21
  5476     0280  2A82               	goto	u659_20
  5477     0281                     u659_21:
  5478     0281  2A9A               	goto	i1l1084
  5479     0282                     u659_20:
  5480     0282                     i1l6795:
  5481     0282  1C0B               	btfss	11,0	;volatile
  5482     0283  2A85               	goto	u660_21
  5483     0284  2A86               	goto	u660_20
  5484     0285                     u660_21:
  5485     0285  2A9A               	goto	i1l1084
  5486     0286                     u660_20:
  5487     0286                     i1l6797:
  5488     0286  1283               	bcf	3,5	;RP0=0, select bank0
  5489     0287  1303               	bcf	3,6	;RP1=0, select bank0
  5490     0288  1E86               	btfss	6,5	;volatile
  5491     0289  2A8B               	goto	u661_21
  5492     028A  2A8C               	goto	u661_20
  5493     028B                     u661_21:
  5494     028B  2A9A               	goto	i1l1084
  5495     028C                     u661_20:
  5496     028C                     i1l6799:
  5497     028C  1683               	bsf	3,5	;RP0=1, select bank1
  5498     028D  1303               	bcf	3,6	;RP1=0, select bank1
  5499     028E  0367               	decf	_RB5_Flag^(0+128),w	;volatile
  5500     028F  1D03               	btfss	3,2
  5501     0290  2A92               	goto	u662_21
  5502     0291  2A93               	goto	u662_20
  5503     0292                     u662_21:
  5504     0292  2A9A               	goto	i1l1084
  5505     0293                     u662_20:
  5506     0293                     i1l6801:
  5507                           
  5508                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 41:        (PORTBbits.RB5 == HIGH) && (R
      +                          B5_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 42:         RB5_Flag = 0;
  5509     0293  01E7               	clrf	_RB5_Flag^(0+128)	;volatile
  5510     0294                     i1l6803:
  5511                           
  5512                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 43:         RB5_ISR(0);
  5513     0294  3000               	movlw	0
  5514     0295  120A  158A  2449  120A  118A  	fcall	_RB5_ISR
  5515     029A                     i1l1084:	
  5516                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 44:     }
  5517                           
  5518                           
  5519                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 46:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5520     029A  1D8B               	btfss	11,3	;volatile
  5521     029B  2A9D               	goto	u663_21
  5522     029C  2A9E               	goto	u663_20
  5523     029D                     u663_21:
  5524     029D  2AB7               	goto	i1l1086
  5525     029E                     u663_20:
  5526     029E                     i1l6805:
  5527     029E  1C0B               	btfss	11,0	;volatile
  5528     029F  2AA1               	goto	u664_21
  5529     02A0  2AA2               	goto	u664_20
  5530     02A1                     u664_21:
  5531     02A1  2AB7               	goto	i1l1086
  5532     02A2                     u664_20:
  5533     02A2                     i1l6807:
  5534     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  5535     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  5536     02A4  1A86               	btfsc	6,5	;volatile
  5537     02A5  2AA7               	goto	u665_21
  5538     02A6  2AA8               	goto	u665_20
  5539     02A7                     u665_21:
  5540     02A7  2AB7               	goto	i1l1086
  5541     02A8                     u665_20:
  5542     02A8                     i1l6809:
  5543     02A8  1683               	bsf	3,5	;RP0=1, select bank1
  5544     02A9  1303               	bcf	3,6	;RP1=0, select bank1
  5545     02AA  0867               	movf	_RB5_Flag^(0+128),w	;volatile
  5546     02AB  1D03               	btfss	3,2
  5547     02AC  2AAE               	goto	u666_21
  5548     02AD  2AAF               	goto	u666_20
  5549     02AE                     u666_21:
  5550     02AE  2AB7               	goto	i1l1086
  5551     02AF                     u666_20:
  5552     02AF                     i1l6811:
  5553                           
  5554                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 47:        (PORTBbits.RB5 == LOW) && (RB
      +                          5_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 48:         RB5_Flag = 1;
  5555     02AF  3001               	movlw	1
  5556     02B0  00E7               	movwf	_RB5_Flag^(0+128)	;volatile
  5557     02B1                     i1l6813:
  5558                           
  5559                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 49:         RB5_ISR(1);
  5560     02B1  3001               	movlw	1
  5561     02B2  120A  158A  2449  120A  118A  	fcall	_RB5_ISR
  5562     02B7                     i1l1086:	
  5563                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 50:     }
  5564                           
  5565                           
  5566                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 52:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5567     02B7  1D8B               	btfss	11,3	;volatile
  5568     02B8  2ABA               	goto	u667_21
  5569     02B9  2ABB               	goto	u667_20
  5570     02BA                     u667_21:
  5571     02BA  2AD3               	goto	i1l1088
  5572     02BB                     u667_20:
  5573     02BB                     i1l6815:
  5574     02BB  1C0B               	btfss	11,0	;volatile
  5575     02BC  2ABE               	goto	u668_21
  5576     02BD  2ABF               	goto	u668_20
  5577     02BE                     u668_21:
  5578     02BE  2AD3               	goto	i1l1088
  5579     02BF                     u668_20:
  5580     02BF                     i1l6817:
  5581     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  5582     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  5583     02C1  1F06               	btfss	6,6	;volatile
  5584     02C2  2AC4               	goto	u669_21
  5585     02C3  2AC5               	goto	u669_20
  5586     02C4                     u669_21:
  5587     02C4  2AD3               	goto	i1l1088
  5588     02C5                     u669_20:
  5589     02C5                     i1l6819:
  5590     02C5  1683               	bsf	3,5	;RP0=1, select bank1
  5591     02C6  1303               	bcf	3,6	;RP1=0, select bank1
  5592     02C7  0366               	decf	_RB6_Flag^(0+128),w	;volatile
  5593     02C8  1D03               	btfss	3,2
  5594     02C9  2ACB               	goto	u670_21
  5595     02CA  2ACC               	goto	u670_20
  5596     02CB                     u670_21:
  5597     02CB  2AD3               	goto	i1l1088
  5598     02CC                     u670_20:
  5599     02CC                     i1l6821:
  5600                           
  5601                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 53:        (PORTBbits.RB6 == HIGH) && (R
      +                          B6_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 54:         RB6_Flag = 0;
  5602     02CC  01E6               	clrf	_RB6_Flag^(0+128)	;volatile
  5603     02CD                     i1l6823:
  5604                           
  5605                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 55:         RB6_ISR(0);
  5606     02CD  3000               	movlw	0
  5607     02CE  120A  158A  2452  120A  118A  	fcall	_RB6_ISR
  5608     02D3                     i1l1088:	
  5609                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 56:     }
  5610                           
  5611                           
  5612                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 58:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5613     02D3  1D8B               	btfss	11,3	;volatile
  5614     02D4  2AD6               	goto	u671_21
  5615     02D5  2AD7               	goto	u671_20
  5616     02D6                     u671_21:
  5617     02D6  2AF0               	goto	i1l1090
  5618     02D7                     u671_20:
  5619     02D7                     i1l6825:
  5620     02D7  1C0B               	btfss	11,0	;volatile
  5621     02D8  2ADA               	goto	u672_21
  5622     02D9  2ADB               	goto	u672_20
  5623     02DA                     u672_21:
  5624     02DA  2AF0               	goto	i1l1090
  5625     02DB                     u672_20:
  5626     02DB                     i1l6827:
  5627     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  5628     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  5629     02DD  1B06               	btfsc	6,6	;volatile
  5630     02DE  2AE0               	goto	u673_21
  5631     02DF  2AE1               	goto	u673_20
  5632     02E0                     u673_21:
  5633     02E0  2AF0               	goto	i1l1090
  5634     02E1                     u673_20:
  5635     02E1                     i1l6829:
  5636     02E1  1683               	bsf	3,5	;RP0=1, select bank1
  5637     02E2  1303               	bcf	3,6	;RP1=0, select bank1
  5638     02E3  0866               	movf	_RB6_Flag^(0+128),w	;volatile
  5639     02E4  1D03               	btfss	3,2
  5640     02E5  2AE7               	goto	u674_21
  5641     02E6  2AE8               	goto	u674_20
  5642     02E7                     u674_21:
  5643     02E7  2AF0               	goto	i1l1090
  5644     02E8                     u674_20:
  5645     02E8                     i1l6831:
  5646                           
  5647                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 59:        (PORTBbits.RB6 == LOW) && (RB
      +                          6_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 60:         RB6_Flag = 1;
  5648     02E8  3001               	movlw	1
  5649     02E9  00E6               	movwf	_RB6_Flag^(0+128)	;volatile
  5650     02EA                     i1l6833:
  5651                           
  5652                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 61:         RB6_ISR(1);
  5653     02EA  3001               	movlw	1
  5654     02EB  120A  158A  2452  120A  118A  	fcall	_RB6_ISR
  5655     02F0                     i1l1090:	
  5656                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 62:     }
  5657                           
  5658                           
  5659                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 64:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5660     02F0  1D8B               	btfss	11,3	;volatile
  5661     02F1  2AF3               	goto	u675_21
  5662     02F2  2AF4               	goto	u675_20
  5663     02F3                     u675_21:
  5664     02F3  2B0C               	goto	i1l1092
  5665     02F4                     u675_20:
  5666     02F4                     i1l6835:
  5667     02F4  1C0B               	btfss	11,0	;volatile
  5668     02F5  2AF7               	goto	u676_21
  5669     02F6  2AF8               	goto	u676_20
  5670     02F7                     u676_21:
  5671     02F7  2B0C               	goto	i1l1092
  5672     02F8                     u676_20:
  5673     02F8                     i1l6837:
  5674     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  5675     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  5676     02FA  1F86               	btfss	6,7	;volatile
  5677     02FB  2AFD               	goto	u677_21
  5678     02FC  2AFE               	goto	u677_20
  5679     02FD                     u677_21:
  5680     02FD  2B0C               	goto	i1l1092
  5681     02FE                     u677_20:
  5682     02FE                     i1l6839:
  5683     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  5684     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  5685     0300  0365               	decf	_RB7_Flag^(0+128),w	;volatile
  5686     0301  1D03               	btfss	3,2
  5687     0302  2B04               	goto	u678_21
  5688     0303  2B05               	goto	u678_20
  5689     0304                     u678_21:
  5690     0304  2B0C               	goto	i1l1092
  5691     0305                     u678_20:
  5692     0305                     i1l6841:
  5693                           
  5694                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 65:        (PORTBbits.RB7 == HIGH) && (R
      +                          B7_Flag == 1)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 66:         RB7_Flag = 0;
  5695     0305  01E5               	clrf	_RB7_Flag^(0+128)	;volatile
  5696     0306                     i1l6843:
  5697                           
  5698                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 67:         RB7_ISR(0);
  5699     0306  3000               	movlw	0
  5700     0307  120A  158A  245B  120A  118A  	fcall	_RB7_ISR
  5701     030C                     i1l1092:	
  5702                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 68:     }
  5703                           
  5704                           
  5705                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 70:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  5706     030C  1D8B               	btfss	11,3	;volatile
  5707     030D  2B0F               	goto	u679_21
  5708     030E  2B10               	goto	u679_20
  5709     030F                     u679_21:
  5710     030F  2B29               	goto	i1l1094
  5711     0310                     u679_20:
  5712     0310                     i1l6845:
  5713     0310  1C0B               	btfss	11,0	;volatile
  5714     0311  2B13               	goto	u680_21
  5715     0312  2B14               	goto	u680_20
  5716     0313                     u680_21:
  5717     0313  2B29               	goto	i1l1094
  5718     0314                     u680_20:
  5719     0314                     i1l6847:
  5720     0314  1283               	bcf	3,5	;RP0=0, select bank0
  5721     0315  1303               	bcf	3,6	;RP1=0, select bank0
  5722     0316  1B86               	btfsc	6,7	;volatile
  5723     0317  2B19               	goto	u681_21
  5724     0318  2B1A               	goto	u681_20
  5725     0319                     u681_21:
  5726     0319  2B29               	goto	i1l1094
  5727     031A                     u681_20:
  5728     031A                     i1l6849:
  5729     031A  1683               	bsf	3,5	;RP0=1, select bank1
  5730     031B  1303               	bcf	3,6	;RP1=0, select bank1
  5731     031C  0865               	movf	_RB7_Flag^(0+128),w	;volatile
  5732     031D  1D03               	btfss	3,2
  5733     031E  2B20               	goto	u682_21
  5734     031F  2B21               	goto	u682_20
  5735     0320                     u682_21:
  5736     0320  2B29               	goto	i1l1094
  5737     0321                     u682_20:
  5738     0321                     i1l6851:
  5739                           
  5740                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 71:        (PORTBbits.RB7 == LOW) && (RB
      +                          7_Flag == 0)){;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 72:         RB7_Flag = 1;
  5741     0321  3001               	movlw	1
  5742     0322  00E5               	movwf	_RB7_Flag^(0+128)	;volatile
  5743     0323                     i1l6853:
  5744                           
  5745                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 73:         RB7_ISR(1);
  5746     0323  3001               	movlw	1
  5747     0324  120A  158A  245B  120A  118A  	fcall	_RB7_ISR
  5748     0329                     i1l1094:	
  5749                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 74:     }
  5750                           
  5751                           
  5752                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 78:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  5753     0329  1683               	bsf	3,5	;RP0=1, select bank1
  5754     032A  1303               	bcf	3,6	;RP1=0, select bank1
  5755     032B  1F0C               	btfss	12,6	;volatile
  5756     032C  2B2E               	goto	u683_21
  5757     032D  2B2F               	goto	u683_20
  5758     032E                     u683_21:
  5759     032E  2B3A               	goto	i1l1096
  5760     032F                     u683_20:
  5761     032F                     i1l6855:
  5762     032F  1283               	bcf	3,5	;RP0=0, select bank0
  5763     0330  1303               	bcf	3,6	;RP1=0, select bank0
  5764     0331  1F0C               	btfss	12,6	;volatile
  5765     0332  2B34               	goto	u684_21
  5766     0333  2B35               	goto	u684_20
  5767     0334                     u684_21:
  5768     0334  2B3A               	goto	i1l1096
  5769     0335                     u684_20:
  5770     0335                     i1l6857:
  5771                           
  5772                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 79:         ADC_ISR();
  5773     0335  120A  158A  2410  120A  118A  	fcall	_ADC_ISR
  5774     033A                     i1l1096:	
  5775                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 80:     }
  5776                           
  5777                           
  5778                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 83:     if((1 == INTCONbits.TMR0IE) && (
      +                          1 == INTCONbits.TMR0IF)){
  5779     033A  1E8B               	btfss	11,5	;volatile
  5780     033B  2B3D               	goto	u685_21
  5781     033C  2B3E               	goto	u685_20
  5782     033D                     u685_21:
  5783     033D  2B47               	goto	i1l1098
  5784     033E                     u685_20:
  5785     033E                     i1l6859:
  5786     033E  1D0B               	btfss	11,2	;volatile
  5787     033F  2B41               	goto	u686_21
  5788     0340  2B42               	goto	u686_20
  5789     0341                     u686_21:
  5790     0341  2B47               	goto	i1l1098
  5791     0342                     u686_20:
  5792     0342                     i1l6861:
  5793                           
  5794                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 84:         TMR0_ISR();
  5795     0342  120A  158A  2430  120A  118A  	fcall	_TMR0_ISR
  5796     0347                     i1l1098:	
  5797                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 85:     }
  5798                           
  5799                           
  5800                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 87:     if((1 == PIE1bits.TMR1IE) && (1 
      +                          == PIR1bits.TMR1IF)){
  5801     0347  1683               	bsf	3,5	;RP0=1, select bank1
  5802     0348  1303               	bcf	3,6	;RP1=0, select bank1
  5803     0349  1C0C               	btfss	12,0	;volatile
  5804     034A  2B4C               	goto	u687_21
  5805     034B  2B4D               	goto	u687_20
  5806     034C                     u687_21:
  5807     034C  2B58               	goto	i1l1100
  5808     034D                     u687_20:
  5809     034D                     i1l6863:
  5810     034D  1283               	bcf	3,5	;RP0=0, select bank0
  5811     034E  1303               	bcf	3,6	;RP1=0, select bank0
  5812     034F  1C0C               	btfss	12,0	;volatile
  5813     0350  2B52               	goto	u688_21
  5814     0351  2B53               	goto	u688_20
  5815     0352                     u688_21:
  5816     0352  2B58               	goto	i1l1100
  5817     0353                     u688_20:
  5818     0353                     i1l6865:
  5819                           
  5820                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 88:         TMR1_ISR();
  5821     0353  120A  158A  2487  120A  118A  	fcall	_TMR1_ISR
  5822     0358                     i1l1100:	
  5823                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 89:     }
  5824                           
  5825                           
  5826                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 91:     if((1 == PIE1bits.TMR2IE) && (1 
      +                          == PIR1bits.TMR2IF)){
  5827     0358  1683               	bsf	3,5	;RP0=1, select bank1
  5828     0359  1303               	bcf	3,6	;RP1=0, select bank1
  5829     035A  1C8C               	btfss	12,1	;volatile
  5830     035B  2B5D               	goto	u689_21
  5831     035C  2B5E               	goto	u689_20
  5832     035D                     u689_21:
  5833     035D  2B69               	goto	i1l1102
  5834     035E                     u689_20:
  5835     035E                     i1l6867:
  5836     035E  1283               	bcf	3,5	;RP0=0, select bank0
  5837     035F  1303               	bcf	3,6	;RP1=0, select bank0
  5838     0360  1C8C               	btfss	12,1	;volatile
  5839     0361  2B63               	goto	u690_21
  5840     0362  2B64               	goto	u690_20
  5841     0363                     u690_21:
  5842     0363  2B69               	goto	i1l1102
  5843     0364                     u690_20:
  5844     0364                     i1l6869:
  5845                           
  5846                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 92:         TMR2_ISR();
  5847     0364  120A  118A  27F6  120A  118A  	fcall	_TMR2_ISR
  5848     0369                     i1l1102:	
  5849                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 93:     }
  5850                           
  5851                           
  5852                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 96:     if((1 == PIE1bits.TXIE) && (1 ==
      +                           PIR1bits.TXIF)){
  5853     0369  1683               	bsf	3,5	;RP0=1, select bank1
  5854     036A  1303               	bcf	3,6	;RP1=0, select bank1
  5855     036B  1E0C               	btfss	12,4	;volatile
  5856     036C  2B6E               	goto	u691_21
  5857     036D  2B6F               	goto	u691_20
  5858     036E                     u691_21:
  5859     036E  2B7A               	goto	i1l1104
  5860     036F                     u691_20:
  5861     036F                     i1l6871:
  5862     036F  1283               	bcf	3,5	;RP0=0, select bank0
  5863     0370  1303               	bcf	3,6	;RP1=0, select bank0
  5864     0371  1E0C               	btfss	12,4	;volatile
  5865     0372  2B74               	goto	u692_21
  5866     0373  2B75               	goto	u692_20
  5867     0374                     u692_21:
  5868     0374  2B7A               	goto	i1l1104
  5869     0375                     u692_20:
  5870     0375                     i1l6873:
  5871                           
  5872                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 97:         EUSART_TX_ISR();
  5873     0375  120A  118A  2003  120A  118A  	fcall	_EUSART_TX_ISR
  5874     037A                     i1l1104:	
  5875                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 98:     }
  5876                           
  5877                           
  5878                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 100:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  5879     037A  1683               	bsf	3,5	;RP0=1, select bank1
  5880     037B  1303               	bcf	3,6	;RP1=0, select bank1
  5881     037C  1E8C               	btfss	12,5	;volatile
  5882     037D  2B7F               	goto	u693_21
  5883     037E  2B80               	goto	u693_20
  5884     037F                     u693_21:
  5885     037F  2B8B               	goto	i1l1106
  5886     0380                     u693_20:
  5887     0380                     i1l6875:
  5888     0380  1283               	bcf	3,5	;RP0=0, select bank0
  5889     0381  1303               	bcf	3,6	;RP1=0, select bank0
  5890     0382  1E8C               	btfss	12,5	;volatile
  5891     0383  2B85               	goto	u694_21
  5892     0384  2B86               	goto	u694_20
  5893     0385                     u694_21:
  5894     0385  2B8B               	goto	i1l1106
  5895     0386                     u694_20:
  5896     0386                     i1l6877:
  5897                           
  5898                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 101:         EUSART_RX_ISR();
  5899     0386  120A  158A  253D  120A  118A  	fcall	_EUSART_RX_ISR
  5900     038B                     i1l1106:	
  5901                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 102:     }
  5902                           
  5903                           
  5904                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 106:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  5905     038B  1683               	bsf	3,5	;RP0=1, select bank1
  5906     038C  1303               	bcf	3,6	;RP1=0, select bank1
  5907     038D  1D8C               	btfss	12,3	;volatile
  5908     038E  2B90               	goto	u695_21
  5909     038F  2B91               	goto	u695_20
  5910     0390                     u695_21:
  5911     0390  2BA1               	goto	i1l1108
  5912     0391                     u695_20:
  5913     0391                     i1l6879:
  5914     0391  1283               	bcf	3,5	;RP0=0, select bank0
  5915     0392  1303               	bcf	3,6	;RP1=0, select bank0
  5916     0393  1D8C               	btfss	12,3	;volatile
  5917     0394  2B96               	goto	u696_21
  5918     0395  2B97               	goto	u696_20
  5919     0396                     u696_21:
  5920     0396  2BA1               	goto	i1l1108
  5921     0397                     u696_20:
  5922     0397                     i1l6881:
  5923                           
  5924                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 107:         MSSP_SPI_ISR();
  5925     0397  120A  158A  2479  120A  118A  	fcall	_MSSP_SPI_ISR
  5926     039C                     i1l6883:
  5927                           
  5928                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 108:         MSSP_I2C_ISR();
  5929     039C  120A  158A  2497  120A  118A  	fcall	_MSSP_I2C_ISR
  5930     03A1                     i1l1108:	
  5931                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 109:     }
  5932                           
  5933                           
  5934                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 111:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
  5935     03A1  1683               	bsf	3,5	;RP0=1, select bank1
  5936     03A2  1303               	bcf	3,6	;RP1=0, select bank1
  5937     03A3  1D8D               	btfss	13,3	;volatile
  5938     03A4  2BA6               	goto	u697_21
  5939     03A5  2BA7               	goto	u697_20
  5940     03A6                     u697_21:
  5941     03A6  2BB2               	goto	i1l1110
  5942     03A7                     u697_20:
  5943     03A7                     i1l6885:
  5944     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  5945     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  5946     03A9  1D8D               	btfss	13,3	;volatile
  5947     03AA  2BAC               	goto	u698_21
  5948     03AB  2BAD               	goto	u698_20
  5949     03AC                     u698_21:
  5950     03AC  2BB2               	goto	i1l1110
  5951     03AD                     u698_20:
  5952     03AD                     i1l6887:
  5953                           
  5954                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 112:         MSSP_I2C_BC_ISR();
  5955     03AD  120A  158A  2425  120A  118A  	fcall	_MSSP_I2C_BC_ISR
  5956     03B2                     i1l1110:	
  5957                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 113:     }
  5958                           
  5959                           
  5960                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 115:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  5961     03B2  1683               	bsf	3,5	;RP0=1, select bank1
  5962     03B3  1303               	bcf	3,6	;RP1=0, select bank1
  5963     03B4  1D8C               	btfss	12,3	;volatile
  5964     03B5  2BB7               	goto	u699_21
  5965     03B6  2BB8               	goto	u699_20
  5966     03B7                     u699_21:
  5967     03B7  2BC3               	goto	i1l1112
  5968     03B8                     u699_20:
  5969     03B8                     i1l6889:
  5970     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  5971     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  5972     03BA  1D8C               	btfss	12,3	;volatile
  5973     03BB  2BBD               	goto	u700_21
  5974     03BC  2BBE               	goto	u700_20
  5975     03BD                     u700_21:
  5976     03BD  2BC3               	goto	i1l1112
  5977     03BE                     u700_20:
  5978     03BE                     i1l6891:
  5979                           
  5980                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 116:         MSSP_SPI_ISR();
  5981     03BE  120A  158A  2479  120A  118A  	fcall	_MSSP_SPI_ISR
  5982     03C3                     i1l1112:	
  5983                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 117:     }
  5984                           
  5985                           
  5986                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 121:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  5987     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  5988     03C4  1303               	bcf	3,6	;RP1=0, select bank1
  5989     03C5  1D0C               	btfss	12,2	;volatile
  5990     03C6  2BC8               	goto	u701_21
  5991     03C7  2BC9               	goto	u701_20
  5992     03C8                     u701_21:
  5993     03C8  2BD4               	goto	i1l1114
  5994     03C9                     u701_20:
  5995     03C9                     i1l6893:
  5996     03C9  1283               	bcf	3,5	;RP0=0, select bank0
  5997     03CA  1303               	bcf	3,6	;RP1=0, select bank0
  5998     03CB  1D0C               	btfss	12,2	;volatile
  5999     03CC  2BCE               	goto	u702_21
  6000     03CD  2BCF               	goto	u702_20
  6001     03CE                     u702_21:
  6002     03CE  2BD4               	goto	i1l1114
  6003     03CF                     u702_20:
  6004     03CF                     i1l6895:
  6005                           
  6006                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 122:         CCP1_ISR();
  6007     03CF  120A  158A  2414  120A  118A  	fcall	_CCP1_ISR
  6008     03D4                     i1l1114:	
  6009                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 123:     }
  6010                           
  6011                           
  6012                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 125:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  6013     03D4  1683               	bsf	3,5	;RP0=1, select bank1
  6014     03D5  1303               	bcf	3,6	;RP1=0, select bank1
  6015     03D6  1C0D               	btfss	13,0	;volatile
  6016     03D7  2BD9               	goto	u703_21
  6017     03D8  2BDA               	goto	u703_20
  6018     03D9                     u703_21:
  6019     03D9  2BE5               	goto	i1l1117
  6020     03DA                     u703_20:
  6021     03DA                     i1l6897:
  6022     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  6023     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  6024     03DC  1C0D               	btfss	13,0	;volatile
  6025     03DD  2BDF               	goto	u704_21
  6026     03DE  2BE0               	goto	u704_20
  6027     03DF                     u704_21:
  6028     03DF  2BE5               	goto	i1l1117
  6029     03E0                     u704_20:
  6030     03E0                     i1l6899:
  6031                           
  6032                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 126:         CCP2_ISR();
  6033     03E0  120A  158A  2418  120A  118A  	fcall	_CCP2_ISR
  6034     03E5                     i1l1117:	
  6035                           ;MCAL_layer/Interrupt/mcal_interrupt_manager.c: 127:     }
  6036                           
  6037     03E5  0879               	movf	??_InterruptManager+3,w
  6038     03E6  00FF               	movwf	btemp+1
  6039     03E7  0878               	movf	??_InterruptManager+2,w
  6040     03E8  008A               	movwf	10
  6041     03E9  0877               	movf	??_InterruptManager+1,w
  6042     03EA  0084               	movwf	4
  6043     03EB  0E76               	swapf	??_InterruptManager,w
  6044     03EC  0083               	movwf	3
  6045     03ED  0EFE               	swapf	btemp,f
  6046     03EE  0E7E               	swapf	btemp,w
  6047     03EF  0009               	retfie
  6048     03F0                     __end_of_InterruptManager:
  6049                           
  6050                           	psect	intentry
  6051     0004                     __pintentry:	
  6052                           ;incstack = 0
  6053                           ; Regs used in _InterruptManager: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6054                           
  6055     0004                     interrupt_function:
  6056     007E                     saved_w	set	btemp
  6057     0004  00FE               	movwf	btemp
  6058     0005  0E03               	swapf	3,w
  6059     0006  00F6               	movwf	??_InterruptManager
  6060     0007  0804               	movf	4,w
  6061     0008  00F7               	movwf	??_InterruptManager+1
  6062     0009  080A               	movf	10,w
  6063     000A  00F8               	movwf	??_InterruptManager+2
  6064     000B  087F               	movf	btemp+1,w
  6065     000C  00F9               	movwf	??_InterruptManager+3
  6066     000D  120A  118A  2A3C   	ljmp	_InterruptManager
  6067                           
  6068                           	psect	text13
  6069     07F6                     __ptext13:	
  6070 ;; *************** function _TMR2_ISR *****************
  6071 ;; Defined at:
  6072 ;;		line 81 in file "MCAL_layer/timer2/hal_timr2.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;		None
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      void 
  6079 ;; Registers used:
  6080 ;;		wreg
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6086 ;;      Params:         0       0       0       0       0
  6087 ;;      Locals:         0       0       0       0       0
  6088 ;;      Temps:          0       0       0       0       0
  6089 ;;      Totals:         0       0       0       0       0
  6090 ;;Total ram usage:        0 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_InterruptManager
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099     07F6                     _TMR2_ISR:	
  6100                           ;psect for function _TMR2_ISR
  6101                           
  6102     07F6                     i1l5737:	
  6103                           ;incstack = 0
  6104                           ; Regs used in _TMR2_ISR: [wreg]
  6105                           
  6106                           
  6107                           ;MCAL_layer/timer2/hal_timr2.c: 82:     (PIR1bits.TMR2IF = 0);
  6108     07F6  1283               	bcf	3,5	;RP0=0, select bank0
  6109     07F7  1303               	bcf	3,6	;RP1=0, select bank0
  6110     07F8  108C               	bcf	12,1	;volatile
  6111     07F9                     i1l5739:
  6112                           
  6113                           ;MCAL_layer/timer2/hal_timr2.c: 83:     TMR2 = timer2_preload;
  6114     07F9  1683               	bsf	3,5	;RP0=1, select bank1
  6115     07FA  1303               	bcf	3,6	;RP1=0, select bank1
  6116     07FB  084C               	movf	_timer2_preload^(0+128),w
  6117     07FC  1283               	bcf	3,5	;RP0=0, select bank0
  6118     07FD  1303               	bcf	3,6	;RP1=0, select bank0
  6119     07FE  0091               	movwf	17	;volatile
  6120     07FF                     i1l1363:
  6121     07FF  0008               	return
  6122     0800                     __end_of_TMR2_ISR:
  6123                           
  6124                           	psect	text14
  6125     0C87                     __ptext14:	
  6126 ;; *************** function _TMR1_ISR *****************
  6127 ;; Defined at:
  6128 ;;		line 80 in file "MCAL_layer/timer1/hal_timr1.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, status,2
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6142 ;;      Params:         0       0       0       0       0
  6143 ;;      Locals:         0       0       0       0       0
  6144 ;;      Temps:          0       0       0       0       0
  6145 ;;      Totals:         0       0       0       0       0
  6146 ;;Total ram usage:        0 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_InterruptManager
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155     0C87                     _TMR1_ISR:	
  6156                           ;psect for function _TMR1_ISR
  6157                           
  6158     0C87                     i1l5729:	
  6159                           ;incstack = 0
  6160                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  6161                           
  6162                           
  6163                           ;MCAL_layer/timer1/hal_timr1.c: 81:     (PIR1bits.TMR1IF = 0);
  6164     0C87  1283               	bcf	3,5	;RP0=0, select bank0
  6165     0C88  1303               	bcf	3,6	;RP1=0, select bank0
  6166     0C89  100C               	bcf	12,0	;volatile
  6167     0C8A                     i1l5731:
  6168                           
  6169                           ;MCAL_layer/timer1/hal_timr1.c: 82:     TMR1H = (timer1_preload) >> 8;
  6170     0C8A  1683               	bsf	3,5	;RP0=1, select bank1
  6171     0C8B  1303               	bcf	3,6	;RP1=0, select bank1
  6172     0C8C  0845               	movf	(_timer1_preload+1)^(0+128),w	;volatile
  6173     0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  6174     0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  6175     0C8F  008F               	movwf	15	;volatile
  6176     0C90                     i1l5733:
  6177                           
  6178                           ;MCAL_layer/timer1/hal_timr1.c: 83:     TMR1L = (uint8)(timer1_preload);
  6179     0C90  1683               	bsf	3,5	;RP0=1, select bank1
  6180     0C91  1303               	bcf	3,6	;RP1=0, select bank1
  6181     0C92  0844               	movf	_timer1_preload^(0+128),w	;volatile
  6182     0C93  1283               	bcf	3,5	;RP0=0, select bank0
  6183     0C94  1303               	bcf	3,6	;RP1=0, select bank0
  6184     0C95  008E               	movwf	14	;volatile
  6185     0C96                     i1l1316:
  6186     0C96  0008               	return
  6187     0C97                     __end_of_TMR1_ISR:
  6188                           
  6189                           	psect	text15
  6190     0C30                     __ptext15:	
  6191 ;; *************** function _TMR0_ISR *****************
  6192 ;; Defined at:
  6193 ;;		line 70 in file "MCAL_layer/timer0/hal_timr0.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;		None
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6207 ;;      Params:         0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0
  6210 ;;      Totals:         0       0       0       0       0
  6211 ;;Total ram usage:        0 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_InterruptManager
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220     0C30                     _TMR0_ISR:	
  6221                           ;psect for function _TMR0_ISR
  6222                           
  6223     0C30                     i1l5723:	
  6224                           ;incstack = 0
  6225                           ; Regs used in _TMR0_ISR: [wreg]
  6226                           
  6227                           
  6228                           ;MCAL_layer/timer0/hal_timr0.c: 71:     (INTCONbits.TMR0IF = 0);
  6229     0C30  110B               	bcf	11,2	;volatile
  6230     0C31                     i1l5725:
  6231                           
  6232                           ;MCAL_layer/timer0/hal_timr0.c: 72:     TMR0 = timer0_preload;
  6233     0C31  1683               	bsf	3,5	;RP0=1, select bank1
  6234     0C32  1303               	bcf	3,6	;RP1=0, select bank1
  6235     0C33  0846               	movf	_timer0_preload^(0+128),w
  6236     0C34  1283               	bcf	3,5	;RP0=0, select bank0
  6237     0C35  1303               	bcf	3,6	;RP1=0, select bank0
  6238     0C36  0081               	movwf	1	;volatile
  6239     0C37                     i1l1256:
  6240     0C37  0008               	return
  6241     0C38                     __end_of_TMR0_ISR:
  6242                           
  6243                           	psect	text16
  6244     0C5B                     __ptext16:	
  6245 ;; *************** function _RB7_ISR *****************
  6246 ;; Defined at:
  6247 ;;		line 114 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  RB7_Source      1    wreg     unsigned char 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  RB7_Source      1    0[COMMON] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6261 ;;      Params:         0       0       0       0       0
  6262 ;;      Locals:         1       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0
  6264 ;;      Totals:         1       0       0       0       0
  6265 ;;Total ram usage:        1 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_InterruptManager
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274     0C5B                     _RB7_ISR:	
  6275                           ;psect for function _RB7_ISR
  6276                           
  6277                           
  6278                           ;incstack = 0
  6279                           ; Regs used in _RB7_ISR: [wreg+status,2+status,0]
  6280                           ;RB7_ISR@RB7_Source stored from wreg
  6281     0C5B  00F0               	movwf	RB7_ISR@RB7_Source
  6282     0C5C                     i1l5643:
  6283                           
  6284                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 116:     (INTCONbits.RBIF = 0);
  6285     0C5C  100B               	bcf	11,0	;volatile
  6286     0C5D                     i1l5645:
  6287                           
  6288                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 119:     if(0 == RB7_Source){
  6289     0C5D  0870               	movf	RB7_ISR@RB7_Source,w
  6290     0C5E  1D03               	btfss	3,2
  6291     0C5F  2C61               	goto	u522_21
  6292     0C60  2C62               	goto	u522_20
  6293     0C61                     u522_21:
  6294     0C61  2C63               	goto	i1l5651
  6295     0C62                     u522_20:
  6296     0C62  2C63               	goto	i1l986
  6297     0C63                     i1l5651:
  6298     0C63                     i1l986:
  6299     0C63  0008               	return
  6300     0C64                     __end_of_RB7_ISR:
  6301                           
  6302                           	psect	text17
  6303     0C52                     __ptext17:	
  6304 ;; *************** function _RB6_ISR *****************
  6305 ;; Defined at:
  6306 ;;		line 95 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  RB6_Source      1    wreg     unsigned char 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  RB6_Source      1    0[COMMON] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6320 ;;      Params:         0       0       0       0       0
  6321 ;;      Locals:         1       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0
  6323 ;;      Totals:         1       0       0       0       0
  6324 ;;Total ram usage:        1 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; This function calls:
  6327 ;;		Nothing
  6328 ;; This function is called by:
  6329 ;;		_InterruptManager
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333     0C52                     _RB6_ISR:	
  6334                           ;psect for function _RB6_ISR
  6335                           
  6336                           
  6337                           ;incstack = 0
  6338                           ; Regs used in _RB6_ISR: [wreg+status,2+status,0]
  6339                           ;RB6_ISR@RB6_Source stored from wreg
  6340     0C52  00F0               	movwf	RB6_ISR@RB6_Source
  6341     0C53                     i1l5629:
  6342                           
  6343                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCONbits.RBIF = 0);
  6344     0C53  100B               	bcf	11,0	;volatile
  6345     0C54                     i1l5631:
  6346                           
  6347                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 100:     if(0 == RB6_Source){
  6348     0C54  0870               	movf	RB6_ISR@RB6_Source,w
  6349     0C55  1D03               	btfss	3,2
  6350     0C56  2C58               	goto	u521_21
  6351     0C57  2C59               	goto	u521_20
  6352     0C58                     u521_21:
  6353     0C58  2C5A               	goto	i1l5637
  6354     0C59                     u521_20:
  6355     0C59  2C5A               	goto	i1l975
  6356     0C5A                     i1l5637:
  6357     0C5A                     i1l975:
  6358     0C5A  0008               	return
  6359     0C5B                     __end_of_RB6_ISR:
  6360                           
  6361                           	psect	text18
  6362     0C49                     __ptext18:	
  6363 ;; *************** function _RB5_ISR *****************
  6364 ;; Defined at:
  6365 ;;		line 76 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  RB5_Source      1    wreg     unsigned char 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  RB5_Source      1    0[COMMON] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6379 ;;      Params:         0       0       0       0       0
  6380 ;;      Locals:         1       0       0       0       0
  6381 ;;      Temps:          0       0       0       0       0
  6382 ;;      Totals:         1       0       0       0       0
  6383 ;;Total ram usage:        1 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; This function calls:
  6386 ;;		Nothing
  6387 ;; This function is called by:
  6388 ;;		_InterruptManager
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392     0C49                     _RB5_ISR:	
  6393                           ;psect for function _RB5_ISR
  6394                           
  6395                           
  6396                           ;incstack = 0
  6397                           ; Regs used in _RB5_ISR: [wreg+status,2+status,0]
  6398                           ;RB5_ISR@RB5_Source stored from wreg
  6399     0C49  00F0               	movwf	RB5_ISR@RB5_Source
  6400     0C4A                     i1l5615:
  6401                           
  6402                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 78:     (INTCONbits.RBIF = 0);
  6403     0C4A  100B               	bcf	11,0	;volatile
  6404     0C4B                     i1l5617:
  6405                           
  6406                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 81:     if(0 == RB5_Source){
  6407     0C4B  0870               	movf	RB5_ISR@RB5_Source,w
  6408     0C4C  1D03               	btfss	3,2
  6409     0C4D  2C4F               	goto	u520_21
  6410     0C4E  2C50               	goto	u520_20
  6411     0C4F                     u520_21:
  6412     0C4F  2C51               	goto	i1l5623
  6413     0C50                     u520_20:
  6414     0C50  2C51               	goto	i1l964
  6415     0C51                     i1l5623:
  6416     0C51                     i1l964:
  6417     0C51  0008               	return
  6418     0C52                     __end_of_RB5_ISR:
  6419                           
  6420                           	psect	text19
  6421     0C40                     __ptext19:	
  6422 ;; *************** function _RB4_ISR *****************
  6423 ;; Defined at:
  6424 ;;		line 57 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  RB4_Source      1    wreg     unsigned char 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  RB4_Source      1    0[COMMON] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6438 ;;      Params:         0       0       0       0       0
  6439 ;;      Locals:         1       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0
  6441 ;;      Totals:         1       0       0       0       0
  6442 ;;Total ram usage:        1 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_InterruptManager
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451     0C40                     _RB4_ISR:	
  6452                           ;psect for function _RB4_ISR
  6453                           
  6454                           
  6455                           ;incstack = 0
  6456                           ; Regs used in _RB4_ISR: [wreg+status,2+status,0]
  6457                           ;RB4_ISR@RB4_Source stored from wreg
  6458     0C40  00F0               	movwf	RB4_ISR@RB4_Source
  6459     0C41                     i1l5601:
  6460                           
  6461                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 59:     (INTCONbits.RBIF = 0);
  6462     0C41  100B               	bcf	11,0	;volatile
  6463     0C42                     i1l5603:
  6464                           
  6465                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 62:     if(0 == RB4_Source){
  6466     0C42  0870               	movf	RB4_ISR@RB4_Source,w
  6467     0C43  1D03               	btfss	3,2
  6468     0C44  2C46               	goto	u519_21
  6469     0C45  2C47               	goto	u519_20
  6470     0C46                     u519_21:
  6471     0C46  2C48               	goto	i1l5609
  6472     0C47                     u519_20:
  6473     0C47  2C48               	goto	i1l953
  6474     0C48                     i1l5609:
  6475     0C48                     i1l953:
  6476     0C48  0008               	return
  6477     0C49                     __end_of_RB4_ISR:
  6478                           
  6479                           	psect	text20
  6480     0C79                     __ptext20:	
  6481 ;; *************** function _MSSP_SPI_ISR *****************
  6482 ;; Defined at:
  6483 ;;		line 132 in file "MCAL_layer/spi/hal_spi.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;		None
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      void 
  6490 ;; Registers used:
  6491 ;;		None
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6497 ;;      Params:         0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0
  6500 ;;      Totals:         0       0       0       0       0
  6501 ;;Total ram usage:        0 bytes
  6502 ;; Hardware stack levels used: 1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_InterruptManager
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510     0C79                     _MSSP_SPI_ISR:	
  6511                           ;psect for function _MSSP_SPI_ISR
  6512                           
  6513     0C79                     i1l5763:	
  6514                           ;incstack = 0
  6515                           ; Regs used in _MSSP_SPI_ISR: []
  6516                           
  6517                           
  6518                           ;MCAL_layer/spi/hal_spi.c: 133:     (PIR1bits.SSPIF = 0);
  6519     0C79  1283               	bcf	3,5	;RP0=0, select bank0
  6520     0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  6521     0C7B  118C               	bcf	12,3	;volatile
  6522     0C7C                     i1l1219:	
  6523                           ;MCAL_layer/spi/hal_spi.c: 137:     }
  6524                           
  6525                           
  6526                           ;MCAL_layer/spi/hal_spi.c: 138:     if(SSPCONbits.WCOL == 1)
  6527     0C7C  1F94               	btfss	20,7	;volatile
  6528     0C7D  2C7F               	goto	u533_21
  6529     0C7E  2C80               	goto	u533_20
  6530     0C7F                     u533_21:
  6531     0C7F  2C81               	goto	i1l1220
  6532     0C80                     u533_20:
  6533     0C80                     i1l1221:
  6534                           
  6535                           ;MCAL_layer/spi/hal_spi.c: 141:         SSPCONbits.WCOL = 0;
  6536     0C80  1394               	bcf	20,7	;volatile
  6537     0C81                     i1l1220:	
  6538                           ;MCAL_layer/spi/hal_spi.c: 142:     }
  6539                           
  6540                           
  6541                           ;MCAL_layer/spi/hal_spi.c: 143:     if(SSPCONbits.SSPOV == 1)
  6542     0C81  1F14               	btfss	20,6	;volatile
  6543     0C82  2C84               	goto	u534_21
  6544     0C83  2C85               	goto	u534_20
  6545     0C84                     u534_21:
  6546     0C84  2C86               	goto	i1l1224
  6547     0C85                     u534_20:
  6548     0C85                     i1l1223:
  6549                           
  6550                           ;MCAL_layer/spi/hal_spi.c: 146:         SSPCONbits.SSPOV = 0;
  6551     0C85  1314               	bcf	20,6	;volatile
  6552     0C86                     i1l1224:
  6553     0C86  0008               	return
  6554     0C87                     __end_of_MSSP_SPI_ISR:
  6555                           
  6556                           	psect	text21
  6557     0C97                     __ptext21:	
  6558 ;; *************** function _MSSP_I2C_ISR *****************
  6559 ;; Defined at:
  6560 ;;		line 281 in file "MCAL_layer/i2c/hal_i2c.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6574 ;;      Params:         0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used: 1
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_InterruptManager
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587     0C97                     _MSSP_I2C_ISR:	
  6588                           ;psect for function _MSSP_I2C_ISR
  6589                           
  6590     0C97                     i1l5577:	
  6591                           ;incstack = 0
  6592                           ; Regs used in _MSSP_I2C_ISR: [wreg+status,2+status,0]
  6593                           
  6594                           
  6595                           ;MCAL_layer/i2c/hal_i2c.c: 283:     (PIR1bits.SSPIF = 0);
  6596     0C97  1283               	bcf	3,5	;RP0=0, select bank0
  6597     0C98  1303               	bcf	3,6	;RP1=0, select bank0
  6598     0C99  118C               	bcf	12,3	;volatile
  6599     0C9A                     i1l5579:
  6600                           
  6601                           ;MCAL_layer/i2c/hal_i2c.c: 284:     if(I2C_DefaultInterruptHandle_Req && SSPSTATbits.R_n
      +                          W == 1){
  6602     0C9A  1683               	bsf	3,5	;RP0=1, select bank1
  6603     0C9B  1303               	bcf	3,6	;RP1=0, select bank1
  6604     0C9C  085F               	movf	_I2C_DefaultInterruptHandle_Req^(0+128),w
  6605     0C9D  1903               	btfsc	3,2
  6606     0C9E  2CA0               	goto	u516_21
  6607     0C9F  2CA1               	goto	u516_20
  6608     0CA0                     u516_21:
  6609     0CA0  2CA2               	goto	i1l5583
  6610     0CA1                     u516_20:
  6611     0CA1                     i1l5581:
  6612                           
  6613                           ;MCAL_layer/i2c/hal_i2c.c: 285:         I2C_DefaultInterruptHandle_Req();
  6614     0CA1  0814               	movf	20,w	;volatile
  6615     0CA2                     i1l5583:
  6616                           
  6617                           ;MCAL_layer/i2c/hal_i2c.c: 287:     if(I2C_DefaultInterruptHandle_Rec && SSPSTATbits.R_n
      +                          W == 0){
  6618     0CA2  085E               	movf	_I2C_DefaultInterruptHandle_Rec^(0+128),w
  6619     0CA3  1903               	btfsc	3,2
  6620     0CA4  2CA6               	goto	u517_21
  6621     0CA5  2CA7               	goto	u517_20
  6622     0CA6                     u517_21:
  6623     0CA6  2CA8               	goto	i1l900
  6624     0CA7                     u517_20:
  6625     0CA7                     i1l5585:
  6626                           
  6627                           ;MCAL_layer/i2c/hal_i2c.c: 288:         I2C_DefaultInterruptHandle_Rec();
  6628     0CA7  0814               	movf	20,w	;volatile
  6629     0CA8                     i1l900:	
  6630                           ;MCAL_layer/i2c/hal_i2c.c: 289:     }
  6631                           
  6632                           
  6633                           ;MCAL_layer/i2c/hal_i2c.c: 290:     if(SSPCONbits.SSPOV == 1){
  6634     0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  6635     0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  6636     0CAA  1F14               	btfss	20,6	;volatile
  6637     0CAB  2CAD               	goto	u518_21
  6638     0CAC  2CAE               	goto	u518_20
  6639     0CAD                     u518_21:
  6640     0CAD  2CAF               	goto	i1l903
  6641     0CAE                     u518_20:
  6642     0CAE                     i1l5587:
  6643                           
  6644                           ;MCAL_layer/i2c/hal_i2c.c: 291:         SSPCONbits.SSPOV = 0;
  6645     0CAE  1314               	bcf	20,6	;volatile
  6646     0CAF                     i1l903:
  6647     0CAF  0008               	return
  6648     0CB0                     __end_of_MSSP_I2C_ISR:
  6649                           
  6650                           	psect	text22
  6651     0C25                     __ptext22:	
  6652 ;; *************** function _MSSP_I2C_BC_ISR *****************
  6653 ;; Defined at:
  6654 ;;		line 300 in file "MCAL_layer/i2c/hal_i2c.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		None
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6668 ;;      Params:         0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0
  6671 ;;      Totals:         0       0       0       0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used: 1
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_InterruptManager
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681     0C25                     _MSSP_I2C_BC_ISR:	
  6682                           ;psect for function _MSSP_I2C_BC_ISR
  6683                           
  6684     0C25                     i1l5591:	
  6685                           ;incstack = 0
  6686                           ; Regs used in _MSSP_I2C_BC_ISR: []
  6687                           
  6688                           
  6689                           ;MCAL_layer/i2c/hal_i2c.c: 302:     (PIR2bits.BCLIF = 0);
  6690     0C25  1283               	bcf	3,5	;RP0=0, select bank0
  6691     0C26  1303               	bcf	3,6	;RP1=0, select bank0
  6692     0C27  118D               	bcf	13,3	;volatile
  6693                           
  6694                           ;MCAL_layer/i2c/hal_i2c.c: 303:     SSPCONbits.WCOL = 0;
  6695     0C28  1394               	bcf	20,7	;volatile
  6696     0C29                     i1l907:
  6697     0C29  0008               	return
  6698     0C2A                     __end_of_MSSP_I2C_BC_ISR:
  6699                           
  6700                           	psect	text23
  6701     0C09                     __ptext23:	
  6702 ;; *************** function _INT0_ISR *****************
  6703 ;; Defined at:
  6704 ;;		line 45 in file "MCAL_layer/Interrupt/mcal_external_interrupt.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;		None
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		None
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6718 ;;      Params:         0       0       0       0       0
  6719 ;;      Locals:         0       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0
  6721 ;;      Totals:         0       0       0       0       0
  6722 ;;Total ram usage:        0 bytes
  6723 ;; Hardware stack levels used: 1
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_InterruptManager
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731     0C09                     _INT0_ISR:	
  6732                           ;psect for function _INT0_ISR
  6733                           
  6734     0C09                     i1l5595:	
  6735                           ;incstack = 0
  6736                           ; Regs used in _INT0_ISR: []
  6737                           
  6738                           
  6739                           ;MCAL_layer/Interrupt/mcal_external_interrupt.c: 47:     (INTCONbits.INTF = 0);
  6740     0C09  108B               	bcf	11,1	;volatile
  6741     0C0A                     i1l942:
  6742     0C0A  0008               	return
  6743     0C0B                     __end_of_INT0_ISR:
  6744                           
  6745                           	psect	text24
  6746     0003                     __ptext24:	
  6747 ;; *************** function _EUSART_TX_ISR *****************
  6748 ;; Defined at:
  6749 ;;		line 137 in file "MCAL_layer/usart/hal_usart.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;		None
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;		None
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  1    wreg      void 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2, status,0
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6763 ;;      Params:         0       0       0       0       0
  6764 ;;      Locals:         0       0       0       0       0
  6765 ;;      Temps:          0       0       0       0       0
  6766 ;;      Totals:         0       0       0       0       0
  6767 ;;Total ram usage:        0 bytes
  6768 ;; Hardware stack levels used: 1
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_InterruptManager
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776     0003                     _EUSART_TX_ISR:	
  6777                           ;psect for function _EUSART_TX_ISR
  6778                           
  6779     0003                     i1l5743:	
  6780                           ;incstack = 0
  6781                           ; Regs used in _EUSART_TX_ISR: [wreg+status,2+status,0]
  6782                           
  6783     0003                     i1l1470:
  6784     0003  0008               	return
  6785     0004                     __end_of_EUSART_TX_ISR:
  6786                           
  6787                           	psect	text25
  6788     0D3D                     __ptext25:	
  6789 ;; *************** function _EUSART_RX_ISR *****************
  6790 ;; Defined at:
  6791 ;;		line 144 in file "MCAL_layer/usart/hal_usart.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6805 ;;      Params:         0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0
  6808 ;;      Totals:         0       0       0       0       0
  6809 ;;Total ram usage:        0 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; Hardware stack levels required when called: 3
  6812 ;; This function calls:
  6813 ;;		NULL
  6814 ;;		_EUSART_FramingErrorHandler_Isr
  6815 ;;		_EUSART_OverrunErrorHandler_Isr
  6816 ;;		_USART_RX_Interrupt_Handler
  6817 ;; This function is called by:
  6818 ;;		_InterruptManager
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822     0D3D                     _EUSART_RX_ISR:	
  6823                           ;psect for function _EUSART_RX_ISR
  6824                           
  6825     0D3D                     i1l5747:	
  6826                           ;incstack = 0
  6827                           ; Regs used in _EUSART_RX_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6828                           
  6829                           
  6830                           ;MCAL_layer/usart/hal_usart.c: 146:     if(EUSART_RxInterruptHandler){
  6831     0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  6832     0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  6833     0D3F  084A               	movf	_EUSART_RxInterruptHandler^(0+128),w
  6834     0D40  1903               	btfsc	3,2
  6835     0D41  2D43               	goto	u528_21
  6836     0D42  2D44               	goto	u528_20
  6837     0D43                     u528_21:
  6838     0D43  2D4A               	goto	i1l5751
  6839     0D44                     u528_20:
  6840     0D44                     i1l5749:
  6841                           
  6842                           ;MCAL_layer/usart/hal_usart.c: 147:         EUSART_RxInterruptHandler();
  6843     0D44  084A               	movf	_EUSART_RxInterruptHandler^(0+128),w
  6844     0D45  120A  118A  2055  120A  158A  	fcall	i1fptable
  6845     0D4A                     i1l5751:	
  6846                           ;MCAL_layer/usart/hal_usart.c: 148:     }else { }
  6847                           
  6848                           
  6849                           ;MCAL_layer/usart/hal_usart.c: 149:     if(EUSART_FramingErrorHandler && (FERR == 1)){
  6850     0D4A  1683               	bsf	3,5	;RP0=1, select bank1
  6851     0D4B  1303               	bcf	3,6	;RP1=0, select bank1
  6852     0D4C  0849               	movf	_EUSART_FramingErrorHandler^(0+128),w
  6853     0D4D  1903               	btfsc	3,2
  6854     0D4E  2D50               	goto	u529_21
  6855     0D4F  2D51               	goto	u529_20
  6856     0D50                     u529_21:
  6857     0D50  2D5F               	goto	i1l5757
  6858     0D51                     u529_20:
  6859     0D51                     i1l5753:
  6860     0D51  1283               	bcf	3,5	;RP0=0, select bank0
  6861     0D52  1303               	bcf	3,6	;RP1=0, select bank0
  6862     0D53  1D18               	btfss	24,2	;volatile
  6863     0D54  2D56               	goto	u530_21
  6864     0D55  2D57               	goto	u530_20
  6865     0D56                     u530_21:
  6866     0D56  2D5F               	goto	i1l5757
  6867     0D57                     u530_20:
  6868     0D57                     i1l5755:
  6869                           
  6870                           ;MCAL_layer/usart/hal_usart.c: 150:         EUSART_FramingErrorHandler();
  6871     0D57  1683               	bsf	3,5	;RP0=1, select bank1
  6872     0D58  1303               	bcf	3,6	;RP1=0, select bank1
  6873     0D59  0849               	movf	_EUSART_FramingErrorHandler^(0+128),w
  6874     0D5A  120A  118A  2055  120A  158A  	fcall	i1fptable
  6875     0D5F                     i1l5757:	
  6876                           ;MCAL_layer/usart/hal_usart.c: 151:     }else { }
  6877                           
  6878                           
  6879                           ;MCAL_layer/usart/hal_usart.c: 152:     if(EUSART_OverrunErrorHandler && (OERR == 1)){
  6880     0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  6881     0D60  1303               	bcf	3,6	;RP1=0, select bank1
  6882     0D61  0848               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  6883     0D62  1903               	btfsc	3,2
  6884     0D63  2D65               	goto	u531_21
  6885     0D64  2D66               	goto	u531_20
  6886     0D65                     u531_21:
  6887     0D65  2D74               	goto	i1l1479
  6888     0D66                     u531_20:
  6889     0D66                     i1l5759:
  6890     0D66  1283               	bcf	3,5	;RP0=0, select bank0
  6891     0D67  1303               	bcf	3,6	;RP1=0, select bank0
  6892     0D68  1C98               	btfss	24,1	;volatile
  6893     0D69  2D6B               	goto	u532_21
  6894     0D6A  2D6C               	goto	u532_20
  6895     0D6B                     u532_21:
  6896     0D6B  2D74               	goto	i1l1479
  6897     0D6C                     u532_20:
  6898     0D6C                     i1l5761:
  6899                           
  6900                           ;MCAL_layer/usart/hal_usart.c: 153:         EUSART_OverrunErrorHandler();
  6901     0D6C  1683               	bsf	3,5	;RP0=1, select bank1
  6902     0D6D  1303               	bcf	3,6	;RP1=0, select bank1
  6903     0D6E  0848               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  6904     0D6F  120A  118A  2055  120A  158A  	fcall	i1fptable
  6905     0D74                     i1l1479:	
  6906                           ;MCAL_layer/usart/hal_usart.c: 154:     }else { }
  6907                           
  6908     0D74  0008               	return
  6909     0D75                     __end_of_EUSART_RX_ISR:
  6910                           
  6911                           	psect	text26
  6912     0CD4                     __ptext26:	
  6913 ;; *************** function _USART_RX_Interrupt_Handler *****************
  6914 ;; Defined at:
  6915 ;;		line 81 in file "main.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;		None
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  data            1    5[COMMON] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6929 ;;      Params:         0       0       0       0       0
  6930 ;;      Locals:         1       0       0       0       0
  6931 ;;      Temps:          0       0       0       0       0
  6932 ;;      Totals:         1       0       0       0       0
  6933 ;;Total ram usage:        1 bytes
  6934 ;; Hardware stack levels used: 1
  6935 ;; Hardware stack levels required when called: 2
  6936 ;; This function calls:
  6937 ;;		_HAL_USART_Read_Char
  6938 ;;		_HAL_USART_Write_Char
  6939 ;;		_HAL_USART_Write_String_ln
  6940 ;; This function is called by:
  6941 ;;		_main
  6942 ;;		_EUSART_RX_ISR
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946     0CD4                     _USART_RX_Interrupt_Handler:	
  6947                           ;psect for function _USART_RX_Interrupt_Handler
  6948                           
  6949     0CD4                     i1l5319:	
  6950                           ;incstack = 0
  6951                           ; Regs used in _USART_RX_Interrupt_Handler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  6952                           
  6953                           
  6954                           ;main.c: 83:     char data = Serial.read();
  6955     0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  6956     0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  6957     0CD6  083A               	movf	(low ((_Serial| 0+4)))^(0+128),w	;volatile
  6958     0CD7  120A  118A  2055  120A  158A  	fcall	i1fptable
  6959     0CDC  00F5               	movwf	USART_RX_Interrupt_Handler@data
  6960     0CDD                     i1l5321:
  6961                           
  6962                           ;main.c: 85:     if(!RB4)
  6963     0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  6964     0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  6965     0CDF  1A06               	btfsc	6,4	;volatile
  6966     0CE0  2CE2               	goto	u486_21
  6967     0CE1  2CE3               	goto	u486_20
  6968     0CE2                     u486_21:
  6969     0CE2  2CF8               	goto	i1l5329
  6970     0CE3                     u486_20:
  6971     0CE3                     i1l5323:
  6972                           
  6973                           ;main.c: 86:     {;main.c: 87:         PORTD = data;
  6974     0CE3  0875               	movf	USART_RX_Interrupt_Handler@data,w
  6975     0CE4  0088               	movwf	8	;volatile
  6976     0CE5                     i1l5325:
  6977                           
  6978                           ;main.c: 88:         Serial.write(data);
  6979     0CE5  0875               	movf	USART_RX_Interrupt_Handler@data,w
  6980     0CE6  00F0               	movwf	HAL_USART_Write_Char@character
  6981     0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  6982     0CE8  1303               	bcf	3,6	;RP1=0, select bank1
  6983     0CE9  0837               	movf	(low ((_Serial| 0+1)))^(0+128),w	;volatile
  6984     0CEA  120A  118A  2055  120A  158A  	fcall	i1fptable
  6985     0CEF                     i1l5327:
  6986                           
  6987                           ;main.c: 90:         PORTBbits.RB3 = 1;
  6988     0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  6989     0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  6990     0CF1  1586               	bsf	6,3	;volatile
  6991     0CF2                     i1l1518:	
  6992                           ;main.c: 91:         while(!RB4);
  6993                           
  6994     0CF2  1E06               	btfss	6,4	;volatile
  6995     0CF3  2CF5               	goto	u487_21
  6996     0CF4  2CF6               	goto	u487_20
  6997     0CF5                     u487_21:
  6998     0CF5  2CF2               	goto	i1l1518
  6999     0CF6                     u487_20:
  7000     0CF6                     i1l1520:
  7001                           
  7002                           ;main.c: 92:         PORTBbits.RB3 = 0;
  7003     0CF6  1186               	bcf	6,3	;volatile
  7004                           
  7005                           ;main.c: 93:     }
  7006     0CF7  2D04               	goto	i1l1522
  7007     0CF8                     i1l5329:
  7008                           
  7009                           ;main.c: 95:     {;main.c: 96:         Serial.println("ERROR");
  7010     0CF8  306C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  7011     0CF9  00F1               	movwf	HAL_USART_Write_String_ln@_data
  7012     0CFA  3080               	movlw	128
  7013     0CFB  00F2               	movwf	HAL_USART_Write_String_ln@_data+1
  7014     0CFC  1683               	bsf	3,5	;RP0=1, select bank1
  7015     0CFD  1303               	bcf	3,6	;RP1=0, select bank1
  7016     0CFE  0839               	movf	(low ((_Serial| 0+3)))^(0+128),w	;volatile
  7017     0CFF  120A  118A  2055  120A  158A  	fcall	i1fptable
  7018     0D04                     i1l1522:
  7019     0D04  0008               	return
  7020     0D05                     __end_of_USART_RX_Interrupt_Handler:
  7021                           
  7022                           	psect	text27
  7023     0D05                     __ptext27:	
  7024 ;; *************** function _HAL_USART_Write_String_ln *****************
  7025 ;; Defined at:
  7026 ;;		line 89 in file "MCAL_layer/usart/hal_usart.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  _data           2    1[COMMON] PTR unsigned char 
  7029 ;;		 -> STR_8(6), MPU6050_Read@buffer(40), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  char_counter    2    3[COMMON] unsigned short 
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      void 
  7034 ;; Registers used:
  7035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7041 ;;      Params:         2       0       0       0       0
  7042 ;;      Locals:         2       0       0       0       0
  7043 ;;      Temps:          0       0       0       0       0
  7044 ;;      Totals:         4       0       0       0       0
  7045 ;;Total ram usage:        4 bytes
  7046 ;; Hardware stack levels used: 1
  7047 ;; Hardware stack levels required when called: 1
  7048 ;; This function calls:
  7049 ;;		_HAL_USART_Write_Char
  7050 ;; This function is called by:
  7051 ;;		_HAL_USART_ASYNC_Init
  7052 ;;		_USART_RX_Interrupt_Handler
  7053 ;;		_MPU6050_Read
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057     0D05                     _HAL_USART_Write_String_ln:	
  7058                           ;psect for function _HAL_USART_Write_String_ln
  7059                           
  7060     0D05                     i1l4839:	
  7061                           ;incstack = 0
  7062 ;; using string table level
  7063                           ; Regs used in _HAL_USART_Write_String_ln: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  7064                           
  7065                           
  7066                           ;MCAL_layer/usart/hal_usart.c: 89: void HAL_USART_Write_String_ln(uint8 *_data);MCAL_lay
      +                          er/usart/hal_usart.c: 90: {;MCAL_layer/usart/hal_usart.c: 91:     uint16 char_counter = 
      +                          0;
  7067     0D05  01F3               	clrf	HAL_USART_Write_String_ln@char_counter
  7068     0D06  01F4               	clrf	HAL_USART_Write_String_ln@char_counter+1
  7069                           
  7070                           ;MCAL_layer/usart/hal_usart.c: 92:     for(char_counter=0; _data[char_counter]!='\0'; ch
      +                          ar_counter++){
  7071     0D07  01F3               	clrf	HAL_USART_Write_String_ln@char_counter
  7072     0D08  01F4               	clrf	HAL_USART_Write_String_ln@char_counter+1
  7073     0D09  2D22               	goto	i1l4845
  7074     0D0A                     i1l4841:
  7075                           
  7076                           ;MCAL_layer/usart/hal_usart.c: 93:         HAL_USART_Write_Char(_data[char_counter]);
  7077     0D0A  0873               	movf	HAL_USART_Write_String_ln@char_counter,w
  7078     0D0B  0771               	addwf	HAL_USART_Write_String_ln@_data,w
  7079     0D0C  0084               	movwf	4
  7080     0D0D  0872               	movf	HAL_USART_Write_String_ln@_data+1,w
  7081     0D0E  1803               	skipnc
  7082     0D0F  0A72               	incf	HAL_USART_Write_String_ln@_data+1,w
  7083     0D10  00FF               	movwf	btemp+1
  7084     0D11  120A  158A  2000  120A  158A  	fcall	stringtab
  7085     0D16  00F0               	movwf	HAL_USART_Write_Char@character
  7086     0D17  120A  158A  246E  120A  158A  	fcall	_HAL_USART_Write_Char
  7087     0D1C                     i1l4843:
  7088                           
  7089                           ;MCAL_layer/usart/hal_usart.c: 94:     }
  7090     0D1C  3001               	movlw	1
  7091     0D1D  07F3               	addwf	HAL_USART_Write_String_ln@char_counter,f
  7092     0D1E  1803               	skipnc
  7093     0D1F  0AF4               	incf	HAL_USART_Write_String_ln@char_counter+1,f
  7094     0D20  3000               	movlw	0
  7095     0D21  07F4               	addwf	HAL_USART_Write_String_ln@char_counter+1,f
  7096     0D22                     i1l4845:
  7097     0D22  0873               	movf	HAL_USART_Write_String_ln@char_counter,w
  7098     0D23  0771               	addwf	HAL_USART_Write_String_ln@_data,w
  7099     0D24  0084               	movwf	4
  7100     0D25  0872               	movf	HAL_USART_Write_String_ln@_data+1,w
  7101     0D26  1803               	skipnc
  7102     0D27  0A72               	incf	HAL_USART_Write_String_ln@_data+1,w
  7103     0D28  1283               	bcf	3,5	;RP0=0, select bank0
  7104     0D29  1303               	bcf	3,6	;RP1=0, select bank0
  7105     0D2A  00FF               	movwf	btemp+1
  7106     0D2B  120A  158A  2000  120A  158A  	fcall	stringtab
  7107     0D30  3A00               	xorlw	0
  7108     0D31  1D03               	skipz
  7109     0D32  2D34               	goto	u372_21
  7110     0D33  2D35               	goto	u372_20
  7111     0D34                     u372_21:
  7112     0D34  2D0A               	goto	i1l4841
  7113     0D35                     u372_20:
  7114     0D35                     i1l4847:
  7115                           
  7116                           ;MCAL_layer/usart/hal_usart.c: 95:     HAL_USART_Write_Char('\n');
  7117     0D35  300A               	movlw	10
  7118     0D36  00F0               	movwf	HAL_USART_Write_Char@character
  7119     0D37  120A  158A  246E  120A  158A  	fcall	_HAL_USART_Write_Char
  7120     0D3C                     i1l1450:
  7121     0D3C  0008               	return
  7122     0D3D                     __end_of_HAL_USART_Write_String_ln:
  7123                           
  7124                           	psect	text28
  7125     0C6E                     __ptext28:	
  7126 ;; *************** function _HAL_USART_Write_Char *****************
  7127 ;; Defined at:
  7128 ;;		line 77 in file "MCAL_layer/usart/hal_usart.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  character       1    0[COMMON] unsigned char 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7142 ;;      Params:         1       0       0       0       0
  7143 ;;      Locals:         0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0
  7145 ;;      Totals:         1       0       0       0       0
  7146 ;;Total ram usage:        1 bytes
  7147 ;; Hardware stack levels used: 1
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_HAL_USART_ASYNC_Init
  7152 ;;		_HAL_USART_Write_String
  7153 ;;		_HAL_USART_Write_String_ln
  7154 ;;		_USART_RX_Interrupt_Handler
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158     0C6E                     _HAL_USART_Write_Char:	
  7159                           ;psect for function _HAL_USART_Write_Char
  7160                           
  7161     0C6E                     i1l4817:	
  7162                           ;incstack = 0
  7163                           ; Regs used in _HAL_USART_Write_Char: [wreg]
  7164                           
  7165     0C6E                     i1l1435:	
  7166                           ;MCAL_layer/usart/hal_usart.c: 77: void HAL_USART_Write_Char(uint8 character);MCAL_layer
      +                          /usart/hal_usart.c: 78: {;MCAL_layer/usart/hal_usart.c: 79:     while(!(TXSTAbits.TRMT))
      +                          ;
  7167                           
  7168     0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  7169     0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  7170     0C70  1C98               	btfss	24,1	;volatile
  7171     0C71  2C73               	goto	u368_21
  7172     0C72  2C74               	goto	u368_20
  7173     0C73                     u368_21:
  7174     0C73  2C6E               	goto	i1l1435
  7175     0C74                     u368_20:
  7176     0C74                     i1l4819:
  7177                           
  7178                           ;MCAL_layer/usart/hal_usart.c: 80:     TXREG = character;
  7179     0C74  0870               	movf	HAL_USART_Write_Char@character,w
  7180     0C75  1283               	bcf	3,5	;RP0=0, select bank0
  7181     0C76  1303               	bcf	3,6	;RP1=0, select bank0
  7182     0C77  0099               	movwf	25	;volatile
  7183     0C78                     i1l1438:
  7184     0C78  0008               	return
  7185     0C79                     __end_of_HAL_USART_Write_Char:
  7186                           
  7187                           	psect	text29
  7188     0C64                     __ptext29:	
  7189 ;; *************** function _HAL_USART_Read_Char *****************
  7190 ;; Defined at:
  7191 ;;		line 69 in file "MCAL_layer/usart/hal_usart.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;		None
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  data            1    0[COMMON] unsigned char 
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  1    wreg      unsigned char 
  7198 ;; Registers used:
  7199 ;;		wreg
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7205 ;;      Params:         0       0       0       0       0
  7206 ;;      Locals:         1       0       0       0       0
  7207 ;;      Temps:          0       0       0       0       0
  7208 ;;      Totals:         1       0       0       0       0
  7209 ;;Total ram usage:        1 bytes
  7210 ;; Hardware stack levels used: 1
  7211 ;; This function calls:
  7212 ;;		Nothing
  7213 ;; This function is called by:
  7214 ;;		_HAL_USART_ASYNC_Init
  7215 ;;		_USART_RX_Interrupt_Handler
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219     0C64                     _HAL_USART_Read_Char:	
  7220                           ;psect for function _HAL_USART_Read_Char
  7221                           
  7222     0C64                     i1l4833:	
  7223                           ;incstack = 0
  7224                           ; Regs used in _HAL_USART_Read_Char: [wreg]
  7225                           
  7226                           
  7227                           ;MCAL_layer/usart/hal_usart.c: 71:     if(RCIF == 1)
  7228     0C64  1283               	bcf	3,5	;RP0=0, select bank0
  7229     0C65  1303               	bcf	3,6	;RP1=0, select bank0
  7230     0C66  1E8C               	btfss	12,5	;volatile
  7231     0C67  2C69               	goto	u371_21
  7232     0C68  2C6A               	goto	u371_20
  7233     0C69                     u371_21:
  7234     0C69  2C6D               	goto	i1l1432
  7235     0C6A                     u371_20:
  7236     0C6A                     i1l4835:
  7237                           
  7238                           ;MCAL_layer/usart/hal_usart.c: 72:     {;MCAL_layer/usart/hal_usart.c: 73:         uint8
      +                           data = RCREG;
  7239     0C6A  081A               	movf	26,w	;volatile
  7240     0C6B  00F0               	movwf	HAL_USART_Read_Char@data
  7241                           
  7242                           ;MCAL_layer/usart/hal_usart.c: 74:         return data;
  7243     0C6C  0870               	movf	HAL_USART_Read_Char@data,w
  7244     0C6D                     i1l1432:
  7245     0C6D  0008               	return
  7246     0C6E                     __end_of_HAL_USART_Read_Char:
  7247                           
  7248                           	psect	text30
  7249     0C2A                     __ptext30:	
  7250 ;; *************** function _EUSART_OverrunErrorHandler_Isr *****************
  7251 ;; Defined at:
  7252 ;;		line 162 in file "MCAL_layer/usart/hal_usart.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;		None
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1    wreg      void 
  7259 ;; Registers used:
  7260 ;;		status,2, status,0, pclath, cstack
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7266 ;;      Params:         0       0       0       0       0
  7267 ;;      Locals:         0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0
  7269 ;;      Totals:         0       0       0       0       0
  7270 ;;Total ram usage:        0 bytes
  7271 ;; Hardware stack levels used: 1
  7272 ;; Hardware stack levels required when called: 1
  7273 ;; This function calls:
  7274 ;;		_USART_ASYNC_RX_Restart
  7275 ;; This function is called by:
  7276 ;;		_HAL_USART_ASYNC_Init
  7277 ;;		_EUSART_RX_ISR
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281     0C2A                     _EUSART_OverrunErrorHandler_Isr:	
  7282                           ;psect for function _EUSART_OverrunErrorHandler_Isr
  7283                           
  7284     0C2A                     i1l5317:	
  7285                           ;incstack = 0
  7286                           ; Regs used in _EUSART_OverrunErrorHandler_Isr: [status,2+status,0+pclath+cstack]
  7287                           
  7288                           
  7289                           ;MCAL_layer/usart/hal_usart.c: 164:     USART_ASYNC_RX_Restart();
  7290     0C2A  120A  158A  2420  120A  158A  	fcall	_USART_ASYNC_RX_Restart
  7291     0C2F                     i1l1485:
  7292     0C2F  0008               	return
  7293     0C30                     __end_of_EUSART_OverrunErrorHandler_Isr:
  7294                           
  7295                           	psect	text31
  7296     0C20                     __ptext31:	
  7297 ;; *************** function _USART_ASYNC_RX_Restart *****************
  7298 ;; Defined at:
  7299 ;;		line 131 in file "MCAL_layer/usart/hal_usart.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		None
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7313 ;;      Params:         0       0       0       0       0
  7314 ;;      Locals:         0       0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0
  7316 ;;      Totals:         0       0       0       0       0
  7317 ;;Total ram usage:        0 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_EUSART_OverrunErrorHandler_Isr
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326     0C20                     _USART_ASYNC_RX_Restart:	
  7327                           ;psect for function _USART_ASYNC_RX_Restart
  7328                           
  7329     0C20                     i1l4849:	
  7330                           ;incstack = 0
  7331                           ; Regs used in _USART_ASYNC_RX_Restart: []
  7332                           
  7333                           
  7334                           ;MCAL_layer/usart/hal_usart.c: 133:     (RCSTAbits.CREN = 0);
  7335     0C20  1283               	bcf	3,5	;RP0=0, select bank0
  7336     0C21  1303               	bcf	3,6	;RP1=0, select bank0
  7337     0C22  1218               	bcf	24,4	;volatile
  7338                           
  7339                           ;MCAL_layer/usart/hal_usart.c: 134:     (RCSTAbits.CREN = 1);
  7340     0C23  1618               	bsf	24,4	;volatile
  7341     0C24                     i1l1465:
  7342     0C24  0008               	return
  7343     0C25                     __end_of_USART_ASYNC_RX_Restart:
  7344                           
  7345                           	psect	text32
  7346     0C1C                     __ptext32:	
  7347 ;; *************** function _EUSART_FramingErrorHandler_Isr *****************
  7348 ;; Defined at:
  7349 ;;		line 157 in file "MCAL_layer/usart/hal_usart.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  dummy           1    0        unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7363 ;;      Params:         0       0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0
  7366 ;;      Totals:         0       0       0       0       0
  7367 ;;Total ram usage:        0 bytes
  7368 ;; Hardware stack levels used: 1
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_HAL_USART_ASYNC_Init
  7373 ;;		_EUSART_RX_ISR
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377     0C1C                     _EUSART_FramingErrorHandler_Isr:	
  7378                           ;psect for function _EUSART_FramingErrorHandler_Isr
  7379                           
  7380     0C1C                     i1l5315:	
  7381                           ;incstack = 0
  7382                           ; Regs used in _EUSART_FramingErrorHandler_Isr: [wreg]
  7383                           
  7384     0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  7385     0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  7386     0C1E  081A               	movf	26,w	;volatile
  7387     0C1F                     i1l1482:
  7388     0C1F  0008               	return
  7389     0C20                     __end_of_EUSART_FramingErrorHandler_Isr:
  7390                           
  7391                           	psect	text33
  7392     0C18                     __ptext33:	
  7393 ;; *************** function _CCP2_ISR *****************
  7394 ;; Defined at:
  7395 ;;		line 247 in file "MCAL_layer/ccp/hal_ccp.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;		None
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		None
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7409 ;;      Params:         0       0       0       0       0
  7410 ;;      Locals:         0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0
  7412 ;;      Totals:         0       0       0       0       0
  7413 ;;Total ram usage:        0 bytes
  7414 ;; Hardware stack levels used: 1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_InterruptManager
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422     0C18                     _CCP2_ISR:	
  7423                           ;psect for function _CCP2_ISR
  7424                           
  7425     0C18                     i1l5509:	
  7426                           ;incstack = 0
  7427                           ; Regs used in _CCP2_ISR: []
  7428                           
  7429                           
  7430                           ;MCAL_layer/ccp/hal_ccp.c: 248:     (PIR2bits.CCP2IF = 0);
  7431     0C18  1283               	bcf	3,5	;RP0=0, select bank0
  7432     0C19  1303               	bcf	3,6	;RP1=0, select bank0
  7433     0C1A  100D               	bcf	13,0	;volatile
  7434     0C1B                     i1l562:
  7435     0C1B  0008               	return
  7436     0C1C                     __end_of_CCP2_ISR:
  7437                           
  7438                           	psect	text34
  7439     0C14                     __ptext34:	
  7440 ;; *************** function _CCP1_ISR *****************
  7441 ;; Defined at:
  7442 ;;		line 239 in file "MCAL_layer/ccp/hal_ccp.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;		None
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;		None
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      void 
  7449 ;; Registers used:
  7450 ;;		None
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7456 ;;      Params:         0       0       0       0       0
  7457 ;;      Locals:         0       0       0       0       0
  7458 ;;      Temps:          0       0       0       0       0
  7459 ;;      Totals:         0       0       0       0       0
  7460 ;;Total ram usage:        0 bytes
  7461 ;; Hardware stack levels used: 1
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_InterruptManager
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469     0C14                     _CCP1_ISR:	
  7470                           ;psect for function _CCP1_ISR
  7471                           
  7472     0C14                     i1l5503:	
  7473                           ;incstack = 0
  7474                           ; Regs used in _CCP1_ISR: []
  7475                           
  7476                           
  7477                           ;MCAL_layer/ccp/hal_ccp.c: 240:     (PIR1bits.CCP1IF = 0);
  7478     0C14  1283               	bcf	3,5	;RP0=0, select bank0
  7479     0C15  1303               	bcf	3,6	;RP1=0, select bank0
  7480     0C16  110C               	bcf	12,2	;volatile
  7481     0C17                     i1l557:
  7482     0C17  0008               	return
  7483     0C18                     __end_of_CCP1_ISR:
  7484                           
  7485                           	psect	text35
  7486     0C10                     __ptext35:	
  7487 ;; *************** function _ADC_ISR *****************
  7488 ;; Defined at:
  7489 ;;		line 214 in file "MCAL_layer/adc/hal_adc.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		None
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         0       0       0       0       0
  7504 ;;      Locals:         0       0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0
  7506 ;;      Totals:         0       0       0       0       0
  7507 ;;Total ram usage:        0 bytes
  7508 ;; Hardware stack levels used: 1
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_InterruptManager
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516     0C10                     _ADC_ISR:	
  7517                           ;psect for function _ADC_ISR
  7518                           
  7519     0C10                     i1l5499:	
  7520                           ;incstack = 0
  7521                           ; Regs used in _ADC_ISR: []
  7522                           
  7523                           
  7524                           ;MCAL_layer/adc/hal_adc.c: 216:     (PIR1bits.ADIF = 0);
  7525     0C10  1283               	bcf	3,5	;RP0=0, select bank0
  7526     0C11  1303               	bcf	3,6	;RP1=0, select bank0
  7527     0C12  130C               	bcf	12,6	;volatile
  7528     0C13                     i1l421:
  7529     0C13  0008               	return
  7530     0C14                     __end_of_ADC_ISR:
  7531     000C                     
  7532                           	psect	functab
  7533     0040                     __pfunctab:
  7534     0040                     __fptable:
  7535     0040                     fptable:
  7536     0040  00FF               	movwf	(btemp+1)& (0+127)
  7537     0041  3000               	movlw	high fptable
  7538     0042  008A               	movwf	10
  7539     0043  087F               	movf	(btemp+1)& (0+127),w
  7540     0044  0782               	addwf	2,f
  7541     0045                     fpbase:
  7542     0045  2845               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  7543     0046                     fp_u0:
  7544     0046  2846               	ljmp	fp_u0	; unused
  7545     0047                     fp_u1:
  7546     0047  2847               	ljmp	fp_u1	; unused
  7547     0048                     fp_u2:
  7548     0048  2848               	ljmp	fp_u2	; unused
  7549     0049                     fp_u3:
  7550     0049  2849               	ljmp	fp_u3	; unused
  7551     004A                     fp_u4:
  7552     004A  284A               	ljmp	fp_u4	; unused
  7553     004B                     fp_u5:
  7554     004B  284B               	ljmp	fp_u5	; unused
  7555     004C                     fp__HAL_USART_Set_Interrupt_Handler:
  7556     004C  120A  158A  2CB0   	ljmp	_HAL_USART_Set_Interrupt_Handler
  7557     004F                     fp_u9:
  7558     004F  284F               	ljmp	fp_u9	; unused
  7559     0050                     fp_u11:
  7560     0050  2850               	ljmp	fp_u11	; unused
  7561     0051                     fp_u12:
  7562     0051  2851               	ljmp	fp_u12	; unused
  7563     0052                     fp__HAL_USART_ASYNC_Init:
  7564     0052                     entry__HAL_USART_ASYNC_Init:
  7565     0052  120A  158A  2D75   	ljmp	_HAL_USART_ASYNC_Init
  7566     0055                     __end_of__fptable:
  7567     0055                     __i1fptable:
  7568     0055                     i1fptable:
  7569     0055  00FF               	movwf	(btemp+1)& (0+127)
  7570     0056  3000               	movlw	high i1fptable
  7571     0057  008A               	movwf	10
  7572     0058  087F               	movf	(btemp+1)& (0+127),w
  7573     0059  0782               	addwf	2,f
  7574     005A                     i1fpbase:
  7575     005A  285A               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  7576     005B                     fp__EUSART_FramingErrorHandler_Isr:
  7577     005B  120A  158A  2C1C   	ljmp	_EUSART_FramingErrorHandler_Isr
  7578     005E                     fp__EUSART_OverrunErrorHandler_Isr:
  7579     005E  120A  158A  2C2A   	ljmp	_EUSART_OverrunErrorHandler_Isr
  7580     0061                     fp__HAL_USART_Read_Char:
  7581     0061  120A  158A  2C64   	ljmp	_HAL_USART_Read_Char
  7582     0064                     fp__HAL_USART_Write_Char:
  7583     0064                     entry__HAL_USART_Write_Char:
  7584     0064  120A  158A  2C6E   	ljmp	_HAL_USART_Write_Char
  7585     0067                     fp__HAL_USART_Write_String_ln:
  7586     0067  120A  158A  2D05   	ljmp	_HAL_USART_Write_String_ln
  7587     006A                     fp__USART_RX_Interrupt_Handler:
  7588     006A  120A  158A  2CD4   	ljmp	_USART_RX_Interrupt_Handler
  7589     006D                     __end_of__i1fptable:
  7590     007E                     btemp	set	126	;btemp
  7591     007E                     wtemp0	set	126
  7592                           
  7593                           	psect	idloc
  7594                           
  7595                           ;Config register IDLOC0 @ 0x2000
  7596                           ;	unspecified, using default values
  7597     2000                     	org	8192
  7598     2000  3FFF               	dw	16383
  7599                           
  7600                           ;Config register IDLOC1 @ 0x2001
  7601                           ;	unspecified, using default values
  7602     2001                     	org	8193
  7603     2001  3FFF               	dw	16383
  7604                           
  7605                           ;Config register IDLOC2 @ 0x2002
  7606                           ;	unspecified, using default values
  7607     2002                     	org	8194
  7608     2002  3FFF               	dw	16383
  7609                           
  7610                           ;Config register IDLOC3 @ 0x2003
  7611                           ;	unspecified, using default values
  7612     2003                     	org	8195
  7613     2003  3FFF               	dw	16383
  7614                           
  7615                           	psect	config
  7616                           
  7617                           ;Config register CONFIG @ 0x2007
  7618                           ;	Oscillator Selection bits
  7619                           ;	FOSC = HS, HS oscillator
  7620                           ;	Watchdog Timer Enable bit
  7621                           ;	WDTE = OFF, WDT disabled
  7622                           ;	Power-up Timer Enable bit
  7623                           ;	PWRTE = OFF, PWRT disabled
  7624                           ;	Brown-out Reset Enable bit
  7625                           ;	BOREN = OFF, BOR disabled
  7626                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7627                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7628                           ;	Data EEPROM Memory Code Protection bit
  7629                           ;	CPD = OFF, Data EEPROM code protection off
  7630                           ;	Flash Program Memory Write Enable bits
  7631                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7632                           ;	In-Circuit Debugger Mode bit
  7633                           ;	DEBUG = 0x1, unprogrammed default
  7634                           ;	Flash Program Memory Code Protection bit
  7635                           ;	CP = OFF, Code protection off
  7636     2007                     	org	8199
  7637     2007  3F3A               	dw	16186

Data Sizes:
    Strings     97
    Constant    16
    Data        5
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     78      78
    BANK1            80      0      72
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_4bit_send_string_pos@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 0
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_send_string_pos@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_send_string_pos@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_send_string_pos@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_send_string_pos@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_send_string_pos@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_send_string_pos@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_send_string_pos@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_no_display(), 

    lcd_4bit_send_string_pos@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_display(), 

    lcd_4bit_send_string_pos@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_send_string_pos@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_blink(), 

    lcd_4bit_send_string_pos@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_send_string_pos@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_cursor(), 

    lcd_4bit_send_string_pos@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 0
		 -> lcd_4bit_send_string(), 

    lcd_4bit_send_string_pos@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 0
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_send_string_pos@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_send_string_pos@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_home(), 

    lcd_4bit_send_string_pos@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_clear(), 

    lcd_4bit_send_string_pos@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_send_char_data_pos@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 0
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_send_char_data_pos@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_send_char_data_pos@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_send_char_data_pos@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_send_char_data_pos@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_send_char_data_pos@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_send_char_data_pos@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_send_char_data_pos@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_no_display(), 

    lcd_4bit_send_char_data_pos@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_display(), 

    lcd_4bit_send_char_data_pos@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_send_char_data_pos@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_blink(), 

    lcd_4bit_send_char_data_pos@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_send_char_data_pos@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_cursor(), 

    lcd_4bit_send_char_data_pos@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 0
		 -> lcd_4bit_send_string(), 

    lcd_4bit_send_char_data_pos@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 0
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_send_char_data_pos@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_send_char_data_pos@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_home(), 

    lcd_4bit_send_char_data_pos@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 0
		 -> lcd_4bit_clear(), 

    lcd_4bit_send_char_data_pos@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    S3292$7$0	PTR FTN()void  size(1) Largest target is 0

    S1685$7$0	PTR unsigned char  size(1) Largest target is 0

    S1685$8$0	PTR unsigned char  size(1) Largest target is 0

    S1685$12$0	PTR FTN()void  size(1) Largest target is 0

    S1685$13$0	PTR FTN()void  size(1) Largest target is 0

    S3292$3$0	PTR unsigned char  size(1) Largest target is 0

    S3292$4$0	PTR unsigned char  size(1) Largest target is 0

    S75$1$0	PTR struct lcd_t size(1) Largest target is 0

    S75$2$0	PTR struct lcd_t size(1) Largest target is 0

    S75$3$0	PTR struct lcd_t size(1) Largest target is 26
		 -> LCD_Get_Instance@lcd_inst(BANK0[26]), 

    S75$4$0	PTR struct lcd_t size(1) Largest target is 0

    S75$5$1	PTR unsigned char  size(1) Largest target is 0

    S75$5$0	PTR struct lcd_t size(1) Largest target is 0

    S75$6$0	PTR struct lcd_t size(1) Largest target is 0

    S75$7$0	PTR struct lcd_t size(1) Largest target is 0

    S75$8$0	PTR struct lcd_t size(1) Largest target is 0

    S75$9$0	PTR struct lcd_t size(1) Largest target is 0

    S75$10$0	PTR struct lcd_t size(1) Largest target is 0

    S75$11$0	PTR struct lcd_t size(1) Largest target is 0

    S75$12$0	PTR struct lcd_t size(1) Largest target is 0

    S75$13$0	PTR struct lcd_t size(1) Largest target is 0

    S75$14$0	PTR struct lcd_t size(1) Largest target is 0

    S75$15$0	PTR struct lcd_t size(1) Largest target is 0

    S75$16$0	PTR struct lcd_t size(1) Largest target is 0

    S75$17$0	PTR struct lcd_t size(1) Largest target is 0

    S75$18$1	PTR const unsigned char  size(1) Largest target is 0

    S75$18$0	PTR struct lcd_t size(1) Largest target is 0

    S1565$2$0	PTR const struct keypad_t size(1) Largest target is 0

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[13]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[13]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S1768$7$1	PTR FTN()void  size(1) Largest target is 1
		 -> USART_RX_Interrupt_Handler(), 

    S1768$7$0	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    S1768$3$0	PTR unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[6]), MPU6050_Read@buffer(BANK0[40]), 

    S1768$2$0	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    ?_Keypad_Get_Instance.get_key	PTR FTN(PTR const struct keypad_t,)unsigned char  size(1) Largest target is 1
		 -> keypad_get_value(), 

    ?_LCD_Get_Instance.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    ?_LCD_Get_Instance.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    ?_LCD_Get_Instance.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    ?_LCD_Get_Instance.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    ?_LCD_Get_Instance.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    ?_LCD_Get_Instance.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    ?_LCD_Get_Instance.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    ?_LCD_Get_Instance.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    ?_LCD_Get_Instance.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    ?_LCD_Get_Instance.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    ?_LCD_Get_Instance.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    ?_LCD_Get_Instance.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    ?_LCD_Get_Instance.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    ?_LCD_Get_Instance.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    ?_LCD_Get_Instance.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    ?_LCD_Get_Instance.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    ?_LCD_Get_Instance.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    ?_LCD_Get_Instance.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    ?_LCD_Get_Instance.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    S4702__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> NULL(), 

    S4702__prbuf$ptr	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 40
		 -> MPU6050_Read@buffer(BANK0[40]), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> USART_RX_Interrupt_Handler(), NULL(), 

    HAL_USART_Set_Interrupt_Handler@InterruptHandler_Rx	PTR FTN()void  size(1) Largest target is 1
		 -> USART_RX_Interrupt_Handler(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    HAL_USART_Set_Interrupt_Handler@InterruptHandler_Tx	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    HAL_USART_Write_String_ln@_data	PTR unsigned char  size(2) Largest target is 40
		 -> STR_8(CODE[6]), MPU6050_Read@buffer(BANK0[40]), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(1) Largest target is 1
		 -> EUSART_OverrunErrorHandler_Isr(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(1) Largest target is 1
		 -> EUSART_FramingErrorHandler_Isr(), NULL(), 

    TMR2_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    TMR1_InterruptHandler	PTR FTN()volatile void  size(1) Largest target is 1
		 -> NULL(), 

    TMR0_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    SPI_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    SPI_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    SPI_DefaultInterruptHandle	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    S3292$set_interrupt_handler	PTR FTN(PTR FTN()void ,PTR FTN()void ,)void  size(1) Largest target is 1
		 -> MSSP_SPI_Interrupt_Configurations(), 

    Spi.set_interrupt_handler	PTR FTN(PTR FTN()void ,PTR FTN()void ,)void  size(1) Largest target is 1
		 -> MSSP_SPI_Interrupt_Configurations(), 

    S3292$available	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_SPI_Available(), 

    Spi.available	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_SPI_Available(), 

    S3292$read	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_SPI_Read_Char(), 

    Spi.read	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_SPI_Read_Char(), 

    S3292$println	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_SPI_Write_String_ln(), 

    Spi.println	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_SPI_Write_String_ln(), 

    S3292$print	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_SPI_Write_String(), 

    Spi.print	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_SPI_Write_String(), 

    S3292$write	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_SPI_Write_Char(), 

    Spi.write	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_SPI_Write_Char(), 

    S3292$end	PTR FTN()void  size(1) Largest target is 1
		 -> HAL_SPI_Deinit(), 

    Spi.end	PTR FTN()void  size(1) Largest target is 1
		 -> HAL_SPI_Deinit(), 

    S3292$begin	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> HAL_SPI_Init(), 

    Spi.begin	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> HAL_SPI_Init(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    I2C_DefaultInterruptHandle_Rec	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    I2C_DefaultInterruptHandle_Req	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    ADC_InterruptHandler	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), 

    S1768$set_interrupt_handler	PTR FTN(PTR FTN()void ,PTR FTN()void ,)void  size(1) Largest target is 1
		 -> HAL_USART_Set_Interrupt_Handler(), 

    Serial.set_interrupt_handler	PTR FTN(PTR FTN()void ,PTR FTN()void ,)void  size(1) Largest target is 1
		 -> HAL_USART_Set_Interrupt_Handler(), 

    S1768$available	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_USART_is_Available(), 

    Serial.available	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_USART_is_Available(), 

    S1768$end	PTR FTN()void  size(1) Largest target is 1
		 -> HAL_USART_ASYNC_DeInit(), 

    Serial.end	PTR FTN()void  size(1) Largest target is 1
		 -> HAL_USART_ASYNC_DeInit(), 

    S1768$read	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_USART_Read_Char(), 

    Serial.read	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_USART_Read_Char(), 

    S1768$println	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_USART_Write_String_ln(), 

    Serial.println	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_USART_Write_String_ln(), 

    S1768$print	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_USART_Write_String(), 

    Serial.print	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_USART_Write_String(), 

    S1768$write	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_USART_Write_Char(), 

    Serial.write	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_USART_Write_Char(), 

    S1768$begin	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> HAL_USART_ASYNC_Init(), 

    Serial.begin	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> HAL_USART_ASYNC_Init(), 

    S1685$onRequest	PTR FTN(PTR FTN()void ,)void  size(1) Largest target is 1
		 -> HAL_I2C_Set_Handler_Req(), 

    Wire.onRequest	PTR FTN(PTR FTN()void ,)void  size(1) Largest target is 1
		 -> HAL_I2C_Set_Handler_Req(), 

    S1685$onReceive	PTR FTN(PTR FTN()void ,)void  size(1) Largest target is 1
		 -> HAL_I2C_Set_Handler_Rec(), 

    Wire.onReceive	PTR FTN(PTR FTN()void ,)void  size(1) Largest target is 1
		 -> HAL_I2C_Set_Handler_Rec(), 

    S1685$requestFrom	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Request_From(), 

    Wire.requestFrom	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Request_From(), 

    S1685$available	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_available(), 

    Wire.available	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_available(), 

    S1685$read	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Read(), 

    Wire.read	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Read(), 

    S1685$println	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Println(), 

    Wire.println	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Println(), 

    S1685$print	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Print(), 

    Wire.print	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Print(), 

    S1685$write	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Write(), 

    Wire.write	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Write(), 

    S1685$restartTransmission	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Master_Send_Repeated_Start(), 

    Wire.restartTransmission	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Master_Send_Repeated_Start(), 

    S1685$endTransmission	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Master_Send_Stop(), 

    Wire.endTransmission	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Master_Send_Stop(), 

    S1685$beginTransmission	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Master_Send_Start(), 

    Wire.beginTransmission	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> HAL_I2C_Master_Send_Start(), 

    S1685$setClock	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> HAL_I2C_setClock(), 

    Wire.setClock	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> HAL_I2C_setClock(), 

    S1685$end	PTR FTN()void  size(1) Largest target is 1
		 -> HAL_I2C_DeInit(), 

    Wire.end	PTR FTN()void  size(1) Largest target is 1
		 -> HAL_I2C_DeInit(), 

    S1685$begin	PTR FTN(unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_I2C_Init(), 

    Wire.begin	PTR FTN(unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> HAL_I2C_Init(), 

    _keypad_obj.get_key	PTR FTN(PTR const struct keypad_t,)unsigned char  size(1) Largest target is 1
		 -> keypad_get_value(), 

    keypad_get_value@_keypad_obj.get_key	PTR FTN(PTR const struct keypad_t,)unsigned char  size(1) Largest target is 1
		 -> keypad_get_value(), 

    S1565$get_key	PTR FTN(PTR const struct keypad_t,)unsigned char  size(1) Largest target is 1
		 -> keypad_get_value(), 

    keypad_initialize@_keypad_obj.get_key	PTR FTN(PTR const struct keypad_t,)unsigned char  size(1) Largest target is 1
		 -> keypad_get_value(), 

    lcd_inst.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_inst.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_inst.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_inst.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_inst.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_inst.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_inst.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_inst.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_inst.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_inst.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_inst.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_inst.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_inst.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_inst.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_inst.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_inst.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_inst.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_inst.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_inst.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_rightToLeft@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_rightToLeft@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_rightToLeft@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_rightToLeft@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_rightToLeft@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_rightToLeft@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_rightToLeft@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_rightToLeft@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_rightToLeft@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_rightToLeft@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_rightToLeft@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_rightToLeft@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_rightToLeft@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_rightToLeft@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_rightToLeft@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_rightToLeft@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_rightToLeft@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_rightToLeft@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_rightToLeft@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_leftToRight@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_leftToRight@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_leftToRight@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_leftToRight@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_leftToRight@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_leftToRight@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_leftToRight@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_leftToRight@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_leftToRight@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_leftToRight@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_leftToRight@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_leftToRight@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_leftToRight@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_leftToRight@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_leftToRight@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_leftToRight@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_leftToRight@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_leftToRight@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_leftToRight@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_noAutoscroll@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_noAutoscroll@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_noAutoscroll@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_noAutoscroll@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_noAutoscroll@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_noAutoscroll@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_noAutoscroll@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_noAutoscroll@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_noAutoscroll@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_noAutoscroll@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_noAutoscroll@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_noAutoscroll@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_noAutoscroll@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_noAutoscroll@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_noAutoscroll@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_noAutoscroll@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_noAutoscroll@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_noAutoscroll@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_noAutoscroll@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_autoscroll@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_autoscroll@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_autoscroll@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_autoscroll@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_autoscroll@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_autoscroll@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_autoscroll@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_autoscroll@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_autoscroll@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_autoscroll@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_autoscroll@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_autoscroll@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_autoscroll@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_autoscroll@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_autoscroll@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_autoscroll@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_autoscroll@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_autoscroll@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_autoscroll@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_no_display@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_no_display@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_no_display@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_no_display@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_no_display@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_no_display@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_no_display@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_no_display@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_no_display@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_no_display@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_no_display@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_no_display@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_no_display@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_no_display@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_no_display@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_no_display@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_no_display@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_no_display@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_no_display@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_display@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_display@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_display@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_display@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_display@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_display@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_display@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_display@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_display@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_display@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_display@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_display@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_display@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_display@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_display@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_display@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_display@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_display@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_display@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_no_blink@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_no_blink@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_no_blink@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_no_blink@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_no_blink@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_no_blink@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_no_blink@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_no_blink@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_no_blink@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_no_blink@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_no_blink@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_no_blink@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_no_blink@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_no_blink@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_no_blink@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_no_blink@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_no_blink@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_no_blink@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_no_blink@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_blink@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_blink@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_blink@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_blink@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_blink@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_blink@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_blink@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_blink@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_blink@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_blink@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_blink@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_blink@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_blink@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_blink@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_blink@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_blink@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_blink@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_blink@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_blink@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_no_cursor@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_no_cursor@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_no_cursor@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_no_cursor@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_no_cursor@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_no_cursor@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_no_cursor@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_no_cursor@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_no_cursor@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_no_cursor@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_no_cursor@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_no_cursor@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_no_cursor@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_no_cursor@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_no_cursor@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_no_cursor@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_no_cursor@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_no_cursor@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_no_cursor@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_cursor@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_cursor@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_cursor@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_cursor@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_cursor@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_cursor@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_cursor@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_cursor@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_cursor@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_cursor@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_cursor@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_cursor@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_cursor@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_cursor@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_cursor@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_cursor@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_cursor@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_cursor@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_cursor@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_send_enable_signal@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_send_enable_signal@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_send_enable_signal@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_send_enable_signal@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_send_enable_signal@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_send_enable_signal@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_send_enable_signal@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_send_enable_signal@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_send_enable_signal@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_send_enable_signal@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_send_enable_signal@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_send_enable_signal@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_send_enable_signal@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_send_enable_signal@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_send_enable_signal@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_send_enable_signal@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_send_enable_signal@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_send_enable_signal@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_send_enable_signal@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_send_4bits@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_send_4bits@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_send_4bits@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_send_4bits@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_send_4bits@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_send_4bits@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_send_4bits@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_send_4bits@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_send_4bits@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_send_4bits@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_send_4bits@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_send_4bits@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_send_4bits@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_send_4bits@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_send_4bits@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_send_4bits@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_send_4bits@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_send_4bits@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_send_4bits@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_send_char_data@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_send_char_data@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_send_char_data@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_send_char_data@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_send_char_data@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_send_char_data@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_send_char_data@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_send_char_data@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_send_char_data@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_send_char_data@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_send_char_data@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_send_char_data@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_send_char_data@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_send_char_data@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_send_char_data@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_send_char_data@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_send_char_data@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_send_char_data@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_send_char_data@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_send_command@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_send_command@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_send_command@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_send_command@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_send_command@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_send_command@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_send_command@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_send_command@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_send_command@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_send_command@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_send_command@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_send_command@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_send_command@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_send_command@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_send_command@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_send_command@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_send_command@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_send_command@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_send_command@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    S75$createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    lcd_4bit_intialize@lcd.createChar	PTR FTN(PTR struct lcd_t,PTR const unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_save_custom_char(), 

    S75$rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    lcd_4bit_intialize@lcd.rightToLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_rightToLeft(), 

    S75$leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    lcd_4bit_intialize@lcd.leftToRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_leftToRight(), 

    S75$noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    lcd_4bit_intialize@lcd.noAutoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_noAutoscroll(), 

    S75$autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    lcd_4bit_intialize@lcd.autoscroll	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_autoscroll(), 

    S75$scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    lcd_4bit_intialize@lcd.scrollDisplayRight	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayRight(), 

    S75$scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    lcd_4bit_intialize@lcd.scrollDisplayLeft	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_scrollDisplayLeft(), 

    S75$noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    lcd_4bit_intialize@lcd.noDisplay	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_display(), 

    S75$display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    lcd_4bit_intialize@lcd.display	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_display(), 

    S75$noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    lcd_4bit_intialize@lcd.noBlink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_blink(), 

    S75$blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    lcd_4bit_intialize@lcd.blink	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_blink(), 

    S75$noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    lcd_4bit_intialize@lcd.noCursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_no_cursor(), 

    S75$cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    lcd_4bit_intialize@lcd.cursor	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_cursor(), 

    S75$print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    lcd_4bit_intialize@lcd.print	PTR FTN(PTR struct lcd_t,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_string(), 

    S75$write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    lcd_4bit_intialize@lcd.write	PTR FTN(PTR struct lcd_t,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_send_char_data(), 

    S75$setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    lcd_4bit_intialize@lcd.setCursor	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 1
		 -> lcd_4bit_set_cursor(), 

    S75$home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    lcd_4bit_intialize@lcd.home	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_home(), 

    S75$clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    lcd_4bit_intialize@lcd.clear	PTR FTN(PTR struct lcd_t,)void  size(1) Largest target is 1
		 -> lcd_4bit_clear(), 

    S75$begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0

    lcd_4bit_intialize@lcd.begin	PTR FTN(PTR struct lcd_t,unsigned char ,unsigned char ,)void  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptManager in COMMON

    _EUSART_RX_ISR->_USART_RX_Interrupt_Handler
    _USART_RX_Interrupt_Handler->_HAL_USART_Write_String_ln
    _HAL_USART_Write_String_ln->_HAL_USART_Write_Char

Critical Paths under _main in BANK0

    _main->_HAL_USART_ASYNC_Init
    _HAL_USART_ASYNC_Init->_USART_Baud_Rate_Calculation
    _USART_Baud_Rate_Calculation->___fldiv
    ___xxtofl->___lldiv
    ___fldiv->___xxtofl
    _GPIO_Init->_digitalWrite
    _GPIO_Init->_pinMode

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30591
                          _GPIO_Init
               _HAL_USART_ASYNC_Init
    _HAL_USART_Set_Interrupt_Handler *
 ---------------------------------------------------------------------------------
 (1) _HAL_USART_Set_Interrupt_Handler                      2     0      2     216
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _HAL_USART_ASYNC_Init                                 4     0      4   14095
                                             74 BANK0      4     0      4
        _USART_Baud_Rate_Calculation
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _USART_Baud_Rate_Calculation                         20    16      4    3530
                                             54 BANK0     20    16      4
                            ___fldiv
                             ___flge
                            ___fltol
                            ___lldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     678
                                             14 BANK0     14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     340
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     407
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     360
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1477
                                             28 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0   16280
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              5     3      2   10454
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         5     3      2    5826
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     4     4      0    1092
                                              6 COMMON     4     4      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MSSP_SPI_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_RX_ISR                                        0     0      0     916
                                NULL *
     _EUSART_FramingErrorHandler_Isr *
     _EUSART_OverrunErrorHandler_Isr *
         _USART_RX_Interrupt_Handler *
 ---------------------------------------------------------------------------------
 (6) _USART_RX_Interrupt_Handler                           1     1      0     915
                                              5 COMMON     1     1      0
                _HAL_USART_Read_Char *
               _HAL_USART_Write_Char *
          _HAL_USART_Write_String_ln *
 ---------------------------------------------------------------------------------
 (7) _HAL_USART_Write_String_ln                            4     2      2     533
                                              1 COMMON     4     2      2
               _HAL_USART_Write_Char
 ---------------------------------------------------------------------------------
 (8) _HAL_USART_Write_Char                                 1     0      1     314
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _HAL_USART_Read_Char                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_OverrunErrorHandler_Isr                       0     0      0       0
             _USART_ASYNC_RX_Restart
 ---------------------------------------------------------------------------------
 (7) _USART_ASYNC_RX_Restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_FramingErrorHandler_Isr                       1     1      0       1
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Init
     _digitalWrite
     _pinMode
   _HAL_USART_ASYNC_Init
     _USART_Baud_Rate_Calculation
       ___fldiv
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flge
       ___fltol
       ___lldiv
       ___xxtofl
     _pinMode
   _HAL_USART_Set_Interrupt_Handler *

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ISR
     NULL(Fake) *
     _EUSART_FramingErrorHandler_Isr *
     _EUSART_OverrunErrorHandler_Isr *
       _USART_ASYNC_RX_Restart
     _USART_RX_Interrupt_Handler *
       _HAL_USART_Read_Char *
       _HAL_USART_Write_Char *
       _HAL_USART_Write_String_ln *
         _HAL_USART_Write_Char
   _EUSART_TX_ISR
   _INT0_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A2      12        0.0%
ABS                  0      0      A2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 27 17:19:17 2024

                                ??_InterruptManager 0076                                        ___fldiv@aexp 0055  
                                      ___fldiv@bexp 0054                                                   pc 0002  
                                      ___fldiv@sign 004D                                         _SSPSTATbits 0094  
                                                _BF 04A0                                                  fsr 0004  
                                               l666 062C                                                 l688 06FF  
                                               _RB4 0034                                                 _PR2 0092  
                                               _Spi 00AE                           _RB5_InterruptHandler_HIGH 00D9  
                                   __end_of_ADC_ISR 0C14                                                 fsr0 0004  
                                               indf 0000                        ??_USART_RX_Interrupt_Handler 0075  
                                   __end_of_RB4_ISR 0C49                                     __end_of_RB5_ISR 0C52  
                                   __end_of_RB6_ISR 0C5B                                     __end_of_RB7_ISR 0C64  
                                      ___fltol@exp1 0029                                _lcd_4bit_rightToLeft 0000  
                                              l2041 0F6A                                                l2043 0FFF  
                                              l2054 0FC9                                                l2055 0FD5  
                                              l1514 07D0                                                l1418 0DC1  
                                              l1508 07F2                                                l1509 07F2  
                                              l1462 0545                                                l1455 0CD3  
                                              l5001 0123                                                l1801 0E8C  
                                              l5011 0155                                                l5003 0135  
                                              l1804 0EA1                                                l1644 0E29  
                                              l5021 0176                                                l5013 0156  
                                              l5005 0139                                                l5101 0F92  
                                              l5031 018F                                                l5023 0178  
                                              l5015 0164                                                l5007 013A  
                                              l5111 0FBF                                                l5103 0F96  
                                              l5201 0644                                                l5041 01B2  
                                              l5025 0181                                                l5033 0195  
                                              l5009 0143                                                l5017 0168  
                                              l5121 0FF2                                                l5113 0FC3  
                                              l5105 0FA4                                                l5203 0652  
                                              l5211 067C                                                l5051 01D1  
                                              l5035 0199                                                l5027 0185  
                                              l5019 016E                                                l5123 0FF6  
                                              l5115 0FCD                                                l5107 0FAD  
                                              l5221 06B9                                                l5205 0660  
                                              l5213 0695                                                l5141 0593  
                                              l5133 054F                                                l5061 021A  
                                              l5053 01EA                                                l5045 01BA  
                                              l5037 019A                                                l5029 0186  
                                              l5125 0FF7                                                l5117 0FD7  
                                              l5109 0FB4                                                l5301 040C  
                                              l1782 0EC0                                                l5223 06C8  
                                              l5207 066E                                                l5151 05C3  
                                              l5135 0560                                                l5071 0231  
                                              l5063 021E                                                l5047 01BF  
                                              l5055 01F0                                                l5039 019E  
                                              l5119 0FED                                                l5311 0515  
                                              l5303 040F                                                l5225 06D7  
                                              l5217 069B                                                l5153 05D3  
                                              l5137 0571                                                l5145 05A4  
                                              l5129 0549                                                l5073 0235  
                                              l5065 0226                                                l5057 01FD  
                                              l5049 01CD                                                l1785 0F2C  
                                              l5081 0F49                                                l5313 0530  
                                              l5305 047F                                                l1786 0F45  
                                              l1794 0EA1                                                l5219 06AA  
                                              l5155 05E3                                                l5163 0613  
                                              l5139 0582                                                l5147 05BD  
                                              l5067 022B                                                l5059 020B  
                                              l5083 0F4E                                                l5307 0493  
                                              l5229 06E6                                                l5157 05F3  
                                              l5069 022F                                                l1973 01B5  
                                              l1957 00C3                                                l5093 0F7B  
                                              l5085 0F52                                                l5309 0496  
                                              l5159 0603                                                l1959 023B  
                                              l5095 0F7E                                                l5087 0F62  
                                              l5097 0F82                                                l5089 0F72  
                                              l5195 0630                                                l1979 0227  
                                              l5099 0F8B                                                l7221 05AC  
                                              l5199 0636                                                l7223 061B  
                                              l4911 0E5C                                                l4903 0E3E  
                                              l7135 07D1                                                l7225 0684  
                                              l4921 0E71                                                l4913 0E60  
                                              l4905 0E51                                                l5297 03F0  
                                              l5801 0DB8                                                l7137 07E0  
                                              l7227 06EE                                                l4931 0E91  
                                              l4923 0E7A                                                l4907 0E52  
                                              l4851 0DC2                                                l5299 03FA  
                                              l5803 0DBA                                                l5811 0CB7  
                                              l7139 07ED                                                l5821 0700  
                                              l4941 007A                                                l4933 0E96  
                                              l4909 0E5A                                                l4861 0DE8  
                                              l4853 0DD4                                                l5805 0DBC  
                                              l5813 0CBC                                                l4951 008E  
                                              l4943 007B                                                l4935 006D  
                                              l4919 0E68                                                l4871 0E1B  
                                              l4863 0DF1                                                l4855 0DD7  
                                              l5807 0DBE                                                l5815 0CC2  
                                              l4961 00A5                                                l4945 0080  
                                              l4953 0090                                                l4937 0072  
                                              l4881 0ED4                                                l4929 0E81  
                                              l4865 0E03                                                l4857 0DE0  
                                              l4873 0E21                                                l5817 0CC8  
                                              l5809 0CB0                                                l4971 00B9  
                                              l4963 00A6                                                l4955 0098  
                                              l4947 0085                                                l4939 0076  
                                              l4891 0F42                                                l4883 0EDC  
                                              l4867 0E11                                                l4859 0DE4  
                                              l5771 0D75                                                l5819 0CCD  
                                              l4965 00AB                                                l4973 00BB  
                                              l4957 009D                                                l4949 008D  
                                              l4893 0F44                                                l4885 0EE0  
                                              l4877 0EA2                                                l4869 0E12  
                                              l5781 0D91                                                l5773 0D7B  
                                              l4991 0104                                                l4975 00CB  
                                              l4983 00E4                                                l4967 00B0  
                                              l4959 00A1                                                l4887 0F04  
                                              l4879 0EB8                                                l5791 0DAE  
                                              l5783 0D92                                                l5775 0D8A  
                                              l4993 010C                                                l4985 00E9  
                                              l4977 00D7                                                l4969 00B8  
                                              l4889 0F08                                                l4897 0E2A  
                                              l5793 0DB0                                                l5785 0D9C  
                                              l5777 0D8D                                                l4995 0114  
                                              l4979 00DB                                                l4899 0E35  
                                              l5795 0DB2                                                l5787 0DA8  
                                              l5779 0D8E                                                l4997 011C  
                                              l4989 00F2                                                l5797 0DB4  
                                              l5789 0DAC                                                l4999 011E  
                                              l5799 0DB6                                                STR_1 082D  
                                              STR_2 0847                                                STR_3 0861  
                                              STR_4 0820                                                STR_5 083A  
                                              STR_6 0854                                                STR_7 086E  
                                              STR_8 087B                                                _FERR 00C2  
                                              u4000 00A5                                                u4001 00A4  
                                              u4010 00AB                                                u4011 00AA  
                                              u4100 0155                                                u4020 00B0  
                                              u4101 0154                                                u4021 00AF  
                                              u4110 016E                                                u4030 00CB  
                                              u4111 016D                                                u4031 00CA  
                                              u4200 01BF                                                u4120 0176  
                                              u4040 00E9                                                u4201 01BE  
                                              u4121 0175                                                u4105 0151  
                                              u4041 00E8                                                u4210 01D1  
                                              u4050 0123                                                u4211 01D0  
                                              u4051 0122                                                u4220 01E0  
                                              u4140 0185                                                u4300 0F91  
                                              u4141 0184                                                u4301 0F90  
                                              u4230 01FD                                                u4231 01FC  
                                              u4135 017A                                                u4400 054E  
                                              u4240 021A                                                u4160 0199  
                                              u4080 0139                                                u4320 0FB3  
                                              u4401 054D                                                u4241 0219  
                                              u4225 01DB                                                u4161 0198  
                                              u4081 0138                                                u4065 0125  
                                              u4321 0FB2                                                u4250 022F  
                                              u4170 019E                                                u4251 022E  
                                              u4235 01F9                                                u4171 019D  
                                              u4155 0188                                                u4075 012E  
                                              u4315 0FA5                                                u4180 01B2  
                                              u4340 0FC3                                                u4260 0F4E  
                                              u4245 0216                                                u4181 01B1  
                                              u4341 0FC2                                                u4261 0F4D  
                                              u4414 0555                                                u4190 01B9  
                                              u4350 0FC9                                                u4270 0F52  
                                              u4415 0553                                                u4191 01B8  
                                              u4095 013C                                                u4351 0FC8  
                                              u4335 0FB8                                                u4271 0F51  
                                              u4520 0635                                                u4504 05F9  
                                              u4424 0566                                                u3800 0EB8  
                                              u4360 0FCD                                                u4280 0F72  
                                              u4521 0634                                                u4505 05F7  
                                              u4425 0564                                                u3801 0EB7  
                                              u4361 0FCC                                                u4281 0F71  
                                              u4514 0609                                                u4434 0577  
                                              u3810 0ED4                                                u3730 0DD4  
                                              u4370 0FE2                                                u4515 0607  
                                              u4435 0575                                                u3811 0ED3  
                                              u3731 0DD3                                                u4604 06B0  
                                              u4460 05C2                                                u4444 0588  
                                              u3820 0EE0                                                u3900 0E67  
                                              u4380 0FF2                                                u4605 06AE  
                                              u4461 05C1                                                u4445 0586  
                                              u3821 0EDF                                                u3901 0E66  
                                              u4381 0FF1                                                u4614 06BF  
                                              u4534 063C                                                u4454 0599  
                                              u3750 0DE8                                                u4390 0FF6  
                                              u5350 0CB7                                                u4615 06BD  
                                              u4535 063A                                                u4455 0597  
                                              u3831 0EEF                                                u3751 0DE7  
                                              u4391 0FF5                                                u4375 0FDD  
                                              u4295 0F83                                                u5351 0CB6  
                                              u4624 06CE                                                u4544 064A  
                                              u3840 0F08                                                u3832 0EF0  
                                              u3920 0E79                                                u4800 0454  
                                              u5360 0CC8                                                u4625 06CC  
                                              u4545 0648                                                u3841 0F07  
                                              u3833 0EF5                                                u3921 0E78  
                                              u3745 0DD9                                                u5361 0CC7  
                                              u4634 06DD                                                u4554 0658  
                                              u4474 05C9                                                u3834 0EF6  
                                              u3930 0E80                                                u3770 0E03  
                                              u4810 0493                                                u4635 06DB  
                                              u4555 0656                                                u4475 05C7  
                                              u3851 0F17                                                u3835 0EFB  
                                              u3931 0E7F                                                u3915 0E69  
                                              u3771 0E02                                                u4811 0492  
                                              u4580 069A                                                u4564 0666  
                                              u4484 05D9                                                u3860 0F42  
                                              u3852 0F18                                                u3836 0EFC  
                                              u4820 04A6                                                _RCIF 0065  
                                              u4581 0699                                                u4565 0664  
                                              u4485 05D7                                                u3861 0F41  
                                              u3853 0F1D                                                u3765 0DEA  
                                              u4813 048F                                                u4805 044F  
                                              u4574 0674                                                u4494 05E9  
                                              u3854 0F1E                                                u3950 0E91  
                                              u3870 0E35                                                u3790 0E21  
                                              u4830 04CF                                                u4575 0672  
                                              u4495 05E7                                                u3855 0F23  
                                              u3951 0E90                                                u3871 0E34  
                                              u3791 0E20                                                u3775 0DFF  
                                              u3856 0F24                                                u3960 0E96  
                                              u3880 0E4C                                                u3865 0F3E  
                                              u3961 0E95                                                u3945 0E83  
                                              u3785 0E13                                                u4841 04E1  
                                              u4825 04A1                                                u4594 06A1  
                                              u3970 007A                                                u3890 0E60  
                                              u4850 0530                                                u4842 04E2  
                                              u4770 040C                                                u4595 069F  
                                              u3971 0079                                                u3891 0E5F  
                                              u4851 052F                                                u4843 04E7  
                                              u4835 04CA                                                u4771 040B  
                                              u3980 0080                                                u4844 04E8  
                                              u4780 041F                                                u3981 007F  
                                              u3885 0E47                                                u4845 04ED  
                                              u4773 0408                                                u3990 0085  
                                              u4846 04EE                                                u3991 0084  
                                              u4791 0431                                                u4792 0432  
                                              u4793 0437                                                u4785 041A  
                                              u4794 0438                                                _OERR 00C1  
                                              u4795 043D                                                u4796 043E  
                                              _TMR0 0001                                                _TMR2 0011  
                              _lcd_4bit_send_string 0000                      _I2C_DefaultInterruptHandle_Rec 00DE  
                    _I2C_DefaultInterruptHandle_Req 00DF                                                _R_nW 04A2  
                                              _Wire 00A0                            _RB4_InterruptHandler_LOW 00DA  
                                              _main 07D1                                    __end_of_CCP1_ISR 0C18  
                                  __end_of_CCP2_ISR 0C1C                                                fp_u0 0046  
                                              fp_u1 0047                                                fp_u2 0048  
                                              fp_u3 0049                                                fp_u4 004A  
                                              fp_u5 004B                                                fp_u9 004F  
                          _RB7_InterruptHandler_LOW 00D4                                                btemp 007E  
                             ?_HAL_USART_Write_Char 0070                                                start 0010  
                                   ___fldiv@new_exp 004E                          _lcd_4bit_scrollDisplayLeft 0000  
                          ??_USART_ASYNC_RX_Restart 0070                                    __end_of_INT0_ISR 0C0B  
                                     _EUSART_RX_ISR 0D3D                                       ___fltol@sign1 0028  
                                     _EUSART_TX_ISR 0003                                               _ADCS0 00FE  
                                             _ADCS1 00FF                                               _ADCS2 04FE  
                                             ?_main 0070                                               _CCP1X 00BD  
                                   __end_of___fldiv 023C                                               _CCP1Y 00BC  
                                             _CCP2X 00ED                                               _CCP2Y 00EC  
                                             _CCPR1 0015                                               _CCPR2 001B  
                                   __end_of___fltol 0EA2                                     __end_of___lldiv 0E2A  
                                             i1l421 0C13                                               i1l562 0C1B  
                                             i1l900 0CA8                                               i1l557 0C17  
                                             i1l903 0CAF                                               i1l907 0C29  
                                             i1l942 0C0A                                               i1l953 0C48  
                                             i1l964 0C51                                               i1l975 0C5A  
                                             i1l986 0C63                                               _RCREG 001A  
                                             _TMR1H 000F                                               _TMR1L 000E  
                                             _SPBRG 0099                                               _PORTA 0005  
                                             _PORTB 0006                                               _PORTC 0007  
                                             _PORTD 0008                                               _PORTE 0009  
                                             _TRISA 0085                                               _TRISB 0086  
                                             _TRISC 0087                                               _TRISD 0088  
                                             _TRISE 0089                                               _SSPIF 0063  
                                             _TXREG 0019                                    __end_of_TMR0_ISR 0C38  
                                  __end_of_TMR1_ISR 0C97                                    __end_of_TMR2_ISR 0800  
                                             _check 00DD                                               fp_u11 0050  
                                             fp_u12 0051                                     __end_of_pinMode 062D  
                                             fpbase 0045                                               pclath 000A  
                        ?_HAL_USART_Write_String_ln 0071                                               status 0003  
                                             wtemp0 007E                              fp__HAL_USART_Read_Char 0061  
                       _lcd_4bit_scrollDisplayRight 0000                                __end_of_digitalWrite 0700  
                                   __initialization 0013                                        __end_of_main 07F6  
                                         ??_ADC_ISR 0070                                      ?_EUSART_RX_ISR 0070  
                                    ?_EUSART_TX_ISR 0070                                              ??_main 006E  
                         _HAL_I2C_Master_Send_Start 0000                                           ??_RB4_ISR 0070  
                                         ??_RB5_ISR 0070                                           ??_RB6_ISR 0070  
                                         ??_RB7_ISR 0070                                   __end_of_GPIO_Init 07D1  
                        _EUSART_OverrunErrorHandler 00C8                                              _ADRESH 001E  
                                            _ADRESL 009E                                              _CCPR1L 0015  
                                            _CCPR2L 001B                                              i1l1100 0358  
                                            i1l1110 03B2                                              i1l1102 0369  
                                            i1l1112 03C3                                              i1l1104 037A  
                                            i1l1114 03D4                                              i1l1106 038B  
                                            i1l1220 0C81                                              i1l1108 03A1  
                                            i1l1221 0C80                                              i1l1117 03E5  
                                            i1l1223 0C85                                              i1l1224 0C86  
                                            i1l1080 0263                                              i1l1090 02F0  
                                            i1l1082 027E                                              i1l1219 0C7C  
                                            i1l1316 0C96                                              i1l1092 030C  
                                            i1l1084 029A                                              i1l1094 0329  
                                            i1l1086 02B7                                              i1l1078 0249  
                                            i1l1432 0C6D                                              i1l1520 0CF6  
                                            i1l1256 0C37                                              i1l1096 033A  
                                            i1l1088 02D3                                              i1l1450 0D3C  
                                            i1l1522 0D04                                              i1l1098 0347  
                                            i1l1435 0C6E                                              i1l1363 07FF  
                                            i1l1438 0C78                                              i1l1518 0CF2  
                                            i1l1470 0003                                              i1l1465 0C24  
                                            i1l1482 0C1F                                              i1l1485 0C2F  
                                            i1l1479 0D74                                              i1l5321 0CDD  
                                            i1l5315 0C1C                                              i1l5323 0CE3  
                                            i1l5317 0C2A                                              i1l5325 0CE5  
                                            i1l5503 0C14                                              i1l5327 0CEF  
                                            i1l5319 0CD4                                              i1l5329 0CF8  
                                            i1l5601 0C41                                              i1l5603 0C42  
                                            i1l5509 0C18                                              i1l5623 0C51  
                                            i1l5615 0C4A                                              i1l5631 0C54  
                                            i1l4833 0C64                                              i1l4817 0C6E  
                                            i1l4841 0D0A                                              i1l5609 0C48  
                                            i1l5617 0C4B                                              i1l4835 0C6A  
                                            i1l4819 0C74                                              i1l4843 0D1C  
                                            i1l5651 0C63                                              i1l5643 0C5C  
                                            i1l5723 0C30                                              i1l5731 0C8A  
                                            i1l4845 0D22                                              i1l5581 0CA1  
                                            i1l5637 0C5A                                              i1l5629 0C53  
                                            i1l5645 0C5D                                              i1l5725 0C31  
                                            i1l5733 0C90                                              i1l4847 0D35  
                                            i1l4839 0D05                                              i1l5751 0D4A  
                                            i1l5743 0003                                              i1l5591 0C25  
                                            i1l5583 0CA2                                              i1l4849 0C20  
                                            i1l5761 0D6C                                              i1l5753 0D51  
                                            i1l5585 0CA7                                              i1l5577 0C97  
                                            i1l5729 0C87                                              i1l5737 07F6  
                                            i1l6801 0293                                              i1l5499 0C10  
                                            i1l5755 0D57                                              i1l5747 0D3D  
                                            i1l5595 0C09                                              i1l5587 0CAE  
                                            i1l5579 0C9A                                              i1l5763 0C79  
                                            i1l5739 07F9                                              i1l6811 02AF  
                                            i1l6803 0294                                              i1l5757 0D5F  
                                            i1l5749 0D44                                              i1l6821 02CC  
                                            i1l6813 02B1                                              i1l6805 029E  
                                            i1l5759 0D66                                              i1l6831 02E8  
                                            i1l6823 02CD                                              i1l6815 02BB  
                                            i1l6807 02A2                                              i1l6841 0305  
                                            i1l6833 02EA                                              i1l6825 02D7  
                                            i1l6817 02BF                                              i1l6809 02A8  
                                            i1l6851 0321                                              i1l6843 0306  
                                            i1l6835 02F4                                              i1l6827 02DB  
                                            i1l6819 02C5                                              i1l6771 0240  
                                            i1l6861 0342                                              i1l6853 0323  
                                            i1l6845 0310                                              i1l6837 02F8  
                                            i1l6829 02E1                                              i1l6781 025C  
                                            i1l6773 0244                                              i1l6871 036F  
                                            i1l6863 034D                                              i1l6855 032F  
                                            i1l6847 0314                                              i1l6839 02FE  
                                            i1l6791 0276                                              i1l6783 025D  
                                            i1l6775 024D                                              i1l6881 0397  
                                            i1l6873 0375                                              i1l6865 0353  
                                            i1l6857 0335                                              i1l6849 031A  
                                            i1l6793 0278                                              i1l6785 0267  
                                            i1l6777 0251                                              i1l6769 023C  
                                            i1l6891 03BE                                              i1l6883 039C  
                                            i1l6875 0380                                              i1l6867 035E  
                                            i1l6859 033E                                              i1l6795 0282  
                                            i1l6787 026B                                              i1l6779 0257  
                                            i1l6893 03C9                                              i1l6885 03A7  
                                            i1l6877 0386                                              i1l6869 0364  
                                            i1l6797 0286                                              i1l6789 0271  
                                            i1l6895 03CF                                              i1l6887 03AD  
                                            i1l6879 0391                                              i1l6799 028C  
                                            i1l6897 03DA                                              i1l6889 03B8  
                                            i1l6899 03E0                                              u520_20 0C50  
                                            u520_21 0C4F                                              u521_20 0C59  
                                            u521_21 0C58                                              u530_20 0D57  
                                            u522_20 0C62                                              u530_21 0D56  
                                            u522_21 0C61                                              u371_20 0C6A  
                                            u531_20 0D66                                              u371_21 0C69  
                                            u531_21 0D65                                              u372_20 0D35  
                                            u532_20 0D6C                                              u516_20 0CA1  
                                            u700_20 03BE                                              u372_21 0D34  
                                            u532_21 0D6B                                              u516_21 0CA0  
                                            u700_21 03BD                                              u517_20 0CA7  
                                            u533_20 0C80                                              u701_20 03C9  
                                            u517_21 0CA6                                              u533_21 0C7F  
                                            u701_21 03C8                                              u518_20 0CAE  
                                            u534_20 0C85                                              u702_20 03CF  
                                            u518_21 0CAD                                              u534_21 0C84  
                                            u702_21 03CE                                              u519_20 0C47  
                                            u703_20 03DA                                              u519_21 0C46  
                                            u703_21 03D9                                              u368_20 0C74  
                                            u528_20 0D44                                              u704_20 03E0  
                                            u368_21 0C73                                              u528_21 0D43  
                                            u704_21 03DF                                              u529_20 0D51  
                                            u529_21 0D50                                              u650_20 0244  
                                            u650_21 0243                                              u651_20 024D  
                                            u651_21 024C                                              u660_20 0286  
                                            u652_20 0251                                              u660_21 0285  
                                            u652_21 0250                                              u661_20 028C  
                                            u653_20 0257                                              u661_21 028B  
                                            u653_21 0256                                              u486_20 0CE3  
                                            u670_20 02CC                                              u662_20 0293  
                                            u654_20 025C                                              u486_21 0CE2  
                                            u670_21 02CB                                              u662_21 0292  
                                            u654_21 025B                                              u487_20 0CF6  
                                            u671_20 02D7                                              u663_20 029E  
                                            u655_20 0267                                              u487_21 0CF5  
                                            u671_21 02D6                                              u663_21 029D  
                                            u655_21 0266                                              u680_20 0314  
                                            u672_20 02DB                                              u664_20 02A2  
                                            u656_20 026B                                              u680_21 0313  
                                            u672_21 02DA                                              u664_21 02A1  
                                            u656_21 026A                                              u681_20 031A  
                                            u673_20 02E1                                              u665_20 02A8  
                                            u657_20 0271                                              u649_20 0240  
                                            u681_21 0319                                              u673_21 02E0  
                                            u665_21 02A7                                              u657_21 0270  
                                            u649_21 023F                                              u690_20 0364  
                                            u682_20 0321                                              u674_20 02E8  
                                            u666_20 02AF                                              u658_20 0276  
                                            u690_21 0363                                              u682_21 0320  
                                            u674_21 02E7                                              u666_21 02AE  
                                            u658_21 0275                                          __i1fptable 0055  
                                            u691_20 036F                                              u683_20 032F  
                                            u675_20 02F4                                              u667_20 02BB  
                                            u659_20 0282                                              u691_21 036E  
                                            u683_21 032E                                              u675_21 02F3  
                                            u667_21 02BA                                              u659_21 0281  
                                            u692_20 0375                                              u684_20 0335  
                                            u676_20 02F8                                              u668_20 02BF  
                                            u692_21 0374                                              u684_21 0334  
                                            u676_21 02F7                                              u668_21 02BE  
                                            u693_20 0380                                              u685_20 033E  
                                            u677_20 02FE                                              u669_20 02C5  
                                            u693_21 037F                                              u685_21 033D  
                                            u677_21 02FD                                              u669_21 02C4  
                                            u694_20 0386                                              u686_20 0342  
                                            u678_20 0305                                              u694_21 0385  
                                            u686_21 0341                                              u678_21 0304  
                                            u695_20 0391                                              u687_20 034D  
                                            u679_20 0310                                              u695_21 0390  
                                            u687_21 034C                                              u679_21 030F  
                            ??_HAL_USART_Write_Char 0071                                              u696_20 0397  
                                            u688_20 0353                                              u696_21 0396  
                                            u688_21 0352                                              u697_20 03A7  
                                            u689_20 035E                                              u697_21 03A6  
                                            u689_21 035D                                              u698_20 03AD  
                                            u698_21 03AC                                              u699_20 03B8  
                                            u699_21 03B7                                              _SSPADD 0093  
                                            _SSPBUF 0013                                    __end_of__fptable 0055  
                 __end_of_HAL_USART_Write_String_ln 0D3D                                    __end_of___xxtofl 1000  
                         fp__HAL_USART_Write_String 0000                        ?_USART_Baud_Rate_Calculation 0056  
                                            _Serial 00B6                                              ___flge 0EA2  
                                         ??___fldiv 0044                                           ??___fltol 0024  
                                         ??___lldiv 0028                                      _HAL_I2C_DeInit 0000  
                                            fptable 0040         _I2C_Report_Receive_Overflow_InterruptHandle 00E0  
       _SPI_Report_Receive_Overflow_InterruptHandle 00D2                                           ?_CCP1_ISR 0070  
                                         ?_CCP2_ISR 0070                                        __pdataCOMMON 007A  
                                            fptotal 0007                                           ??_pinMode 0022  
                                            saved_w 007E                  __end_of_USART_RX_Interrupt_Handler 0D05  
                        _USART_RX_Interrupt_Handler 0CD4                                          ___flge@ff1 0020  
                                        ___flge@ff2 0024                                        ___xxtofl@arg 0038  
                               _check@hal_spi$F3537 00D0                                        ___xxtofl@exp 0037  
                                      ___xxtofl@val 002E                             __end_of__initialization 003C  
                                         ?_INT0_ISR 0070                             HAL_USART_Read_Char@data 0070  
                    USART_RX_Interrupt_Handler@data 0075                                          ___fltol@f1 0020  
                                       pinMode@Pinx 0020                             _lcd_4bit_send_char_data 0000  
                                       pinMode@mode 0021                       ??_USART_Baud_Rate_Calculation 005A  
                                 RB5_ISR@RB5_Source 0070                                      __pcstackCOMMON 0070  
                                      __pidataBANK1 0C0D                                           ?_TMR0_ISR 0070  
                                   ??_EUSART_RX_ISR 0076                                           ?_TMR1_ISR 0070  
                                         ?_TMR2_ISR 0070                                     ??_EUSART_TX_ISR 0070  
                                        ??_CCP1_ISR 0070                                          ??_CCP2_ISR 0070  
                                    _OPTION_REGbits 0081                              _USART_ASYNC_RX_Restart 0C20  
                                      _HAL_I2C_Init 0000                                        _HAL_I2C_Read 0000  
                                        __pbssBANK1 00A0                               _INT0_InterruptHandler 00DC  
                                        ??_INT0_ISR 0070                              _HAL_USART_ASYNC_DeInit 0000  
                                        __pmaintext 07D1                                             ?___flge 0020  
                                        ??_TMR0_ISR 0070                                          ??_TMR1_ISR 0070  
                                        ??_TMR2_ISR 0070                                          __pintentry 0004  
                                           _ADC_ISR 0C10                                   RB7_ISR@RB7_Source 0070  
                                    _lcd_4bit_clear 0000                                      _lcd_4bit_blink 0000  
                            _HAL_USART_is_Available 0000                                             _RB4_ISR 0C40  
                                           _RB5_ISR 0C49                                             _RB6_ISR 0C52  
                                           _RB7_ISR 0C5B                                           ?___xxtofl 002E  
                         _RB6_InterruptHandler_HIGH 00D7                                       ?_MSSP_I2C_ISR 0070  
                                      _HAL_SPI_Init 0000                          _SPI_DefaultInterruptHandle 00D1  
                                      _digitalWrite 062D                                          __stringtab 0800  
                                        _btn_values 0810                                             i1fpbase 005A  
                       ??_HAL_USART_Write_String_ln 0073                            _RB6_InterruptHandler_LOW 00D6  
                                     ?_MSSP_SPI_ISR 0070                                   ??_MSSP_I2C_BC_ISR 0070  
                              _ADC_InterruptHandler 00E4                             fp__HAL_USART_Write_Char 0064  
                                _HAL_SPI_Write_Char 0000                                             ___fldiv 006D  
                                           ___fltol 0E2A                                             ___lldiv 0DC2  
                                         _CMCONbits 009C                        __end_of_HAL_USART_ASYNC_Init 0DC2  
                                           __ptext1 0CB0                                             __ptext2 0D75  
                                           __ptext3 03F0                                             __ptext4 0F46  
                                           __ptext5 0DC2                                             __ptext6 0E2A  
                                           __ptext7 0EA2                                             __ptext8 006D  
                                           __ptext9 0700                                 __size_of__i1fptable 0018  
                    HAL_USART_Write_String_ln@_data 0071                       HAL_USART_Write_Char@character 0070  
                                         _T1CONbits 0010                                      ??_MSSP_I2C_ISR 0070  
                                         _T2CONbits 0012                                          ??___xxtofl 0032  
                               _HAL_USART_Read_Char 0C64                                             _pinMode 0546  
                   USART_Baud_Rate_Calculation@baud 0056                                    _lcd_4bit_display 0000  
         USART_Baud_Rate_Calculation@Baud_Rate_Temp 0066                                             clrloop0 0C39  
                                         _GPIO_Init 0700                                end_of_initialization 003C  
                                    _HAL_SPI_Deinit 0000                                      ??_MSSP_SPI_ISR 0070  
                              ?_HAL_USART_Read_Char 0070                                     ___lldiv@divisor 0020  
                                   ___lldiv@counter 002D                                 _lcd_4bit_autoscroll 0000  
                                         _RCSTAbits 0018                                     _HAL_I2C_Println 0000  
                _HAL_I2C_Master_Send_Repeated_Start 0000                           _HAL_USART_Write_String_ln 0D05  
                                         _PORTBbits 0006                                    _InterruptManager 023C  
                        entry__HAL_USART_ASYNC_Init 0052                                 _lcd_4bit_no_display 0000  
                                     ___xxtofl@sign 0036                         ?_USART_RX_Interrupt_Handler 0070  
                                       ___fldiv@grs 0050                                         ___fldiv@rem 0049  
                                        ?_GPIO_Init 0070                                         _CCP1CONbits 0017  
                                       _CCP2CONbits 001D                                           _TXSTAbits 0098  
                             ??_HAL_USART_Read_Char 0070                                        pinMode@Portx 0024  
                fp__HAL_USART_Set_Interrupt_Handler 004C             __end_of_HAL_USART_Set_Interrupt_Handler 0CD4  
                 ??_HAL_USART_Set_Interrupt_Handler 0022                    ?_HAL_USART_Set_Interrupt_Handler 0020  
                   _HAL_USART_Set_Interrupt_Handler 0CB0                                 _lcd_4bit_set_cursor 0000  
                         fp__HAL_USART_ASYNC_DeInit 0000                       convert_uint16_to_string@F1685 00BE  
                                    __end_of___flge 0F46                                       __pidataCOMMON 0C0B  
            __end_of_EUSART_FramingErrorHandler_Isr 0C20                      _EUSART_FramingErrorHandler_Isr 0C1C  
                                    _timer0_preload 00C6                                      _timer1_preload 00C4  
                                    _timer2_preload 00CC                             ?_USART_ASYNC_RX_Restart 0070  
                         fp__HAL_USART_is_Available 0000                                 start_initialization 0013  
                              _HAL_USART_ASYNC_Init 0D75                           _EUSART_RxInterruptHandler 00CA  
                              __end_of_MSSP_I2C_ISR 0CB0                          _EUSART_FramingErrorHandler 00C9  
                                          ??___flge 0028                                   _HAL_SPI_Available 0000  
                                       __pdataBANK1 00E5                                            ?_ADC_ISR 0070  
                             __end_of_EUSART_RX_ISR 0D75                               __end_of_EUSART_TX_ISR 0004  
                              _HAL_SPI_Write_String 0000                                       _HAL_I2C_Print 0000  
                                     _HAL_I2C_Write 0000                      __end_of_USART_ASYNC_RX_Restart 0C25  
                              __end_of_MSSP_SPI_ISR 0C87                                  __end_of__i1fptable 006D  
                                         ___fldiv@a 003C                                           ___fldiv@b 0040  
                                          ?_RB4_ISR 0070                                            ?_RB5_ISR 0070  
                                          ?_RB6_ISR 0070                                            ?_RB7_ISR 0070  
                                         ___latbits 0002         _I2C_Report_Write_Collision_InterruptHandler 00E1  
       _SPI_Report_Write_Collision_InterruptHandler 00D3                                   _HAL_SPI_Read_Char 0000  
                                     __pcstackBANK0 0020                                   __size_of__fptable 0015  
                                   _MSSP_I2C_BC_ISR 0C25                                         ??_GPIO_Init 0025  
                     fp__USART_RX_Interrupt_Handler 006A                               ?_HAL_USART_ASYNC_Init 006A  
               __end_of_USART_Baud_Rate_Calculation 0546                         _USART_Baud_Rate_Calculation 03F0  
                             _TMR0_InterruptHandler 00CF              __end_of_EUSART_OverrunErrorHandler_Isr 0C30  
                    _EUSART_OverrunErrorHandler_Isr 0C2A                                           __pfunctab 0040  
                                          ?___fldiv 003C                                            ?___fltol 0020  
                                          ?___lldiv 0020                                       _lcd_4bit_home 0000  
                                         __pstrings 0800                           _RB4_InterruptHandler_HIGH 00DB  
                                          _CCP1_ISR 0C14                                            _CCP2_ISR 0C18  
                                          ?_pinMode 0020                           _RB7_InterruptHandler_HIGH 00D5  
                                   _lcd_4bit_cursor 0000                                   interrupt_function 0004  
                          _RB5_InterruptHandler_LOW 00D8                                            _INT0_ISR 0C09  
                                          _RB4_Flag 007A                                            _RB5_Flag 00E7  
                                          _RB6_Flag 00E6                                            _RB7_Flag 00E5  
                                 RB4_ISR@RB4_Source 0070                            __end_of_InterruptManager 03F0  
                                         clear_ram0 0C38                                            _PIE1bits 008C  
                                          _PIE2bits 008D                                            _PIR1bits 000C  
                                          _PIR2bits 000D                                            _TMR0_ISR 0C30  
                                          _TMR1_ISR 0C87                                            _TMR2_ISR 07F6  
                                _lcd_4bit_no_cursor 0000                                          _ADCON0bits 001F  
                                       __stringbase 080F                                          _ADCON1bits 009F  
                           __end_of_MSSP_I2C_BC_ISR 0C2A                                            i1fptable 0055  
                                          i1fptotal 000C                              ??_HAL_USART_ASYNC_Init 006E  
                          _HAL_I2C_Master_Send_Stop 0000                                            _i2c_mode 007B  
                                 RB6_ISR@RB6_Source 0070                               _CCP1_InterruptHandler 00E3  
                                __end_of__stringtab 0810                                  __end_of_btn_values 0820  
                             _lcd_4bit_noAutoscroll 0000                        __end_of_HAL_USART_Write_Char 0C79  
                             _TMR1_InterruptHandler 00CE                                            __fptable 0040  
                                          ___xxtofl 0F46                                        _MSSP_I2C_ISR 0C97  
                                          __ptext10 0546                                            __ptext11 062D  
                                          __ptext20 0C79                                            __ptext12 023C  
                                          __ptext21 0C97                                            __ptext13 07F6  
                                          __ptext30 0C2A                                            __ptext22 0C25  
                                          __ptext14 0C87                                            __ptext31 0C20  
                                          __ptext23 0C09                                            __ptext15 0C30  
                                          __ptext32 0C1C                                            __ptext24 0003  
                                          __ptext16 0C5B                                            __ptext33 0C18  
                                          __ptext25 0D3D                                            __ptext17 0C52  
                                          __ptext34 0C14                                            __ptext26 0CD4  
                                          __ptext18 0C49                                            __ptext35 0C10  
                                          __ptext27 0D05                                            __ptext19 0C40  
                                          __ptext28 0C6E                                            __ptext29 0C64  
                       __end_of_HAL_USART_Read_Char 0C6E                   fp__EUSART_FramingErrorHandler_Isr 005B  
                  ??_EUSART_FramingErrorHandler_Isr 0070                     ?_EUSART_FramingErrorHandler_Isr 0070  
                          HAL_USART_ASYNC_Init@baud 006A                                        _MSSP_SPI_ISR 0C79  
                                  _keypad_get_value 0000  HAL_USART_Set_Interrupt_Handler@InterruptHandler_Rx 0021  
HAL_USART_Set_Interrupt_Handler@InterruptHandler_Tx 0020                                   _lcd_4bit_no_blink 0000  
                           _HAL_I2C_Set_Handler_Rec 0000                             _HAL_I2C_Set_Handler_Req 0000  
                                  ?_MSSP_I2C_BC_ISR 0070                                          _INTCONbits 000B  
                      fp__HAL_USART_Write_String_ln 0067                                       ?_digitalWrite 0020  
                        entry__HAL_USART_Write_Char 0064                                _lcd_4bit_leftToRight 0000  
                                 digitalWrite@Portx 0024                                            intlevel1 0040  
                                 digitalWrite@logic 0021                           _EUSART_TxInterruptHandler 00CB  
                                  ___lldiv@dividend 0024                           _lcd_4bit_save_custom_char 0000  
                 _MSSP_SPI_Interrupt_Configurations 0000                                           stringcode 080A  
             HAL_USART_Write_String_ln@char_counter 0073                             _HAL_SPI_Write_String_ln 0000  
                                 _HAL_I2C_available 0000                                    digitalWrite@Pinx 0020  
                 fp__EUSART_OverrunErrorHandler_Isr 005E                    ??_EUSART_OverrunErrorHandler_Isr 0070  
                   ?_EUSART_OverrunErrorHandler_Isr 0070                                    ___lldiv@quotient 0029  
                                    ??_digitalWrite 0022                                            stringdir 080A  
                                          stringtab 0800                                         _SSPCON2bits 0091  
                              _HAL_I2C_Request_From 0000                               _CCP2_InterruptHandler 00E2  
                            _HAL_USART_Write_String 0000                             fp__HAL_USART_ASYNC_Init 0052  
                             _TMR2_InterruptHandler 00CD                                          _SSPCONbits 0014  
                              _HAL_USART_Write_Char 0C6E                                   ?_InterruptManager 0070  
                                  _HAL_I2C_setClock 0000  
